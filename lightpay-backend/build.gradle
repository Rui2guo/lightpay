buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.google.protobuf:protobuf-gradle-plugin:0.8.3")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'com.google.protobuf'

group = 'lightpay'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

def grpcVersion = '1.10.0'
def nettyTcNativeVersion = '2.0.7.Final'

repositories {
	mavenCentral()
}

war {
	baseName = 'lightpay-api-server'
}

springBoot {
	executable = true
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	runtime('com.h2database:h2')
	compile('org.apache.commons:commons-lang3:3.6')
	compile('org.apache.commons:commons-collections4:4.1')
	compile('commons-codec:commons-codec:1.11')
	compile('commons-io:commons-io:2.6')
	compile('org.apache.httpcomponents:httpclient:4.5.5')

	compile("com.google.api.grpc:proto-google-common-protos:1.0.6")
	compile("io.grpc:grpc-core:${grpcVersion}")
	compile("io.grpc:grpc-context:${grpcVersion}")
	compile("io.grpc:grpc-auth:${grpcVersion}")
	compile("io.grpc:grpc-netty:${grpcVersion}")
	compile("io.grpc:grpc-protobuf:${grpcVersion}")
	compile("io.grpc:grpc-stub:${grpcVersion}")
	compile("io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}")
	compile("com.auth0:java-jwt:3.3.0")

	runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.projectlombok:lombok')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile("io.grpc:grpc-testing:${grpcVersion}")
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.5.1-1'
	}

	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}

	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}
