// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.ClosedChannelUpdate}
 */
public  final class ClosedChannelUpdate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.ClosedChannelUpdate)
    ClosedChannelUpdateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ClosedChannelUpdate.newBuilder() to construct.
  private ClosedChannelUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ClosedChannelUpdate() {
    chanId_ = 0L;
    capacity_ = 0L;
    closedHeight_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ClosedChannelUpdate(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            chanId_ = input.readUInt64();
            break;
          }
          case 16: {

            capacity_ = input.readInt64();
            break;
          }
          case 24: {

            closedHeight_ = input.readUInt32();
            break;
          }
          case 34: {
            lightpay.lnd.grpc.ChannelPoint.Builder subBuilder = null;
            if (chanPoint_ != null) {
              subBuilder = chanPoint_.toBuilder();
            }
            chanPoint_ = input.readMessage(lightpay.lnd.grpc.ChannelPoint.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(chanPoint_);
              chanPoint_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ClosedChannelUpdate_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ClosedChannelUpdate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.ClosedChannelUpdate.class, lightpay.lnd.grpc.ClosedChannelUpdate.Builder.class);
  }

  public static final int CHAN_ID_FIELD_NUMBER = 1;
  private long chanId_;
  /**
   * <pre>
   **
   *The unique channel ID for the channel. The first 3 bytes are the block
   *height, the next 3 the index within the block, and the last 2 bytes are the
   *output index for the channel.
   * </pre>
   *
   * <code>uint64 chan_id = 1;</code>
   */
  public long getChanId() {
    return chanId_;
  }

  public static final int CAPACITY_FIELD_NUMBER = 2;
  private long capacity_;
  /**
   * <code>int64 capacity = 2;</code>
   */
  public long getCapacity() {
    return capacity_;
  }

  public static final int CLOSED_HEIGHT_FIELD_NUMBER = 3;
  private int closedHeight_;
  /**
   * <code>uint32 closed_height = 3;</code>
   */
  public int getClosedHeight() {
    return closedHeight_;
  }

  public static final int CHAN_POINT_FIELD_NUMBER = 4;
  private lightpay.lnd.grpc.ChannelPoint chanPoint_;
  /**
   * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
   */
  public boolean hasChanPoint() {
    return chanPoint_ != null;
  }
  /**
   * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
   */
  public lightpay.lnd.grpc.ChannelPoint getChanPoint() {
    return chanPoint_ == null ? lightpay.lnd.grpc.ChannelPoint.getDefaultInstance() : chanPoint_;
  }
  /**
   * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
   */
  public lightpay.lnd.grpc.ChannelPointOrBuilder getChanPointOrBuilder() {
    return getChanPoint();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (chanId_ != 0L) {
      output.writeUInt64(1, chanId_);
    }
    if (capacity_ != 0L) {
      output.writeInt64(2, capacity_);
    }
    if (closedHeight_ != 0) {
      output.writeUInt32(3, closedHeight_);
    }
    if (chanPoint_ != null) {
      output.writeMessage(4, getChanPoint());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (chanId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, chanId_);
    }
    if (capacity_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, capacity_);
    }
    if (closedHeight_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, closedHeight_);
    }
    if (chanPoint_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getChanPoint());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.ClosedChannelUpdate)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.ClosedChannelUpdate other = (lightpay.lnd.grpc.ClosedChannelUpdate) obj;

    boolean result = true;
    result = result && (getChanId()
        == other.getChanId());
    result = result && (getCapacity()
        == other.getCapacity());
    result = result && (getClosedHeight()
        == other.getClosedHeight());
    result = result && (hasChanPoint() == other.hasChanPoint());
    if (hasChanPoint()) {
      result = result && getChanPoint()
          .equals(other.getChanPoint());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CHAN_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChanId());
    hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCapacity());
    hash = (37 * hash) + CLOSED_HEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getClosedHeight();
    if (hasChanPoint()) {
      hash = (37 * hash) + CHAN_POINT_FIELD_NUMBER;
      hash = (53 * hash) + getChanPoint().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.ClosedChannelUpdate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.ClosedChannelUpdate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.ClosedChannelUpdate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.ClosedChannelUpdate)
      lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ClosedChannelUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ClosedChannelUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.ClosedChannelUpdate.class, lightpay.lnd.grpc.ClosedChannelUpdate.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.ClosedChannelUpdate.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      chanId_ = 0L;

      capacity_ = 0L;

      closedHeight_ = 0;

      if (chanPointBuilder_ == null) {
        chanPoint_ = null;
      } else {
        chanPoint_ = null;
        chanPointBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ClosedChannelUpdate_descriptor;
    }

    public lightpay.lnd.grpc.ClosedChannelUpdate getDefaultInstanceForType() {
      return lightpay.lnd.grpc.ClosedChannelUpdate.getDefaultInstance();
    }

    public lightpay.lnd.grpc.ClosedChannelUpdate build() {
      lightpay.lnd.grpc.ClosedChannelUpdate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.ClosedChannelUpdate buildPartial() {
      lightpay.lnd.grpc.ClosedChannelUpdate result = new lightpay.lnd.grpc.ClosedChannelUpdate(this);
      result.chanId_ = chanId_;
      result.capacity_ = capacity_;
      result.closedHeight_ = closedHeight_;
      if (chanPointBuilder_ == null) {
        result.chanPoint_ = chanPoint_;
      } else {
        result.chanPoint_ = chanPointBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.ClosedChannelUpdate) {
        return mergeFrom((lightpay.lnd.grpc.ClosedChannelUpdate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.ClosedChannelUpdate other) {
      if (other == lightpay.lnd.grpc.ClosedChannelUpdate.getDefaultInstance()) return this;
      if (other.getChanId() != 0L) {
        setChanId(other.getChanId());
      }
      if (other.getCapacity() != 0L) {
        setCapacity(other.getCapacity());
      }
      if (other.getClosedHeight() != 0) {
        setClosedHeight(other.getClosedHeight());
      }
      if (other.hasChanPoint()) {
        mergeChanPoint(other.getChanPoint());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.ClosedChannelUpdate parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.ClosedChannelUpdate) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long chanId_ ;
    /**
     * <pre>
     **
     *The unique channel ID for the channel. The first 3 bytes are the block
     *height, the next 3 the index within the block, and the last 2 bytes are the
     *output index for the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 1;</code>
     */
    public long getChanId() {
      return chanId_;
    }
    /**
     * <pre>
     **
     *The unique channel ID for the channel. The first 3 bytes are the block
     *height, the next 3 the index within the block, and the last 2 bytes are the
     *output index for the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 1;</code>
     */
    public Builder setChanId(long value) {
      
      chanId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The unique channel ID for the channel. The first 3 bytes are the block
     *height, the next 3 the index within the block, and the last 2 bytes are the
     *output index for the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 1;</code>
     */
    public Builder clearChanId() {
      
      chanId_ = 0L;
      onChanged();
      return this;
    }

    private long capacity_ ;
    /**
     * <code>int64 capacity = 2;</code>
     */
    public long getCapacity() {
      return capacity_;
    }
    /**
     * <code>int64 capacity = 2;</code>
     */
    public Builder setCapacity(long value) {
      
      capacity_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 capacity = 2;</code>
     */
    public Builder clearCapacity() {
      
      capacity_ = 0L;
      onChanged();
      return this;
    }

    private int closedHeight_ ;
    /**
     * <code>uint32 closed_height = 3;</code>
     */
    public int getClosedHeight() {
      return closedHeight_;
    }
    /**
     * <code>uint32 closed_height = 3;</code>
     */
    public Builder setClosedHeight(int value) {
      
      closedHeight_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 closed_height = 3;</code>
     */
    public Builder clearClosedHeight() {
      
      closedHeight_ = 0;
      onChanged();
      return this;
    }

    private lightpay.lnd.grpc.ChannelPoint chanPoint_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.ChannelPoint, lightpay.lnd.grpc.ChannelPoint.Builder, lightpay.lnd.grpc.ChannelPointOrBuilder> chanPointBuilder_;
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public boolean hasChanPoint() {
      return chanPointBuilder_ != null || chanPoint_ != null;
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public lightpay.lnd.grpc.ChannelPoint getChanPoint() {
      if (chanPointBuilder_ == null) {
        return chanPoint_ == null ? lightpay.lnd.grpc.ChannelPoint.getDefaultInstance() : chanPoint_;
      } else {
        return chanPointBuilder_.getMessage();
      }
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public Builder setChanPoint(lightpay.lnd.grpc.ChannelPoint value) {
      if (chanPointBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        chanPoint_ = value;
        onChanged();
      } else {
        chanPointBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public Builder setChanPoint(
        lightpay.lnd.grpc.ChannelPoint.Builder builderForValue) {
      if (chanPointBuilder_ == null) {
        chanPoint_ = builderForValue.build();
        onChanged();
      } else {
        chanPointBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public Builder mergeChanPoint(lightpay.lnd.grpc.ChannelPoint value) {
      if (chanPointBuilder_ == null) {
        if (chanPoint_ != null) {
          chanPoint_ =
            lightpay.lnd.grpc.ChannelPoint.newBuilder(chanPoint_).mergeFrom(value).buildPartial();
        } else {
          chanPoint_ = value;
        }
        onChanged();
      } else {
        chanPointBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public Builder clearChanPoint() {
      if (chanPointBuilder_ == null) {
        chanPoint_ = null;
        onChanged();
      } else {
        chanPoint_ = null;
        chanPointBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public lightpay.lnd.grpc.ChannelPoint.Builder getChanPointBuilder() {
      
      onChanged();
      return getChanPointFieldBuilder().getBuilder();
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    public lightpay.lnd.grpc.ChannelPointOrBuilder getChanPointOrBuilder() {
      if (chanPointBuilder_ != null) {
        return chanPointBuilder_.getMessageOrBuilder();
      } else {
        return chanPoint_ == null ?
            lightpay.lnd.grpc.ChannelPoint.getDefaultInstance() : chanPoint_;
      }
    }
    /**
     * <code>.lnrpc.ChannelPoint chan_point = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.ChannelPoint, lightpay.lnd.grpc.ChannelPoint.Builder, lightpay.lnd.grpc.ChannelPointOrBuilder> 
        getChanPointFieldBuilder() {
      if (chanPointBuilder_ == null) {
        chanPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            lightpay.lnd.grpc.ChannelPoint, lightpay.lnd.grpc.ChannelPoint.Builder, lightpay.lnd.grpc.ChannelPointOrBuilder>(
                getChanPoint(),
                getParentForChildren(),
                isClean());
        chanPoint_ = null;
      }
      return chanPointBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.ClosedChannelUpdate)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.ClosedChannelUpdate)
  private static final lightpay.lnd.grpc.ClosedChannelUpdate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.ClosedChannelUpdate();
  }

  public static lightpay.lnd.grpc.ClosedChannelUpdate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ClosedChannelUpdate>
      PARSER = new com.google.protobuf.AbstractParser<ClosedChannelUpdate>() {
    public ClosedChannelUpdate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ClosedChannelUpdate(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ClosedChannelUpdate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ClosedChannelUpdate> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.ClosedChannelUpdate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

