// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.ForwardingEvent}
 */
public  final class ForwardingEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.ForwardingEvent)
    ForwardingEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ForwardingEvent.newBuilder() to construct.
  private ForwardingEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ForwardingEvent() {
    timestamp_ = 0L;
    chanIdIn_ = 0L;
    chanIdOut_ = 0L;
    amtIn_ = 0L;
    amtOut_ = 0L;
    fee_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ForwardingEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            timestamp_ = input.readUInt64();
            break;
          }
          case 16: {

            chanIdIn_ = input.readUInt64();
            break;
          }
          case 32: {

            chanIdOut_ = input.readUInt64();
            break;
          }
          case 40: {

            amtIn_ = input.readUInt64();
            break;
          }
          case 48: {

            amtOut_ = input.readUInt64();
            break;
          }
          case 56: {

            fee_ = input.readUInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ForwardingEvent_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ForwardingEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.ForwardingEvent.class, lightpay.lnd.grpc.ForwardingEvent.Builder.class);
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 1;
  private long timestamp_;
  /**
   * <pre>
   *&#47; Timestamp is the time (unix epoch offset) that this circuit was completed.
   * </pre>
   *
   * <code>uint64 timestamp = 1[json_name = "timestamp"];</code>
   */
  public long getTimestamp() {
    return timestamp_;
  }

  public static final int CHAN_ID_IN_FIELD_NUMBER = 2;
  private long chanIdIn_;
  /**
   * <pre>
   *&#47; The incoming channel ID that carried the HTLC that created the circuit.
   * </pre>
   *
   * <code>uint64 chan_id_in = 2[json_name = "chan_id_in"];</code>
   */
  public long getChanIdIn() {
    return chanIdIn_;
  }

  public static final int CHAN_ID_OUT_FIELD_NUMBER = 4;
  private long chanIdOut_;
  /**
   * <pre>
   *&#47; The outgoing channel ID that carried the preimage that completed the circuit.
   * </pre>
   *
   * <code>uint64 chan_id_out = 4[json_name = "chan_id_out"];</code>
   */
  public long getChanIdOut() {
    return chanIdOut_;
  }

  public static final int AMT_IN_FIELD_NUMBER = 5;
  private long amtIn_;
  /**
   * <pre>
   *&#47; The total amount of the incoming HTLC that created half the circuit.
   * </pre>
   *
   * <code>uint64 amt_in = 5[json_name = "amt_in"];</code>
   */
  public long getAmtIn() {
    return amtIn_;
  }

  public static final int AMT_OUT_FIELD_NUMBER = 6;
  private long amtOut_;
  /**
   * <pre>
   *&#47; The total amount of the outgoign HTLC that created the second half of the circuit.
   * </pre>
   *
   * <code>uint64 amt_out = 6[json_name = "amt_out"];</code>
   */
  public long getAmtOut() {
    return amtOut_;
  }

  public static final int FEE_FIELD_NUMBER = 7;
  private long fee_;
  /**
   * <pre>
   *&#47; The total fee that this payment circuit carried.
   * </pre>
   *
   * <code>uint64 fee = 7[json_name = "fee"];</code>
   */
  public long getFee() {
    return fee_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (timestamp_ != 0L) {
      output.writeUInt64(1, timestamp_);
    }
    if (chanIdIn_ != 0L) {
      output.writeUInt64(2, chanIdIn_);
    }
    if (chanIdOut_ != 0L) {
      output.writeUInt64(4, chanIdOut_);
    }
    if (amtIn_ != 0L) {
      output.writeUInt64(5, amtIn_);
    }
    if (amtOut_ != 0L) {
      output.writeUInt64(6, amtOut_);
    }
    if (fee_ != 0L) {
      output.writeUInt64(7, fee_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (timestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, timestamp_);
    }
    if (chanIdIn_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, chanIdIn_);
    }
    if (chanIdOut_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, chanIdOut_);
    }
    if (amtIn_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, amtIn_);
    }
    if (amtOut_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, amtOut_);
    }
    if (fee_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, fee_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.ForwardingEvent)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.ForwardingEvent other = (lightpay.lnd.grpc.ForwardingEvent) obj;

    boolean result = true;
    result = result && (getTimestamp()
        == other.getTimestamp());
    result = result && (getChanIdIn()
        == other.getChanIdIn());
    result = result && (getChanIdOut()
        == other.getChanIdOut());
    result = result && (getAmtIn()
        == other.getAmtIn());
    result = result && (getAmtOut()
        == other.getAmtOut());
    result = result && (getFee()
        == other.getFee());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    hash = (37 * hash) + CHAN_ID_IN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChanIdIn());
    hash = (37 * hash) + CHAN_ID_OUT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChanIdOut());
    hash = (37 * hash) + AMT_IN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAmtIn());
    hash = (37 * hash) + AMT_OUT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAmtOut());
    hash = (37 * hash) + FEE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFee());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.ForwardingEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.ForwardingEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.ForwardingEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.ForwardingEvent)
      lightpay.lnd.grpc.ForwardingEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ForwardingEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ForwardingEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.ForwardingEvent.class, lightpay.lnd.grpc.ForwardingEvent.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.ForwardingEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      timestamp_ = 0L;

      chanIdIn_ = 0L;

      chanIdOut_ = 0L;

      amtIn_ = 0L;

      amtOut_ = 0L;

      fee_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_ForwardingEvent_descriptor;
    }

    public lightpay.lnd.grpc.ForwardingEvent getDefaultInstanceForType() {
      return lightpay.lnd.grpc.ForwardingEvent.getDefaultInstance();
    }

    public lightpay.lnd.grpc.ForwardingEvent build() {
      lightpay.lnd.grpc.ForwardingEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.ForwardingEvent buildPartial() {
      lightpay.lnd.grpc.ForwardingEvent result = new lightpay.lnd.grpc.ForwardingEvent(this);
      result.timestamp_ = timestamp_;
      result.chanIdIn_ = chanIdIn_;
      result.chanIdOut_ = chanIdOut_;
      result.amtIn_ = amtIn_;
      result.amtOut_ = amtOut_;
      result.fee_ = fee_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.ForwardingEvent) {
        return mergeFrom((lightpay.lnd.grpc.ForwardingEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.ForwardingEvent other) {
      if (other == lightpay.lnd.grpc.ForwardingEvent.getDefaultInstance()) return this;
      if (other.getTimestamp() != 0L) {
        setTimestamp(other.getTimestamp());
      }
      if (other.getChanIdIn() != 0L) {
        setChanIdIn(other.getChanIdIn());
      }
      if (other.getChanIdOut() != 0L) {
        setChanIdOut(other.getChanIdOut());
      }
      if (other.getAmtIn() != 0L) {
        setAmtIn(other.getAmtIn());
      }
      if (other.getAmtOut() != 0L) {
        setAmtOut(other.getAmtOut());
      }
      if (other.getFee() != 0L) {
        setFee(other.getFee());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.ForwardingEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.ForwardingEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long timestamp_ ;
    /**
     * <pre>
     *&#47; Timestamp is the time (unix epoch offset) that this circuit was completed.
     * </pre>
     *
     * <code>uint64 timestamp = 1[json_name = "timestamp"];</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <pre>
     *&#47; Timestamp is the time (unix epoch offset) that this circuit was completed.
     * </pre>
     *
     * <code>uint64 timestamp = 1[json_name = "timestamp"];</code>
     */
    public Builder setTimestamp(long value) {
      
      timestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; Timestamp is the time (unix epoch offset) that this circuit was completed.
     * </pre>
     *
     * <code>uint64 timestamp = 1[json_name = "timestamp"];</code>
     */
    public Builder clearTimestamp() {
      
      timestamp_ = 0L;
      onChanged();
      return this;
    }

    private long chanIdIn_ ;
    /**
     * <pre>
     *&#47; The incoming channel ID that carried the HTLC that created the circuit.
     * </pre>
     *
     * <code>uint64 chan_id_in = 2[json_name = "chan_id_in"];</code>
     */
    public long getChanIdIn() {
      return chanIdIn_;
    }
    /**
     * <pre>
     *&#47; The incoming channel ID that carried the HTLC that created the circuit.
     * </pre>
     *
     * <code>uint64 chan_id_in = 2[json_name = "chan_id_in"];</code>
     */
    public Builder setChanIdIn(long value) {
      
      chanIdIn_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The incoming channel ID that carried the HTLC that created the circuit.
     * </pre>
     *
     * <code>uint64 chan_id_in = 2[json_name = "chan_id_in"];</code>
     */
    public Builder clearChanIdIn() {
      
      chanIdIn_ = 0L;
      onChanged();
      return this;
    }

    private long chanIdOut_ ;
    /**
     * <pre>
     *&#47; The outgoing channel ID that carried the preimage that completed the circuit.
     * </pre>
     *
     * <code>uint64 chan_id_out = 4[json_name = "chan_id_out"];</code>
     */
    public long getChanIdOut() {
      return chanIdOut_;
    }
    /**
     * <pre>
     *&#47; The outgoing channel ID that carried the preimage that completed the circuit.
     * </pre>
     *
     * <code>uint64 chan_id_out = 4[json_name = "chan_id_out"];</code>
     */
    public Builder setChanIdOut(long value) {
      
      chanIdOut_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The outgoing channel ID that carried the preimage that completed the circuit.
     * </pre>
     *
     * <code>uint64 chan_id_out = 4[json_name = "chan_id_out"];</code>
     */
    public Builder clearChanIdOut() {
      
      chanIdOut_ = 0L;
      onChanged();
      return this;
    }

    private long amtIn_ ;
    /**
     * <pre>
     *&#47; The total amount of the incoming HTLC that created half the circuit.
     * </pre>
     *
     * <code>uint64 amt_in = 5[json_name = "amt_in"];</code>
     */
    public long getAmtIn() {
      return amtIn_;
    }
    /**
     * <pre>
     *&#47; The total amount of the incoming HTLC that created half the circuit.
     * </pre>
     *
     * <code>uint64 amt_in = 5[json_name = "amt_in"];</code>
     */
    public Builder setAmtIn(long value) {
      
      amtIn_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The total amount of the incoming HTLC that created half the circuit.
     * </pre>
     *
     * <code>uint64 amt_in = 5[json_name = "amt_in"];</code>
     */
    public Builder clearAmtIn() {
      
      amtIn_ = 0L;
      onChanged();
      return this;
    }

    private long amtOut_ ;
    /**
     * <pre>
     *&#47; The total amount of the outgoign HTLC that created the second half of the circuit.
     * </pre>
     *
     * <code>uint64 amt_out = 6[json_name = "amt_out"];</code>
     */
    public long getAmtOut() {
      return amtOut_;
    }
    /**
     * <pre>
     *&#47; The total amount of the outgoign HTLC that created the second half of the circuit.
     * </pre>
     *
     * <code>uint64 amt_out = 6[json_name = "amt_out"];</code>
     */
    public Builder setAmtOut(long value) {
      
      amtOut_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The total amount of the outgoign HTLC that created the second half of the circuit.
     * </pre>
     *
     * <code>uint64 amt_out = 6[json_name = "amt_out"];</code>
     */
    public Builder clearAmtOut() {
      
      amtOut_ = 0L;
      onChanged();
      return this;
    }

    private long fee_ ;
    /**
     * <pre>
     *&#47; The total fee that this payment circuit carried.
     * </pre>
     *
     * <code>uint64 fee = 7[json_name = "fee"];</code>
     */
    public long getFee() {
      return fee_;
    }
    /**
     * <pre>
     *&#47; The total fee that this payment circuit carried.
     * </pre>
     *
     * <code>uint64 fee = 7[json_name = "fee"];</code>
     */
    public Builder setFee(long value) {
      
      fee_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The total fee that this payment circuit carried.
     * </pre>
     *
     * <code>uint64 fee = 7[json_name = "fee"];</code>
     */
    public Builder clearFee() {
      
      fee_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.ForwardingEvent)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.ForwardingEvent)
  private static final lightpay.lnd.grpc.ForwardingEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.ForwardingEvent();
  }

  public static lightpay.lnd.grpc.ForwardingEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ForwardingEvent>
      PARSER = new com.google.protobuf.AbstractParser<ForwardingEvent>() {
    public ForwardingEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ForwardingEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ForwardingEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ForwardingEvent> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.ForwardingEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

