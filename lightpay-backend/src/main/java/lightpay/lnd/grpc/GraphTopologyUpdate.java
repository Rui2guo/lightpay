// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.GraphTopologyUpdate}
 */
public  final class GraphTopologyUpdate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.GraphTopologyUpdate)
    GraphTopologyUpdateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GraphTopologyUpdate.newBuilder() to construct.
  private GraphTopologyUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GraphTopologyUpdate() {
    nodeUpdates_ = java.util.Collections.emptyList();
    channelUpdates_ = java.util.Collections.emptyList();
    closedChans_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GraphTopologyUpdate(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              nodeUpdates_ = new java.util.ArrayList<lightpay.lnd.grpc.NodeUpdate>();
              mutable_bitField0_ |= 0x00000001;
            }
            nodeUpdates_.add(
                input.readMessage(lightpay.lnd.grpc.NodeUpdate.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              channelUpdates_ = new java.util.ArrayList<lightpay.lnd.grpc.ChannelEdgeUpdate>();
              mutable_bitField0_ |= 0x00000002;
            }
            channelUpdates_.add(
                input.readMessage(lightpay.lnd.grpc.ChannelEdgeUpdate.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              closedChans_ = new java.util.ArrayList<lightpay.lnd.grpc.ClosedChannelUpdate>();
              mutable_bitField0_ |= 0x00000004;
            }
            closedChans_.add(
                input.readMessage(lightpay.lnd.grpc.ClosedChannelUpdate.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        nodeUpdates_ = java.util.Collections.unmodifiableList(nodeUpdates_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        channelUpdates_ = java.util.Collections.unmodifiableList(channelUpdates_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        closedChans_ = java.util.Collections.unmodifiableList(closedChans_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_GraphTopologyUpdate_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_GraphTopologyUpdate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.GraphTopologyUpdate.class, lightpay.lnd.grpc.GraphTopologyUpdate.Builder.class);
  }

  public static final int NODE_UPDATES_FIELD_NUMBER = 1;
  private java.util.List<lightpay.lnd.grpc.NodeUpdate> nodeUpdates_;
  /**
   * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
   */
  public java.util.List<lightpay.lnd.grpc.NodeUpdate> getNodeUpdatesList() {
    return nodeUpdates_;
  }
  /**
   * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.NodeUpdateOrBuilder> 
      getNodeUpdatesOrBuilderList() {
    return nodeUpdates_;
  }
  /**
   * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
   */
  public int getNodeUpdatesCount() {
    return nodeUpdates_.size();
  }
  /**
   * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
   */
  public lightpay.lnd.grpc.NodeUpdate getNodeUpdates(int index) {
    return nodeUpdates_.get(index);
  }
  /**
   * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
   */
  public lightpay.lnd.grpc.NodeUpdateOrBuilder getNodeUpdatesOrBuilder(
      int index) {
    return nodeUpdates_.get(index);
  }

  public static final int CHANNEL_UPDATES_FIELD_NUMBER = 2;
  private java.util.List<lightpay.lnd.grpc.ChannelEdgeUpdate> channelUpdates_;
  /**
   * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
   */
  public java.util.List<lightpay.lnd.grpc.ChannelEdgeUpdate> getChannelUpdatesList() {
    return channelUpdates_;
  }
  /**
   * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.ChannelEdgeUpdateOrBuilder> 
      getChannelUpdatesOrBuilderList() {
    return channelUpdates_;
  }
  /**
   * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
   */
  public int getChannelUpdatesCount() {
    return channelUpdates_.size();
  }
  /**
   * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
   */
  public lightpay.lnd.grpc.ChannelEdgeUpdate getChannelUpdates(int index) {
    return channelUpdates_.get(index);
  }
  /**
   * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
   */
  public lightpay.lnd.grpc.ChannelEdgeUpdateOrBuilder getChannelUpdatesOrBuilder(
      int index) {
    return channelUpdates_.get(index);
  }

  public static final int CLOSED_CHANS_FIELD_NUMBER = 3;
  private java.util.List<lightpay.lnd.grpc.ClosedChannelUpdate> closedChans_;
  /**
   * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
   */
  public java.util.List<lightpay.lnd.grpc.ClosedChannelUpdate> getClosedChansList() {
    return closedChans_;
  }
  /**
   * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder> 
      getClosedChansOrBuilderList() {
    return closedChans_;
  }
  /**
   * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
   */
  public int getClosedChansCount() {
    return closedChans_.size();
  }
  /**
   * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
   */
  public lightpay.lnd.grpc.ClosedChannelUpdate getClosedChans(int index) {
    return closedChans_.get(index);
  }
  /**
   * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
   */
  public lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder getClosedChansOrBuilder(
      int index) {
    return closedChans_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < nodeUpdates_.size(); i++) {
      output.writeMessage(1, nodeUpdates_.get(i));
    }
    for (int i = 0; i < channelUpdates_.size(); i++) {
      output.writeMessage(2, channelUpdates_.get(i));
    }
    for (int i = 0; i < closedChans_.size(); i++) {
      output.writeMessage(3, closedChans_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < nodeUpdates_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, nodeUpdates_.get(i));
    }
    for (int i = 0; i < channelUpdates_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, channelUpdates_.get(i));
    }
    for (int i = 0; i < closedChans_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, closedChans_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.GraphTopologyUpdate)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.GraphTopologyUpdate other = (lightpay.lnd.grpc.GraphTopologyUpdate) obj;

    boolean result = true;
    result = result && getNodeUpdatesList()
        .equals(other.getNodeUpdatesList());
    result = result && getChannelUpdatesList()
        .equals(other.getChannelUpdatesList());
    result = result && getClosedChansList()
        .equals(other.getClosedChansList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getNodeUpdatesCount() > 0) {
      hash = (37 * hash) + NODE_UPDATES_FIELD_NUMBER;
      hash = (53 * hash) + getNodeUpdatesList().hashCode();
    }
    if (getChannelUpdatesCount() > 0) {
      hash = (37 * hash) + CHANNEL_UPDATES_FIELD_NUMBER;
      hash = (53 * hash) + getChannelUpdatesList().hashCode();
    }
    if (getClosedChansCount() > 0) {
      hash = (37 * hash) + CLOSED_CHANS_FIELD_NUMBER;
      hash = (53 * hash) + getClosedChansList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.GraphTopologyUpdate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.GraphTopologyUpdate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.GraphTopologyUpdate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.GraphTopologyUpdate)
      lightpay.lnd.grpc.GraphTopologyUpdateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_GraphTopologyUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_GraphTopologyUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.GraphTopologyUpdate.class, lightpay.lnd.grpc.GraphTopologyUpdate.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.GraphTopologyUpdate.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNodeUpdatesFieldBuilder();
        getChannelUpdatesFieldBuilder();
        getClosedChansFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (nodeUpdatesBuilder_ == null) {
        nodeUpdates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        nodeUpdatesBuilder_.clear();
      }
      if (channelUpdatesBuilder_ == null) {
        channelUpdates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        channelUpdatesBuilder_.clear();
      }
      if (closedChansBuilder_ == null) {
        closedChans_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        closedChansBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_GraphTopologyUpdate_descriptor;
    }

    public lightpay.lnd.grpc.GraphTopologyUpdate getDefaultInstanceForType() {
      return lightpay.lnd.grpc.GraphTopologyUpdate.getDefaultInstance();
    }

    public lightpay.lnd.grpc.GraphTopologyUpdate build() {
      lightpay.lnd.grpc.GraphTopologyUpdate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.GraphTopologyUpdate buildPartial() {
      lightpay.lnd.grpc.GraphTopologyUpdate result = new lightpay.lnd.grpc.GraphTopologyUpdate(this);
      int from_bitField0_ = bitField0_;
      if (nodeUpdatesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          nodeUpdates_ = java.util.Collections.unmodifiableList(nodeUpdates_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nodeUpdates_ = nodeUpdates_;
      } else {
        result.nodeUpdates_ = nodeUpdatesBuilder_.build();
      }
      if (channelUpdatesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          channelUpdates_ = java.util.Collections.unmodifiableList(channelUpdates_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.channelUpdates_ = channelUpdates_;
      } else {
        result.channelUpdates_ = channelUpdatesBuilder_.build();
      }
      if (closedChansBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          closedChans_ = java.util.Collections.unmodifiableList(closedChans_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.closedChans_ = closedChans_;
      } else {
        result.closedChans_ = closedChansBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.GraphTopologyUpdate) {
        return mergeFrom((lightpay.lnd.grpc.GraphTopologyUpdate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.GraphTopologyUpdate other) {
      if (other == lightpay.lnd.grpc.GraphTopologyUpdate.getDefaultInstance()) return this;
      if (nodeUpdatesBuilder_ == null) {
        if (!other.nodeUpdates_.isEmpty()) {
          if (nodeUpdates_.isEmpty()) {
            nodeUpdates_ = other.nodeUpdates_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNodeUpdatesIsMutable();
            nodeUpdates_.addAll(other.nodeUpdates_);
          }
          onChanged();
        }
      } else {
        if (!other.nodeUpdates_.isEmpty()) {
          if (nodeUpdatesBuilder_.isEmpty()) {
            nodeUpdatesBuilder_.dispose();
            nodeUpdatesBuilder_ = null;
            nodeUpdates_ = other.nodeUpdates_;
            bitField0_ = (bitField0_ & ~0x00000001);
            nodeUpdatesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeUpdatesFieldBuilder() : null;
          } else {
            nodeUpdatesBuilder_.addAllMessages(other.nodeUpdates_);
          }
        }
      }
      if (channelUpdatesBuilder_ == null) {
        if (!other.channelUpdates_.isEmpty()) {
          if (channelUpdates_.isEmpty()) {
            channelUpdates_ = other.channelUpdates_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureChannelUpdatesIsMutable();
            channelUpdates_.addAll(other.channelUpdates_);
          }
          onChanged();
        }
      } else {
        if (!other.channelUpdates_.isEmpty()) {
          if (channelUpdatesBuilder_.isEmpty()) {
            channelUpdatesBuilder_.dispose();
            channelUpdatesBuilder_ = null;
            channelUpdates_ = other.channelUpdates_;
            bitField0_ = (bitField0_ & ~0x00000002);
            channelUpdatesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChannelUpdatesFieldBuilder() : null;
          } else {
            channelUpdatesBuilder_.addAllMessages(other.channelUpdates_);
          }
        }
      }
      if (closedChansBuilder_ == null) {
        if (!other.closedChans_.isEmpty()) {
          if (closedChans_.isEmpty()) {
            closedChans_ = other.closedChans_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureClosedChansIsMutable();
            closedChans_.addAll(other.closedChans_);
          }
          onChanged();
        }
      } else {
        if (!other.closedChans_.isEmpty()) {
          if (closedChansBuilder_.isEmpty()) {
            closedChansBuilder_.dispose();
            closedChansBuilder_ = null;
            closedChans_ = other.closedChans_;
            bitField0_ = (bitField0_ & ~0x00000004);
            closedChansBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getClosedChansFieldBuilder() : null;
          } else {
            closedChansBuilder_.addAllMessages(other.closedChans_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.GraphTopologyUpdate parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.GraphTopologyUpdate) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<lightpay.lnd.grpc.NodeUpdate> nodeUpdates_ =
      java.util.Collections.emptyList();
    private void ensureNodeUpdatesIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        nodeUpdates_ = new java.util.ArrayList<lightpay.lnd.grpc.NodeUpdate>(nodeUpdates_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.NodeUpdate, lightpay.lnd.grpc.NodeUpdate.Builder, lightpay.lnd.grpc.NodeUpdateOrBuilder> nodeUpdatesBuilder_;

    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public java.util.List<lightpay.lnd.grpc.NodeUpdate> getNodeUpdatesList() {
      if (nodeUpdatesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodeUpdates_);
      } else {
        return nodeUpdatesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public int getNodeUpdatesCount() {
      if (nodeUpdatesBuilder_ == null) {
        return nodeUpdates_.size();
      } else {
        return nodeUpdatesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public lightpay.lnd.grpc.NodeUpdate getNodeUpdates(int index) {
      if (nodeUpdatesBuilder_ == null) {
        return nodeUpdates_.get(index);
      } else {
        return nodeUpdatesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder setNodeUpdates(
        int index, lightpay.lnd.grpc.NodeUpdate value) {
      if (nodeUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeUpdatesIsMutable();
        nodeUpdates_.set(index, value);
        onChanged();
      } else {
        nodeUpdatesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder setNodeUpdates(
        int index, lightpay.lnd.grpc.NodeUpdate.Builder builderForValue) {
      if (nodeUpdatesBuilder_ == null) {
        ensureNodeUpdatesIsMutable();
        nodeUpdates_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeUpdatesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder addNodeUpdates(lightpay.lnd.grpc.NodeUpdate value) {
      if (nodeUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeUpdatesIsMutable();
        nodeUpdates_.add(value);
        onChanged();
      } else {
        nodeUpdatesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder addNodeUpdates(
        int index, lightpay.lnd.grpc.NodeUpdate value) {
      if (nodeUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeUpdatesIsMutable();
        nodeUpdates_.add(index, value);
        onChanged();
      } else {
        nodeUpdatesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder addNodeUpdates(
        lightpay.lnd.grpc.NodeUpdate.Builder builderForValue) {
      if (nodeUpdatesBuilder_ == null) {
        ensureNodeUpdatesIsMutable();
        nodeUpdates_.add(builderForValue.build());
        onChanged();
      } else {
        nodeUpdatesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder addNodeUpdates(
        int index, lightpay.lnd.grpc.NodeUpdate.Builder builderForValue) {
      if (nodeUpdatesBuilder_ == null) {
        ensureNodeUpdatesIsMutable();
        nodeUpdates_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeUpdatesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder addAllNodeUpdates(
        java.lang.Iterable<? extends lightpay.lnd.grpc.NodeUpdate> values) {
      if (nodeUpdatesBuilder_ == null) {
        ensureNodeUpdatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodeUpdates_);
        onChanged();
      } else {
        nodeUpdatesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder clearNodeUpdates() {
      if (nodeUpdatesBuilder_ == null) {
        nodeUpdates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        nodeUpdatesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public Builder removeNodeUpdates(int index) {
      if (nodeUpdatesBuilder_ == null) {
        ensureNodeUpdatesIsMutable();
        nodeUpdates_.remove(index);
        onChanged();
      } else {
        nodeUpdatesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public lightpay.lnd.grpc.NodeUpdate.Builder getNodeUpdatesBuilder(
        int index) {
      return getNodeUpdatesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public lightpay.lnd.grpc.NodeUpdateOrBuilder getNodeUpdatesOrBuilder(
        int index) {
      if (nodeUpdatesBuilder_ == null) {
        return nodeUpdates_.get(index);  } else {
        return nodeUpdatesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.NodeUpdateOrBuilder> 
         getNodeUpdatesOrBuilderList() {
      if (nodeUpdatesBuilder_ != null) {
        return nodeUpdatesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodeUpdates_);
      }
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public lightpay.lnd.grpc.NodeUpdate.Builder addNodeUpdatesBuilder() {
      return getNodeUpdatesFieldBuilder().addBuilder(
          lightpay.lnd.grpc.NodeUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public lightpay.lnd.grpc.NodeUpdate.Builder addNodeUpdatesBuilder(
        int index) {
      return getNodeUpdatesFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.NodeUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .lnrpc.NodeUpdate node_updates = 1;</code>
     */
    public java.util.List<lightpay.lnd.grpc.NodeUpdate.Builder> 
         getNodeUpdatesBuilderList() {
      return getNodeUpdatesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.NodeUpdate, lightpay.lnd.grpc.NodeUpdate.Builder, lightpay.lnd.grpc.NodeUpdateOrBuilder> 
        getNodeUpdatesFieldBuilder() {
      if (nodeUpdatesBuilder_ == null) {
        nodeUpdatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.NodeUpdate, lightpay.lnd.grpc.NodeUpdate.Builder, lightpay.lnd.grpc.NodeUpdateOrBuilder>(
                nodeUpdates_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        nodeUpdates_ = null;
      }
      return nodeUpdatesBuilder_;
    }

    private java.util.List<lightpay.lnd.grpc.ChannelEdgeUpdate> channelUpdates_ =
      java.util.Collections.emptyList();
    private void ensureChannelUpdatesIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        channelUpdates_ = new java.util.ArrayList<lightpay.lnd.grpc.ChannelEdgeUpdate>(channelUpdates_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.ChannelEdgeUpdate, lightpay.lnd.grpc.ChannelEdgeUpdate.Builder, lightpay.lnd.grpc.ChannelEdgeUpdateOrBuilder> channelUpdatesBuilder_;

    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public java.util.List<lightpay.lnd.grpc.ChannelEdgeUpdate> getChannelUpdatesList() {
      if (channelUpdatesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(channelUpdates_);
      } else {
        return channelUpdatesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public int getChannelUpdatesCount() {
      if (channelUpdatesBuilder_ == null) {
        return channelUpdates_.size();
      } else {
        return channelUpdatesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public lightpay.lnd.grpc.ChannelEdgeUpdate getChannelUpdates(int index) {
      if (channelUpdatesBuilder_ == null) {
        return channelUpdates_.get(index);
      } else {
        return channelUpdatesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder setChannelUpdates(
        int index, lightpay.lnd.grpc.ChannelEdgeUpdate value) {
      if (channelUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChannelUpdatesIsMutable();
        channelUpdates_.set(index, value);
        onChanged();
      } else {
        channelUpdatesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder setChannelUpdates(
        int index, lightpay.lnd.grpc.ChannelEdgeUpdate.Builder builderForValue) {
      if (channelUpdatesBuilder_ == null) {
        ensureChannelUpdatesIsMutable();
        channelUpdates_.set(index, builderForValue.build());
        onChanged();
      } else {
        channelUpdatesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder addChannelUpdates(lightpay.lnd.grpc.ChannelEdgeUpdate value) {
      if (channelUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChannelUpdatesIsMutable();
        channelUpdates_.add(value);
        onChanged();
      } else {
        channelUpdatesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder addChannelUpdates(
        int index, lightpay.lnd.grpc.ChannelEdgeUpdate value) {
      if (channelUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChannelUpdatesIsMutable();
        channelUpdates_.add(index, value);
        onChanged();
      } else {
        channelUpdatesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder addChannelUpdates(
        lightpay.lnd.grpc.ChannelEdgeUpdate.Builder builderForValue) {
      if (channelUpdatesBuilder_ == null) {
        ensureChannelUpdatesIsMutable();
        channelUpdates_.add(builderForValue.build());
        onChanged();
      } else {
        channelUpdatesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder addChannelUpdates(
        int index, lightpay.lnd.grpc.ChannelEdgeUpdate.Builder builderForValue) {
      if (channelUpdatesBuilder_ == null) {
        ensureChannelUpdatesIsMutable();
        channelUpdates_.add(index, builderForValue.build());
        onChanged();
      } else {
        channelUpdatesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder addAllChannelUpdates(
        java.lang.Iterable<? extends lightpay.lnd.grpc.ChannelEdgeUpdate> values) {
      if (channelUpdatesBuilder_ == null) {
        ensureChannelUpdatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, channelUpdates_);
        onChanged();
      } else {
        channelUpdatesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder clearChannelUpdates() {
      if (channelUpdatesBuilder_ == null) {
        channelUpdates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        channelUpdatesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public Builder removeChannelUpdates(int index) {
      if (channelUpdatesBuilder_ == null) {
        ensureChannelUpdatesIsMutable();
        channelUpdates_.remove(index);
        onChanged();
      } else {
        channelUpdatesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public lightpay.lnd.grpc.ChannelEdgeUpdate.Builder getChannelUpdatesBuilder(
        int index) {
      return getChannelUpdatesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public lightpay.lnd.grpc.ChannelEdgeUpdateOrBuilder getChannelUpdatesOrBuilder(
        int index) {
      if (channelUpdatesBuilder_ == null) {
        return channelUpdates_.get(index);  } else {
        return channelUpdatesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.ChannelEdgeUpdateOrBuilder> 
         getChannelUpdatesOrBuilderList() {
      if (channelUpdatesBuilder_ != null) {
        return channelUpdatesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(channelUpdates_);
      }
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public lightpay.lnd.grpc.ChannelEdgeUpdate.Builder addChannelUpdatesBuilder() {
      return getChannelUpdatesFieldBuilder().addBuilder(
          lightpay.lnd.grpc.ChannelEdgeUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public lightpay.lnd.grpc.ChannelEdgeUpdate.Builder addChannelUpdatesBuilder(
        int index) {
      return getChannelUpdatesFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.ChannelEdgeUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;</code>
     */
    public java.util.List<lightpay.lnd.grpc.ChannelEdgeUpdate.Builder> 
         getChannelUpdatesBuilderList() {
      return getChannelUpdatesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.ChannelEdgeUpdate, lightpay.lnd.grpc.ChannelEdgeUpdate.Builder, lightpay.lnd.grpc.ChannelEdgeUpdateOrBuilder> 
        getChannelUpdatesFieldBuilder() {
      if (channelUpdatesBuilder_ == null) {
        channelUpdatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.ChannelEdgeUpdate, lightpay.lnd.grpc.ChannelEdgeUpdate.Builder, lightpay.lnd.grpc.ChannelEdgeUpdateOrBuilder>(
                channelUpdates_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        channelUpdates_ = null;
      }
      return channelUpdatesBuilder_;
    }

    private java.util.List<lightpay.lnd.grpc.ClosedChannelUpdate> closedChans_ =
      java.util.Collections.emptyList();
    private void ensureClosedChansIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        closedChans_ = new java.util.ArrayList<lightpay.lnd.grpc.ClosedChannelUpdate>(closedChans_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.ClosedChannelUpdate, lightpay.lnd.grpc.ClosedChannelUpdate.Builder, lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder> closedChansBuilder_;

    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public java.util.List<lightpay.lnd.grpc.ClosedChannelUpdate> getClosedChansList() {
      if (closedChansBuilder_ == null) {
        return java.util.Collections.unmodifiableList(closedChans_);
      } else {
        return closedChansBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public int getClosedChansCount() {
      if (closedChansBuilder_ == null) {
        return closedChans_.size();
      } else {
        return closedChansBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public lightpay.lnd.grpc.ClosedChannelUpdate getClosedChans(int index) {
      if (closedChansBuilder_ == null) {
        return closedChans_.get(index);
      } else {
        return closedChansBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder setClosedChans(
        int index, lightpay.lnd.grpc.ClosedChannelUpdate value) {
      if (closedChansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClosedChansIsMutable();
        closedChans_.set(index, value);
        onChanged();
      } else {
        closedChansBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder setClosedChans(
        int index, lightpay.lnd.grpc.ClosedChannelUpdate.Builder builderForValue) {
      if (closedChansBuilder_ == null) {
        ensureClosedChansIsMutable();
        closedChans_.set(index, builderForValue.build());
        onChanged();
      } else {
        closedChansBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder addClosedChans(lightpay.lnd.grpc.ClosedChannelUpdate value) {
      if (closedChansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClosedChansIsMutable();
        closedChans_.add(value);
        onChanged();
      } else {
        closedChansBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder addClosedChans(
        int index, lightpay.lnd.grpc.ClosedChannelUpdate value) {
      if (closedChansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClosedChansIsMutable();
        closedChans_.add(index, value);
        onChanged();
      } else {
        closedChansBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder addClosedChans(
        lightpay.lnd.grpc.ClosedChannelUpdate.Builder builderForValue) {
      if (closedChansBuilder_ == null) {
        ensureClosedChansIsMutable();
        closedChans_.add(builderForValue.build());
        onChanged();
      } else {
        closedChansBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder addClosedChans(
        int index, lightpay.lnd.grpc.ClosedChannelUpdate.Builder builderForValue) {
      if (closedChansBuilder_ == null) {
        ensureClosedChansIsMutable();
        closedChans_.add(index, builderForValue.build());
        onChanged();
      } else {
        closedChansBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder addAllClosedChans(
        java.lang.Iterable<? extends lightpay.lnd.grpc.ClosedChannelUpdate> values) {
      if (closedChansBuilder_ == null) {
        ensureClosedChansIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, closedChans_);
        onChanged();
      } else {
        closedChansBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder clearClosedChans() {
      if (closedChansBuilder_ == null) {
        closedChans_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        closedChansBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public Builder removeClosedChans(int index) {
      if (closedChansBuilder_ == null) {
        ensureClosedChansIsMutable();
        closedChans_.remove(index);
        onChanged();
      } else {
        closedChansBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public lightpay.lnd.grpc.ClosedChannelUpdate.Builder getClosedChansBuilder(
        int index) {
      return getClosedChansFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder getClosedChansOrBuilder(
        int index) {
      if (closedChansBuilder_ == null) {
        return closedChans_.get(index);  } else {
        return closedChansBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder> 
         getClosedChansOrBuilderList() {
      if (closedChansBuilder_ != null) {
        return closedChansBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(closedChans_);
      }
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public lightpay.lnd.grpc.ClosedChannelUpdate.Builder addClosedChansBuilder() {
      return getClosedChansFieldBuilder().addBuilder(
          lightpay.lnd.grpc.ClosedChannelUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public lightpay.lnd.grpc.ClosedChannelUpdate.Builder addClosedChansBuilder(
        int index) {
      return getClosedChansFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.ClosedChannelUpdate.getDefaultInstance());
    }
    /**
     * <code>repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;</code>
     */
    public java.util.List<lightpay.lnd.grpc.ClosedChannelUpdate.Builder> 
         getClosedChansBuilderList() {
      return getClosedChansFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.ClosedChannelUpdate, lightpay.lnd.grpc.ClosedChannelUpdate.Builder, lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder> 
        getClosedChansFieldBuilder() {
      if (closedChansBuilder_ == null) {
        closedChansBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.ClosedChannelUpdate, lightpay.lnd.grpc.ClosedChannelUpdate.Builder, lightpay.lnd.grpc.ClosedChannelUpdateOrBuilder>(
                closedChans_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        closedChans_ = null;
      }
      return closedChansBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.GraphTopologyUpdate)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.GraphTopologyUpdate)
  private static final lightpay.lnd.grpc.GraphTopologyUpdate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.GraphTopologyUpdate();
  }

  public static lightpay.lnd.grpc.GraphTopologyUpdate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GraphTopologyUpdate>
      PARSER = new com.google.protobuf.AbstractParser<GraphTopologyUpdate>() {
    public GraphTopologyUpdate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GraphTopologyUpdate(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GraphTopologyUpdate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GraphTopologyUpdate> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.GraphTopologyUpdate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

