// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.Hop}
 */
public  final class Hop extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.Hop)
    HopOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Hop.newBuilder() to construct.
  private Hop(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Hop() {
    chanId_ = 0L;
    chanCapacity_ = 0L;
    amtToForward_ = 0L;
    fee_ = 0L;
    expiry_ = 0;
    amtToForwardMsat_ = 0L;
    feeMsat_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Hop(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            chanId_ = input.readUInt64();
            break;
          }
          case 16: {

            chanCapacity_ = input.readInt64();
            break;
          }
          case 24: {

            amtToForward_ = input.readInt64();
            break;
          }
          case 32: {

            fee_ = input.readInt64();
            break;
          }
          case 40: {

            expiry_ = input.readUInt32();
            break;
          }
          case 48: {

            amtToForwardMsat_ = input.readInt64();
            break;
          }
          case 56: {

            feeMsat_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Hop_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Hop_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.Hop.class, lightpay.lnd.grpc.Hop.Builder.class);
  }

  public static final int CHAN_ID_FIELD_NUMBER = 1;
  private long chanId_;
  /**
   * <pre>
   **
   *The unique channel ID for the channel. The first 3 bytes are the block
   *height, the next 3 the index within the block, and the last 2 bytes are the
   *output index for the channel.
   * </pre>
   *
   * <code>uint64 chan_id = 1[json_name = "chan_id"];</code>
   */
  public long getChanId() {
    return chanId_;
  }

  public static final int CHAN_CAPACITY_FIELD_NUMBER = 2;
  private long chanCapacity_;
  /**
   * <code>int64 chan_capacity = 2[json_name = "chan_capacity"];</code>
   */
  public long getChanCapacity() {
    return chanCapacity_;
  }

  public static final int AMT_TO_FORWARD_FIELD_NUMBER = 3;
  private long amtToForward_;
  /**
   * <code>int64 amt_to_forward = 3[json_name = "amt_to_forward", deprecated = true];</code>
   */
  @java.lang.Deprecated public long getAmtToForward() {
    return amtToForward_;
  }

  public static final int FEE_FIELD_NUMBER = 4;
  private long fee_;
  /**
   * <code>int64 fee = 4[json_name = "fee", deprecated = true];</code>
   */
  @java.lang.Deprecated public long getFee() {
    return fee_;
  }

  public static final int EXPIRY_FIELD_NUMBER = 5;
  private int expiry_;
  /**
   * <code>uint32 expiry = 5[json_name = "expiry"];</code>
   */
  public int getExpiry() {
    return expiry_;
  }

  public static final int AMT_TO_FORWARD_MSAT_FIELD_NUMBER = 6;
  private long amtToForwardMsat_;
  /**
   * <code>int64 amt_to_forward_msat = 6[json_name = "amt_to_forward_msat"];</code>
   */
  public long getAmtToForwardMsat() {
    return amtToForwardMsat_;
  }

  public static final int FEE_MSAT_FIELD_NUMBER = 7;
  private long feeMsat_;
  /**
   * <code>int64 fee_msat = 7[json_name = "fee_msat"];</code>
   */
  public long getFeeMsat() {
    return feeMsat_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (chanId_ != 0L) {
      output.writeUInt64(1, chanId_);
    }
    if (chanCapacity_ != 0L) {
      output.writeInt64(2, chanCapacity_);
    }
    if (amtToForward_ != 0L) {
      output.writeInt64(3, amtToForward_);
    }
    if (fee_ != 0L) {
      output.writeInt64(4, fee_);
    }
    if (expiry_ != 0) {
      output.writeUInt32(5, expiry_);
    }
    if (amtToForwardMsat_ != 0L) {
      output.writeInt64(6, amtToForwardMsat_);
    }
    if (feeMsat_ != 0L) {
      output.writeInt64(7, feeMsat_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (chanId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, chanId_);
    }
    if (chanCapacity_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, chanCapacity_);
    }
    if (amtToForward_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, amtToForward_);
    }
    if (fee_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, fee_);
    }
    if (expiry_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, expiry_);
    }
    if (amtToForwardMsat_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, amtToForwardMsat_);
    }
    if (feeMsat_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, feeMsat_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.Hop)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.Hop other = (lightpay.lnd.grpc.Hop) obj;

    boolean result = true;
    result = result && (getChanId()
        == other.getChanId());
    result = result && (getChanCapacity()
        == other.getChanCapacity());
    result = result && (getAmtToForward()
        == other.getAmtToForward());
    result = result && (getFee()
        == other.getFee());
    result = result && (getExpiry()
        == other.getExpiry());
    result = result && (getAmtToForwardMsat()
        == other.getAmtToForwardMsat());
    result = result && (getFeeMsat()
        == other.getFeeMsat());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CHAN_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChanId());
    hash = (37 * hash) + CHAN_CAPACITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChanCapacity());
    hash = (37 * hash) + AMT_TO_FORWARD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAmtToForward());
    hash = (37 * hash) + FEE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFee());
    hash = (37 * hash) + EXPIRY_FIELD_NUMBER;
    hash = (53 * hash) + getExpiry();
    hash = (37 * hash) + AMT_TO_FORWARD_MSAT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAmtToForwardMsat());
    hash = (37 * hash) + FEE_MSAT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFeeMsat());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.Hop parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Hop parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.Hop parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.Hop parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.Hop prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.Hop}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.Hop)
      lightpay.lnd.grpc.HopOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Hop_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Hop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.Hop.class, lightpay.lnd.grpc.Hop.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.Hop.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      chanId_ = 0L;

      chanCapacity_ = 0L;

      amtToForward_ = 0L;

      fee_ = 0L;

      expiry_ = 0;

      amtToForwardMsat_ = 0L;

      feeMsat_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Hop_descriptor;
    }

    public lightpay.lnd.grpc.Hop getDefaultInstanceForType() {
      return lightpay.lnd.grpc.Hop.getDefaultInstance();
    }

    public lightpay.lnd.grpc.Hop build() {
      lightpay.lnd.grpc.Hop result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.Hop buildPartial() {
      lightpay.lnd.grpc.Hop result = new lightpay.lnd.grpc.Hop(this);
      result.chanId_ = chanId_;
      result.chanCapacity_ = chanCapacity_;
      result.amtToForward_ = amtToForward_;
      result.fee_ = fee_;
      result.expiry_ = expiry_;
      result.amtToForwardMsat_ = amtToForwardMsat_;
      result.feeMsat_ = feeMsat_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.Hop) {
        return mergeFrom((lightpay.lnd.grpc.Hop)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.Hop other) {
      if (other == lightpay.lnd.grpc.Hop.getDefaultInstance()) return this;
      if (other.getChanId() != 0L) {
        setChanId(other.getChanId());
      }
      if (other.getChanCapacity() != 0L) {
        setChanCapacity(other.getChanCapacity());
      }
      if (other.getAmtToForward() != 0L) {
        setAmtToForward(other.getAmtToForward());
      }
      if (other.getFee() != 0L) {
        setFee(other.getFee());
      }
      if (other.getExpiry() != 0) {
        setExpiry(other.getExpiry());
      }
      if (other.getAmtToForwardMsat() != 0L) {
        setAmtToForwardMsat(other.getAmtToForwardMsat());
      }
      if (other.getFeeMsat() != 0L) {
        setFeeMsat(other.getFeeMsat());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.Hop parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.Hop) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long chanId_ ;
    /**
     * <pre>
     **
     *The unique channel ID for the channel. The first 3 bytes are the block
     *height, the next 3 the index within the block, and the last 2 bytes are the
     *output index for the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 1[json_name = "chan_id"];</code>
     */
    public long getChanId() {
      return chanId_;
    }
    /**
     * <pre>
     **
     *The unique channel ID for the channel. The first 3 bytes are the block
     *height, the next 3 the index within the block, and the last 2 bytes are the
     *output index for the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 1[json_name = "chan_id"];</code>
     */
    public Builder setChanId(long value) {
      
      chanId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The unique channel ID for the channel. The first 3 bytes are the block
     *height, the next 3 the index within the block, and the last 2 bytes are the
     *output index for the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 1[json_name = "chan_id"];</code>
     */
    public Builder clearChanId() {
      
      chanId_ = 0L;
      onChanged();
      return this;
    }

    private long chanCapacity_ ;
    /**
     * <code>int64 chan_capacity = 2[json_name = "chan_capacity"];</code>
     */
    public long getChanCapacity() {
      return chanCapacity_;
    }
    /**
     * <code>int64 chan_capacity = 2[json_name = "chan_capacity"];</code>
     */
    public Builder setChanCapacity(long value) {
      
      chanCapacity_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 chan_capacity = 2[json_name = "chan_capacity"];</code>
     */
    public Builder clearChanCapacity() {
      
      chanCapacity_ = 0L;
      onChanged();
      return this;
    }

    private long amtToForward_ ;
    /**
     * <code>int64 amt_to_forward = 3[json_name = "amt_to_forward", deprecated = true];</code>
     */
    @java.lang.Deprecated public long getAmtToForward() {
      return amtToForward_;
    }
    /**
     * <code>int64 amt_to_forward = 3[json_name = "amt_to_forward", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setAmtToForward(long value) {
      
      amtToForward_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 amt_to_forward = 3[json_name = "amt_to_forward", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearAmtToForward() {
      
      amtToForward_ = 0L;
      onChanged();
      return this;
    }

    private long fee_ ;
    /**
     * <code>int64 fee = 4[json_name = "fee", deprecated = true];</code>
     */
    @java.lang.Deprecated public long getFee() {
      return fee_;
    }
    /**
     * <code>int64 fee = 4[json_name = "fee", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setFee(long value) {
      
      fee_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 fee = 4[json_name = "fee", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearFee() {
      
      fee_ = 0L;
      onChanged();
      return this;
    }

    private int expiry_ ;
    /**
     * <code>uint32 expiry = 5[json_name = "expiry"];</code>
     */
    public int getExpiry() {
      return expiry_;
    }
    /**
     * <code>uint32 expiry = 5[json_name = "expiry"];</code>
     */
    public Builder setExpiry(int value) {
      
      expiry_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 expiry = 5[json_name = "expiry"];</code>
     */
    public Builder clearExpiry() {
      
      expiry_ = 0;
      onChanged();
      return this;
    }

    private long amtToForwardMsat_ ;
    /**
     * <code>int64 amt_to_forward_msat = 6[json_name = "amt_to_forward_msat"];</code>
     */
    public long getAmtToForwardMsat() {
      return amtToForwardMsat_;
    }
    /**
     * <code>int64 amt_to_forward_msat = 6[json_name = "amt_to_forward_msat"];</code>
     */
    public Builder setAmtToForwardMsat(long value) {
      
      amtToForwardMsat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 amt_to_forward_msat = 6[json_name = "amt_to_forward_msat"];</code>
     */
    public Builder clearAmtToForwardMsat() {
      
      amtToForwardMsat_ = 0L;
      onChanged();
      return this;
    }

    private long feeMsat_ ;
    /**
     * <code>int64 fee_msat = 7[json_name = "fee_msat"];</code>
     */
    public long getFeeMsat() {
      return feeMsat_;
    }
    /**
     * <code>int64 fee_msat = 7[json_name = "fee_msat"];</code>
     */
    public Builder setFeeMsat(long value) {
      
      feeMsat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 fee_msat = 7[json_name = "fee_msat"];</code>
     */
    public Builder clearFeeMsat() {
      
      feeMsat_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.Hop)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.Hop)
  private static final lightpay.lnd.grpc.Hop DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.Hop();
  }

  public static lightpay.lnd.grpc.Hop getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Hop>
      PARSER = new com.google.protobuf.AbstractParser<Hop>() {
    public Hop parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Hop(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Hop> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Hop> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.Hop getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

