// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.HopHint}
 */
public  final class HopHint extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.HopHint)
    HopHintOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HopHint.newBuilder() to construct.
  private HopHint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HopHint() {
    nodeId_ = "";
    chanId_ = 0L;
    feeBaseMsat_ = 0;
    feeProportionalMillionths_ = 0;
    cltvExpiryDelta_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HopHint(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            nodeId_ = s;
            break;
          }
          case 16: {

            chanId_ = input.readUInt64();
            break;
          }
          case 24: {

            feeBaseMsat_ = input.readUInt32();
            break;
          }
          case 32: {

            feeProportionalMillionths_ = input.readUInt32();
            break;
          }
          case 40: {

            cltvExpiryDelta_ = input.readUInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_HopHint_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_HopHint_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.HopHint.class, lightpay.lnd.grpc.HopHint.Builder.class);
  }

  public static final int NODE_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object nodeId_;
  /**
   * <pre>
   *&#47; The public key of the node at the start of the channel.
   * </pre>
   *
   * <code>string node_id = 1[json_name = "node_id"];</code>
   */
  public java.lang.String getNodeId() {
    java.lang.Object ref = nodeId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nodeId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *&#47; The public key of the node at the start of the channel.
   * </pre>
   *
   * <code>string node_id = 1[json_name = "node_id"];</code>
   */
  public com.google.protobuf.ByteString
      getNodeIdBytes() {
    java.lang.Object ref = nodeId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nodeId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CHAN_ID_FIELD_NUMBER = 2;
  private long chanId_;
  /**
   * <pre>
   *&#47; The unique identifier of the channel.
   * </pre>
   *
   * <code>uint64 chan_id = 2[json_name = "chan_id"];</code>
   */
  public long getChanId() {
    return chanId_;
  }

  public static final int FEE_BASE_MSAT_FIELD_NUMBER = 3;
  private int feeBaseMsat_;
  /**
   * <pre>
   *&#47; The base fee of the channel denominated in millisatoshis.
   * </pre>
   *
   * <code>uint32 fee_base_msat = 3[json_name = "fee_base_msat"];</code>
   */
  public int getFeeBaseMsat() {
    return feeBaseMsat_;
  }

  public static final int FEE_PROPORTIONAL_MILLIONTHS_FIELD_NUMBER = 4;
  private int feeProportionalMillionths_;
  /**
   * <pre>
   **
   *The fee rate of the channel for sending one satoshi across it denominated in
   *millionths of a satoshi.
   * </pre>
   *
   * <code>uint32 fee_proportional_millionths = 4[json_name = "fee_proportional_millionths"];</code>
   */
  public int getFeeProportionalMillionths() {
    return feeProportionalMillionths_;
  }

  public static final int CLTV_EXPIRY_DELTA_FIELD_NUMBER = 5;
  private int cltvExpiryDelta_;
  /**
   * <pre>
   *&#47; The time-lock delta of the channel.
   * </pre>
   *
   * <code>uint32 cltv_expiry_delta = 5[json_name = "cltv_expiry_delta"];</code>
   */
  public int getCltvExpiryDelta() {
    return cltvExpiryDelta_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNodeIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeId_);
    }
    if (chanId_ != 0L) {
      output.writeUInt64(2, chanId_);
    }
    if (feeBaseMsat_ != 0) {
      output.writeUInt32(3, feeBaseMsat_);
    }
    if (feeProportionalMillionths_ != 0) {
      output.writeUInt32(4, feeProportionalMillionths_);
    }
    if (cltvExpiryDelta_ != 0) {
      output.writeUInt32(5, cltvExpiryDelta_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNodeIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeId_);
    }
    if (chanId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, chanId_);
    }
    if (feeBaseMsat_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, feeBaseMsat_);
    }
    if (feeProportionalMillionths_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, feeProportionalMillionths_);
    }
    if (cltvExpiryDelta_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, cltvExpiryDelta_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.HopHint)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.HopHint other = (lightpay.lnd.grpc.HopHint) obj;

    boolean result = true;
    result = result && getNodeId()
        .equals(other.getNodeId());
    result = result && (getChanId()
        == other.getChanId());
    result = result && (getFeeBaseMsat()
        == other.getFeeBaseMsat());
    result = result && (getFeeProportionalMillionths()
        == other.getFeeProportionalMillionths());
    result = result && (getCltvExpiryDelta()
        == other.getCltvExpiryDelta());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getNodeId().hashCode();
    hash = (37 * hash) + CHAN_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChanId());
    hash = (37 * hash) + FEE_BASE_MSAT_FIELD_NUMBER;
    hash = (53 * hash) + getFeeBaseMsat();
    hash = (37 * hash) + FEE_PROPORTIONAL_MILLIONTHS_FIELD_NUMBER;
    hash = (53 * hash) + getFeeProportionalMillionths();
    hash = (37 * hash) + CLTV_EXPIRY_DELTA_FIELD_NUMBER;
    hash = (53 * hash) + getCltvExpiryDelta();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.HopHint parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.HopHint parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.HopHint parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.HopHint parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.HopHint prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.HopHint}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.HopHint)
      lightpay.lnd.grpc.HopHintOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_HopHint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_HopHint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.HopHint.class, lightpay.lnd.grpc.HopHint.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.HopHint.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      nodeId_ = "";

      chanId_ = 0L;

      feeBaseMsat_ = 0;

      feeProportionalMillionths_ = 0;

      cltvExpiryDelta_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_HopHint_descriptor;
    }

    public lightpay.lnd.grpc.HopHint getDefaultInstanceForType() {
      return lightpay.lnd.grpc.HopHint.getDefaultInstance();
    }

    public lightpay.lnd.grpc.HopHint build() {
      lightpay.lnd.grpc.HopHint result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.HopHint buildPartial() {
      lightpay.lnd.grpc.HopHint result = new lightpay.lnd.grpc.HopHint(this);
      result.nodeId_ = nodeId_;
      result.chanId_ = chanId_;
      result.feeBaseMsat_ = feeBaseMsat_;
      result.feeProportionalMillionths_ = feeProportionalMillionths_;
      result.cltvExpiryDelta_ = cltvExpiryDelta_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.HopHint) {
        return mergeFrom((lightpay.lnd.grpc.HopHint)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.HopHint other) {
      if (other == lightpay.lnd.grpc.HopHint.getDefaultInstance()) return this;
      if (!other.getNodeId().isEmpty()) {
        nodeId_ = other.nodeId_;
        onChanged();
      }
      if (other.getChanId() != 0L) {
        setChanId(other.getChanId());
      }
      if (other.getFeeBaseMsat() != 0) {
        setFeeBaseMsat(other.getFeeBaseMsat());
      }
      if (other.getFeeProportionalMillionths() != 0) {
        setFeeProportionalMillionths(other.getFeeProportionalMillionths());
      }
      if (other.getCltvExpiryDelta() != 0) {
        setCltvExpiryDelta(other.getCltvExpiryDelta());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.HopHint parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.HopHint) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object nodeId_ = "";
    /**
     * <pre>
     *&#47; The public key of the node at the start of the channel.
     * </pre>
     *
     * <code>string node_id = 1[json_name = "node_id"];</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *&#47; The public key of the node at the start of the channel.
     * </pre>
     *
     * <code>string node_id = 1[json_name = "node_id"];</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *&#47; The public key of the node at the start of the channel.
     * </pre>
     *
     * <code>string node_id = 1[json_name = "node_id"];</code>
     */
    public Builder setNodeId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nodeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The public key of the node at the start of the channel.
     * </pre>
     *
     * <code>string node_id = 1[json_name = "node_id"];</code>
     */
    public Builder clearNodeId() {
      
      nodeId_ = getDefaultInstance().getNodeId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The public key of the node at the start of the channel.
     * </pre>
     *
     * <code>string node_id = 1[json_name = "node_id"];</code>
     */
    public Builder setNodeIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nodeId_ = value;
      onChanged();
      return this;
    }

    private long chanId_ ;
    /**
     * <pre>
     *&#47; The unique identifier of the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 2[json_name = "chan_id"];</code>
     */
    public long getChanId() {
      return chanId_;
    }
    /**
     * <pre>
     *&#47; The unique identifier of the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 2[json_name = "chan_id"];</code>
     */
    public Builder setChanId(long value) {
      
      chanId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The unique identifier of the channel.
     * </pre>
     *
     * <code>uint64 chan_id = 2[json_name = "chan_id"];</code>
     */
    public Builder clearChanId() {
      
      chanId_ = 0L;
      onChanged();
      return this;
    }

    private int feeBaseMsat_ ;
    /**
     * <pre>
     *&#47; The base fee of the channel denominated in millisatoshis.
     * </pre>
     *
     * <code>uint32 fee_base_msat = 3[json_name = "fee_base_msat"];</code>
     */
    public int getFeeBaseMsat() {
      return feeBaseMsat_;
    }
    /**
     * <pre>
     *&#47; The base fee of the channel denominated in millisatoshis.
     * </pre>
     *
     * <code>uint32 fee_base_msat = 3[json_name = "fee_base_msat"];</code>
     */
    public Builder setFeeBaseMsat(int value) {
      
      feeBaseMsat_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The base fee of the channel denominated in millisatoshis.
     * </pre>
     *
     * <code>uint32 fee_base_msat = 3[json_name = "fee_base_msat"];</code>
     */
    public Builder clearFeeBaseMsat() {
      
      feeBaseMsat_ = 0;
      onChanged();
      return this;
    }

    private int feeProportionalMillionths_ ;
    /**
     * <pre>
     **
     *The fee rate of the channel for sending one satoshi across it denominated in
     *millionths of a satoshi.
     * </pre>
     *
     * <code>uint32 fee_proportional_millionths = 4[json_name = "fee_proportional_millionths"];</code>
     */
    public int getFeeProportionalMillionths() {
      return feeProportionalMillionths_;
    }
    /**
     * <pre>
     **
     *The fee rate of the channel for sending one satoshi across it denominated in
     *millionths of a satoshi.
     * </pre>
     *
     * <code>uint32 fee_proportional_millionths = 4[json_name = "fee_proportional_millionths"];</code>
     */
    public Builder setFeeProportionalMillionths(int value) {
      
      feeProportionalMillionths_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The fee rate of the channel for sending one satoshi across it denominated in
     *millionths of a satoshi.
     * </pre>
     *
     * <code>uint32 fee_proportional_millionths = 4[json_name = "fee_proportional_millionths"];</code>
     */
    public Builder clearFeeProportionalMillionths() {
      
      feeProportionalMillionths_ = 0;
      onChanged();
      return this;
    }

    private int cltvExpiryDelta_ ;
    /**
     * <pre>
     *&#47; The time-lock delta of the channel.
     * </pre>
     *
     * <code>uint32 cltv_expiry_delta = 5[json_name = "cltv_expiry_delta"];</code>
     */
    public int getCltvExpiryDelta() {
      return cltvExpiryDelta_;
    }
    /**
     * <pre>
     *&#47; The time-lock delta of the channel.
     * </pre>
     *
     * <code>uint32 cltv_expiry_delta = 5[json_name = "cltv_expiry_delta"];</code>
     */
    public Builder setCltvExpiryDelta(int value) {
      
      cltvExpiryDelta_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The time-lock delta of the channel.
     * </pre>
     *
     * <code>uint32 cltv_expiry_delta = 5[json_name = "cltv_expiry_delta"];</code>
     */
    public Builder clearCltvExpiryDelta() {
      
      cltvExpiryDelta_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.HopHint)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.HopHint)
  private static final lightpay.lnd.grpc.HopHint DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.HopHint();
  }

  public static lightpay.lnd.grpc.HopHint getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HopHint>
      PARSER = new com.google.protobuf.AbstractParser<HopHint>() {
    public HopHint parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HopHint(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HopHint> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HopHint> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.HopHint getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

