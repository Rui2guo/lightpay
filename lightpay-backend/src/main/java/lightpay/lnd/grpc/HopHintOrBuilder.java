// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

public interface HopHintOrBuilder extends
    // @@protoc_insertion_point(interface_extends:lnrpc.HopHint)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *&#47; The public key of the node at the start of the channel.
   * </pre>
   *
   * <code>string node_id = 1[json_name = "node_id"];</code>
   */
  java.lang.String getNodeId();
  /**
   * <pre>
   *&#47; The public key of the node at the start of the channel.
   * </pre>
   *
   * <code>string node_id = 1[json_name = "node_id"];</code>
   */
  com.google.protobuf.ByteString
      getNodeIdBytes();

  /**
   * <pre>
   *&#47; The unique identifier of the channel.
   * </pre>
   *
   * <code>uint64 chan_id = 2[json_name = "chan_id"];</code>
   */
  long getChanId();

  /**
   * <pre>
   *&#47; The base fee of the channel denominated in millisatoshis.
   * </pre>
   *
   * <code>uint32 fee_base_msat = 3[json_name = "fee_base_msat"];</code>
   */
  int getFeeBaseMsat();

  /**
   * <pre>
   **
   *The fee rate of the channel for sending one satoshi across it denominated in
   *millionths of a satoshi.
   * </pre>
   *
   * <code>uint32 fee_proportional_millionths = 4[json_name = "fee_proportional_millionths"];</code>
   */
  int getFeeProportionalMillionths();

  /**
   * <pre>
   *&#47; The time-lock delta of the channel.
   * </pre>
   *
   * <code>uint32 cltv_expiry_delta = 5[json_name = "cltv_expiry_delta"];</code>
   */
  int getCltvExpiryDelta();
}
