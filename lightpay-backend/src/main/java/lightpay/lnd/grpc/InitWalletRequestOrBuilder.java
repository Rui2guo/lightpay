// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

public interface InitWalletRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:lnrpc.InitWalletRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   **
   *wallet_password is the passphrase that should be used to encrypt the
   *wallet. This MUST be at least 8 chars in length. After creation, this
   *password is required to unlock the daemon.
   * </pre>
   *
   * <code>bytes wallet_password = 1;</code>
   */
  com.google.protobuf.ByteString getWalletPassword();

  /**
   * <pre>
   **
   *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
   *cipher seed obtained by the user. This may have been generated by the
   *GenSeed method, or be an existing seed.
   * </pre>
   *
   * <code>repeated string cipher_seed_mnemonic = 2;</code>
   */
  java.util.List<java.lang.String>
      getCipherSeedMnemonicList();
  /**
   * <pre>
   **
   *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
   *cipher seed obtained by the user. This may have been generated by the
   *GenSeed method, or be an existing seed.
   * </pre>
   *
   * <code>repeated string cipher_seed_mnemonic = 2;</code>
   */
  int getCipherSeedMnemonicCount();
  /**
   * <pre>
   **
   *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
   *cipher seed obtained by the user. This may have been generated by the
   *GenSeed method, or be an existing seed.
   * </pre>
   *
   * <code>repeated string cipher_seed_mnemonic = 2;</code>
   */
  java.lang.String getCipherSeedMnemonic(int index);
  /**
   * <pre>
   **
   *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
   *cipher seed obtained by the user. This may have been generated by the
   *GenSeed method, or be an existing seed.
   * </pre>
   *
   * <code>repeated string cipher_seed_mnemonic = 2;</code>
   */
  com.google.protobuf.ByteString
      getCipherSeedMnemonicBytes(int index);

  /**
   * <pre>
   **
   *aezeed_passphrase is an optional user provided passphrase that will be used
   *to encrypt the generated aezeed cipher seed.
   * </pre>
   *
   * <code>bytes aezeed_passphrase = 3;</code>
   */
  com.google.protobuf.ByteString getAezeedPassphrase();
}
