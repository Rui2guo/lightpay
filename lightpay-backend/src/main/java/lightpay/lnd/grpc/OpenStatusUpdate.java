// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.OpenStatusUpdate}
 */
public  final class OpenStatusUpdate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.OpenStatusUpdate)
    OpenStatusUpdateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OpenStatusUpdate.newBuilder() to construct.
  private OpenStatusUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OpenStatusUpdate() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OpenStatusUpdate(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            lightpay.lnd.grpc.PendingUpdate.Builder subBuilder = null;
            if (updateCase_ == 1) {
              subBuilder = ((lightpay.lnd.grpc.PendingUpdate) update_).toBuilder();
            }
            update_ =
                input.readMessage(lightpay.lnd.grpc.PendingUpdate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((lightpay.lnd.grpc.PendingUpdate) update_);
              update_ = subBuilder.buildPartial();
            }
            updateCase_ = 1;
            break;
          }
          case 18: {
            lightpay.lnd.grpc.ConfirmationUpdate.Builder subBuilder = null;
            if (updateCase_ == 2) {
              subBuilder = ((lightpay.lnd.grpc.ConfirmationUpdate) update_).toBuilder();
            }
            update_ =
                input.readMessage(lightpay.lnd.grpc.ConfirmationUpdate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((lightpay.lnd.grpc.ConfirmationUpdate) update_);
              update_ = subBuilder.buildPartial();
            }
            updateCase_ = 2;
            break;
          }
          case 26: {
            lightpay.lnd.grpc.ChannelOpenUpdate.Builder subBuilder = null;
            if (updateCase_ == 3) {
              subBuilder = ((lightpay.lnd.grpc.ChannelOpenUpdate) update_).toBuilder();
            }
            update_ =
                input.readMessage(lightpay.lnd.grpc.ChannelOpenUpdate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((lightpay.lnd.grpc.ChannelOpenUpdate) update_);
              update_ = subBuilder.buildPartial();
            }
            updateCase_ = 3;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_OpenStatusUpdate_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_OpenStatusUpdate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.OpenStatusUpdate.class, lightpay.lnd.grpc.OpenStatusUpdate.Builder.class);
  }

  private int updateCase_ = 0;
  private java.lang.Object update_;
  public enum UpdateCase
      implements com.google.protobuf.Internal.EnumLite {
    CHAN_PENDING(1),
    CONFIRMATION(2),
    CHAN_OPEN(3),
    UPDATE_NOT_SET(0);
    private final int value;
    private UpdateCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UpdateCase valueOf(int value) {
      return forNumber(value);
    }

    public static UpdateCase forNumber(int value) {
      switch (value) {
        case 1: return CHAN_PENDING;
        case 2: return CONFIRMATION;
        case 3: return CHAN_OPEN;
        case 0: return UPDATE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public UpdateCase
  getUpdateCase() {
    return UpdateCase.forNumber(
        updateCase_);
  }

  public static final int CHAN_PENDING_FIELD_NUMBER = 1;
  /**
   * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
   */
  public boolean hasChanPending() {
    return updateCase_ == 1;
  }
  /**
   * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
   */
  public lightpay.lnd.grpc.PendingUpdate getChanPending() {
    if (updateCase_ == 1) {
       return (lightpay.lnd.grpc.PendingUpdate) update_;
    }
    return lightpay.lnd.grpc.PendingUpdate.getDefaultInstance();
  }
  /**
   * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
   */
  public lightpay.lnd.grpc.PendingUpdateOrBuilder getChanPendingOrBuilder() {
    if (updateCase_ == 1) {
       return (lightpay.lnd.grpc.PendingUpdate) update_;
    }
    return lightpay.lnd.grpc.PendingUpdate.getDefaultInstance();
  }

  public static final int CONFIRMATION_FIELD_NUMBER = 2;
  /**
   * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
   */
  public boolean hasConfirmation() {
    return updateCase_ == 2;
  }
  /**
   * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
   */
  public lightpay.lnd.grpc.ConfirmationUpdate getConfirmation() {
    if (updateCase_ == 2) {
       return (lightpay.lnd.grpc.ConfirmationUpdate) update_;
    }
    return lightpay.lnd.grpc.ConfirmationUpdate.getDefaultInstance();
  }
  /**
   * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
   */
  public lightpay.lnd.grpc.ConfirmationUpdateOrBuilder getConfirmationOrBuilder() {
    if (updateCase_ == 2) {
       return (lightpay.lnd.grpc.ConfirmationUpdate) update_;
    }
    return lightpay.lnd.grpc.ConfirmationUpdate.getDefaultInstance();
  }

  public static final int CHAN_OPEN_FIELD_NUMBER = 3;
  /**
   * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
   */
  public boolean hasChanOpen() {
    return updateCase_ == 3;
  }
  /**
   * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
   */
  public lightpay.lnd.grpc.ChannelOpenUpdate getChanOpen() {
    if (updateCase_ == 3) {
       return (lightpay.lnd.grpc.ChannelOpenUpdate) update_;
    }
    return lightpay.lnd.grpc.ChannelOpenUpdate.getDefaultInstance();
  }
  /**
   * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
   */
  public lightpay.lnd.grpc.ChannelOpenUpdateOrBuilder getChanOpenOrBuilder() {
    if (updateCase_ == 3) {
       return (lightpay.lnd.grpc.ChannelOpenUpdate) update_;
    }
    return lightpay.lnd.grpc.ChannelOpenUpdate.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (updateCase_ == 1) {
      output.writeMessage(1, (lightpay.lnd.grpc.PendingUpdate) update_);
    }
    if (updateCase_ == 2) {
      output.writeMessage(2, (lightpay.lnd.grpc.ConfirmationUpdate) update_);
    }
    if (updateCase_ == 3) {
      output.writeMessage(3, (lightpay.lnd.grpc.ChannelOpenUpdate) update_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (updateCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (lightpay.lnd.grpc.PendingUpdate) update_);
    }
    if (updateCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (lightpay.lnd.grpc.ConfirmationUpdate) update_);
    }
    if (updateCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (lightpay.lnd.grpc.ChannelOpenUpdate) update_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.OpenStatusUpdate)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.OpenStatusUpdate other = (lightpay.lnd.grpc.OpenStatusUpdate) obj;

    boolean result = true;
    result = result && getUpdateCase().equals(
        other.getUpdateCase());
    if (!result) return false;
    switch (updateCase_) {
      case 1:
        result = result && getChanPending()
            .equals(other.getChanPending());
        break;
      case 2:
        result = result && getConfirmation()
            .equals(other.getConfirmation());
        break;
      case 3:
        result = result && getChanOpen()
            .equals(other.getChanOpen());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (updateCase_) {
      case 1:
        hash = (37 * hash) + CHAN_PENDING_FIELD_NUMBER;
        hash = (53 * hash) + getChanPending().hashCode();
        break;
      case 2:
        hash = (37 * hash) + CONFIRMATION_FIELD_NUMBER;
        hash = (53 * hash) + getConfirmation().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CHAN_OPEN_FIELD_NUMBER;
        hash = (53 * hash) + getChanOpen().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.OpenStatusUpdate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.OpenStatusUpdate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.OpenStatusUpdate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.OpenStatusUpdate)
      lightpay.lnd.grpc.OpenStatusUpdateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_OpenStatusUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_OpenStatusUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.OpenStatusUpdate.class, lightpay.lnd.grpc.OpenStatusUpdate.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.OpenStatusUpdate.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      updateCase_ = 0;
      update_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_OpenStatusUpdate_descriptor;
    }

    public lightpay.lnd.grpc.OpenStatusUpdate getDefaultInstanceForType() {
      return lightpay.lnd.grpc.OpenStatusUpdate.getDefaultInstance();
    }

    public lightpay.lnd.grpc.OpenStatusUpdate build() {
      lightpay.lnd.grpc.OpenStatusUpdate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.OpenStatusUpdate buildPartial() {
      lightpay.lnd.grpc.OpenStatusUpdate result = new lightpay.lnd.grpc.OpenStatusUpdate(this);
      if (updateCase_ == 1) {
        if (chanPendingBuilder_ == null) {
          result.update_ = update_;
        } else {
          result.update_ = chanPendingBuilder_.build();
        }
      }
      if (updateCase_ == 2) {
        if (confirmationBuilder_ == null) {
          result.update_ = update_;
        } else {
          result.update_ = confirmationBuilder_.build();
        }
      }
      if (updateCase_ == 3) {
        if (chanOpenBuilder_ == null) {
          result.update_ = update_;
        } else {
          result.update_ = chanOpenBuilder_.build();
        }
      }
      result.updateCase_ = updateCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.OpenStatusUpdate) {
        return mergeFrom((lightpay.lnd.grpc.OpenStatusUpdate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.OpenStatusUpdate other) {
      if (other == lightpay.lnd.grpc.OpenStatusUpdate.getDefaultInstance()) return this;
      switch (other.getUpdateCase()) {
        case CHAN_PENDING: {
          mergeChanPending(other.getChanPending());
          break;
        }
        case CONFIRMATION: {
          mergeConfirmation(other.getConfirmation());
          break;
        }
        case CHAN_OPEN: {
          mergeChanOpen(other.getChanOpen());
          break;
        }
        case UPDATE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.OpenStatusUpdate parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.OpenStatusUpdate) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int updateCase_ = 0;
    private java.lang.Object update_;
    public UpdateCase
        getUpdateCase() {
      return UpdateCase.forNumber(
          updateCase_);
    }

    public Builder clearUpdate() {
      updateCase_ = 0;
      update_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.PendingUpdate, lightpay.lnd.grpc.PendingUpdate.Builder, lightpay.lnd.grpc.PendingUpdateOrBuilder> chanPendingBuilder_;
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public boolean hasChanPending() {
      return updateCase_ == 1;
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public lightpay.lnd.grpc.PendingUpdate getChanPending() {
      if (chanPendingBuilder_ == null) {
        if (updateCase_ == 1) {
          return (lightpay.lnd.grpc.PendingUpdate) update_;
        }
        return lightpay.lnd.grpc.PendingUpdate.getDefaultInstance();
      } else {
        if (updateCase_ == 1) {
          return chanPendingBuilder_.getMessage();
        }
        return lightpay.lnd.grpc.PendingUpdate.getDefaultInstance();
      }
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public Builder setChanPending(lightpay.lnd.grpc.PendingUpdate value) {
      if (chanPendingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        chanPendingBuilder_.setMessage(value);
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public Builder setChanPending(
        lightpay.lnd.grpc.PendingUpdate.Builder builderForValue) {
      if (chanPendingBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        chanPendingBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public Builder mergeChanPending(lightpay.lnd.grpc.PendingUpdate value) {
      if (chanPendingBuilder_ == null) {
        if (updateCase_ == 1 &&
            update_ != lightpay.lnd.grpc.PendingUpdate.getDefaultInstance()) {
          update_ = lightpay.lnd.grpc.PendingUpdate.newBuilder((lightpay.lnd.grpc.PendingUpdate) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 1) {
          chanPendingBuilder_.mergeFrom(value);
        }
        chanPendingBuilder_.setMessage(value);
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public Builder clearChanPending() {
      if (chanPendingBuilder_ == null) {
        if (updateCase_ == 1) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 1) {
          updateCase_ = 0;
          update_ = null;
        }
        chanPendingBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public lightpay.lnd.grpc.PendingUpdate.Builder getChanPendingBuilder() {
      return getChanPendingFieldBuilder().getBuilder();
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    public lightpay.lnd.grpc.PendingUpdateOrBuilder getChanPendingOrBuilder() {
      if ((updateCase_ == 1) && (chanPendingBuilder_ != null)) {
        return chanPendingBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 1) {
          return (lightpay.lnd.grpc.PendingUpdate) update_;
        }
        return lightpay.lnd.grpc.PendingUpdate.getDefaultInstance();
      }
    }
    /**
     * <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.PendingUpdate, lightpay.lnd.grpc.PendingUpdate.Builder, lightpay.lnd.grpc.PendingUpdateOrBuilder> 
        getChanPendingFieldBuilder() {
      if (chanPendingBuilder_ == null) {
        if (!(updateCase_ == 1)) {
          update_ = lightpay.lnd.grpc.PendingUpdate.getDefaultInstance();
        }
        chanPendingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            lightpay.lnd.grpc.PendingUpdate, lightpay.lnd.grpc.PendingUpdate.Builder, lightpay.lnd.grpc.PendingUpdateOrBuilder>(
                (lightpay.lnd.grpc.PendingUpdate) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 1;
      onChanged();;
      return chanPendingBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.ConfirmationUpdate, lightpay.lnd.grpc.ConfirmationUpdate.Builder, lightpay.lnd.grpc.ConfirmationUpdateOrBuilder> confirmationBuilder_;
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public boolean hasConfirmation() {
      return updateCase_ == 2;
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public lightpay.lnd.grpc.ConfirmationUpdate getConfirmation() {
      if (confirmationBuilder_ == null) {
        if (updateCase_ == 2) {
          return (lightpay.lnd.grpc.ConfirmationUpdate) update_;
        }
        return lightpay.lnd.grpc.ConfirmationUpdate.getDefaultInstance();
      } else {
        if (updateCase_ == 2) {
          return confirmationBuilder_.getMessage();
        }
        return lightpay.lnd.grpc.ConfirmationUpdate.getDefaultInstance();
      }
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public Builder setConfirmation(lightpay.lnd.grpc.ConfirmationUpdate value) {
      if (confirmationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        confirmationBuilder_.setMessage(value);
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public Builder setConfirmation(
        lightpay.lnd.grpc.ConfirmationUpdate.Builder builderForValue) {
      if (confirmationBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        confirmationBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public Builder mergeConfirmation(lightpay.lnd.grpc.ConfirmationUpdate value) {
      if (confirmationBuilder_ == null) {
        if (updateCase_ == 2 &&
            update_ != lightpay.lnd.grpc.ConfirmationUpdate.getDefaultInstance()) {
          update_ = lightpay.lnd.grpc.ConfirmationUpdate.newBuilder((lightpay.lnd.grpc.ConfirmationUpdate) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 2) {
          confirmationBuilder_.mergeFrom(value);
        }
        confirmationBuilder_.setMessage(value);
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public Builder clearConfirmation() {
      if (confirmationBuilder_ == null) {
        if (updateCase_ == 2) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 2) {
          updateCase_ = 0;
          update_ = null;
        }
        confirmationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public lightpay.lnd.grpc.ConfirmationUpdate.Builder getConfirmationBuilder() {
      return getConfirmationFieldBuilder().getBuilder();
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    public lightpay.lnd.grpc.ConfirmationUpdateOrBuilder getConfirmationOrBuilder() {
      if ((updateCase_ == 2) && (confirmationBuilder_ != null)) {
        return confirmationBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 2) {
          return (lightpay.lnd.grpc.ConfirmationUpdate) update_;
        }
        return lightpay.lnd.grpc.ConfirmationUpdate.getDefaultInstance();
      }
    }
    /**
     * <code>.lnrpc.ConfirmationUpdate confirmation = 2[json_name = "confirmation"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.ConfirmationUpdate, lightpay.lnd.grpc.ConfirmationUpdate.Builder, lightpay.lnd.grpc.ConfirmationUpdateOrBuilder> 
        getConfirmationFieldBuilder() {
      if (confirmationBuilder_ == null) {
        if (!(updateCase_ == 2)) {
          update_ = lightpay.lnd.grpc.ConfirmationUpdate.getDefaultInstance();
        }
        confirmationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            lightpay.lnd.grpc.ConfirmationUpdate, lightpay.lnd.grpc.ConfirmationUpdate.Builder, lightpay.lnd.grpc.ConfirmationUpdateOrBuilder>(
                (lightpay.lnd.grpc.ConfirmationUpdate) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 2;
      onChanged();;
      return confirmationBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.ChannelOpenUpdate, lightpay.lnd.grpc.ChannelOpenUpdate.Builder, lightpay.lnd.grpc.ChannelOpenUpdateOrBuilder> chanOpenBuilder_;
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public boolean hasChanOpen() {
      return updateCase_ == 3;
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public lightpay.lnd.grpc.ChannelOpenUpdate getChanOpen() {
      if (chanOpenBuilder_ == null) {
        if (updateCase_ == 3) {
          return (lightpay.lnd.grpc.ChannelOpenUpdate) update_;
        }
        return lightpay.lnd.grpc.ChannelOpenUpdate.getDefaultInstance();
      } else {
        if (updateCase_ == 3) {
          return chanOpenBuilder_.getMessage();
        }
        return lightpay.lnd.grpc.ChannelOpenUpdate.getDefaultInstance();
      }
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public Builder setChanOpen(lightpay.lnd.grpc.ChannelOpenUpdate value) {
      if (chanOpenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        chanOpenBuilder_.setMessage(value);
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public Builder setChanOpen(
        lightpay.lnd.grpc.ChannelOpenUpdate.Builder builderForValue) {
      if (chanOpenBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        chanOpenBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public Builder mergeChanOpen(lightpay.lnd.grpc.ChannelOpenUpdate value) {
      if (chanOpenBuilder_ == null) {
        if (updateCase_ == 3 &&
            update_ != lightpay.lnd.grpc.ChannelOpenUpdate.getDefaultInstance()) {
          update_ = lightpay.lnd.grpc.ChannelOpenUpdate.newBuilder((lightpay.lnd.grpc.ChannelOpenUpdate) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 3) {
          chanOpenBuilder_.mergeFrom(value);
        }
        chanOpenBuilder_.setMessage(value);
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public Builder clearChanOpen() {
      if (chanOpenBuilder_ == null) {
        if (updateCase_ == 3) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 3) {
          updateCase_ = 0;
          update_ = null;
        }
        chanOpenBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public lightpay.lnd.grpc.ChannelOpenUpdate.Builder getChanOpenBuilder() {
      return getChanOpenFieldBuilder().getBuilder();
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    public lightpay.lnd.grpc.ChannelOpenUpdateOrBuilder getChanOpenOrBuilder() {
      if ((updateCase_ == 3) && (chanOpenBuilder_ != null)) {
        return chanOpenBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 3) {
          return (lightpay.lnd.grpc.ChannelOpenUpdate) update_;
        }
        return lightpay.lnd.grpc.ChannelOpenUpdate.getDefaultInstance();
      }
    }
    /**
     * <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        lightpay.lnd.grpc.ChannelOpenUpdate, lightpay.lnd.grpc.ChannelOpenUpdate.Builder, lightpay.lnd.grpc.ChannelOpenUpdateOrBuilder> 
        getChanOpenFieldBuilder() {
      if (chanOpenBuilder_ == null) {
        if (!(updateCase_ == 3)) {
          update_ = lightpay.lnd.grpc.ChannelOpenUpdate.getDefaultInstance();
        }
        chanOpenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            lightpay.lnd.grpc.ChannelOpenUpdate, lightpay.lnd.grpc.ChannelOpenUpdate.Builder, lightpay.lnd.grpc.ChannelOpenUpdateOrBuilder>(
                (lightpay.lnd.grpc.ChannelOpenUpdate) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 3;
      onChanged();;
      return chanOpenBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.OpenStatusUpdate)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.OpenStatusUpdate)
  private static final lightpay.lnd.grpc.OpenStatusUpdate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.OpenStatusUpdate();
  }

  public static lightpay.lnd.grpc.OpenStatusUpdate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OpenStatusUpdate>
      PARSER = new com.google.protobuf.AbstractParser<OpenStatusUpdate>() {
    public OpenStatusUpdate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OpenStatusUpdate(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OpenStatusUpdate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OpenStatusUpdate> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.OpenStatusUpdate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

