// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.PendingChannelsResponse}
 */
public  final class PendingChannelsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.PendingChannelsResponse)
    PendingChannelsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PendingChannelsResponse.newBuilder() to construct.
  private PendingChannelsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PendingChannelsResponse() {
    totalLimboBalance_ = 0L;
    pendingOpenChannels_ = java.util.Collections.emptyList();
    pendingClosingChannels_ = java.util.Collections.emptyList();
    pendingForceClosingChannels_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PendingChannelsResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            totalLimboBalance_ = input.readInt64();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              pendingOpenChannels_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel>();
              mutable_bitField0_ |= 0x00000002;
            }
            pendingOpenChannels_.add(
                input.readMessage(lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              pendingClosingChannels_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel>();
              mutable_bitField0_ |= 0x00000004;
            }
            pendingClosingChannels_.add(
                input.readMessage(lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              pendingForceClosingChannels_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel>();
              mutable_bitField0_ |= 0x00000008;
            }
            pendingForceClosingChannels_.add(
                input.readMessage(lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        pendingOpenChannels_ = java.util.Collections.unmodifiableList(pendingOpenChannels_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        pendingClosingChannels_ = java.util.Collections.unmodifiableList(pendingClosingChannels_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        pendingForceClosingChannels_ = java.util.Collections.unmodifiableList(pendingForceClosingChannels_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.PendingChannelsResponse.class, lightpay.lnd.grpc.PendingChannelsResponse.Builder.class);
  }

  public interface PendingChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.PendingChannelsResponse.PendingChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
     */
    java.lang.String getRemoteNodePub();
    /**
     * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
     */
    com.google.protobuf.ByteString
        getRemoteNodePubBytes();

    /**
     * <code>string channel_point = 2[json_name = "channel_point"];</code>
     */
    java.lang.String getChannelPoint();
    /**
     * <code>string channel_point = 2[json_name = "channel_point"];</code>
     */
    com.google.protobuf.ByteString
        getChannelPointBytes();

    /**
     * <code>int64 capacity = 3[json_name = "capacity"];</code>
     */
    long getCapacity();

    /**
     * <code>int64 local_balance = 4[json_name = "local_balance"];</code>
     */
    long getLocalBalance();

    /**
     * <code>int64 remote_balance = 5[json_name = "remote_balance"];</code>
     */
    long getRemoteBalance();
  }
  /**
   * Protobuf type {@code lnrpc.PendingChannelsResponse.PendingChannel}
   */
  public  static final class PendingChannel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.PendingChannelsResponse.PendingChannel)
      PendingChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PendingChannel.newBuilder() to construct.
    private PendingChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PendingChannel() {
      remoteNodePub_ = "";
      channelPoint_ = "";
      capacity_ = 0L;
      localBalance_ = 0L;
      remoteBalance_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PendingChannel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              remoteNodePub_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              channelPoint_ = s;
              break;
            }
            case 24: {

              capacity_ = input.readInt64();
              break;
            }
            case 32: {

              localBalance_ = input.readInt64();
              break;
            }
            case 40: {

              remoteBalance_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingChannel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder.class);
    }

    public static final int REMOTE_NODE_PUB_FIELD_NUMBER = 1;
    private volatile java.lang.Object remoteNodePub_;
    /**
     * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
     */
    public java.lang.String getRemoteNodePub() {
      java.lang.Object ref = remoteNodePub_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        remoteNodePub_ = s;
        return s;
      }
    }
    /**
     * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
     */
    public com.google.protobuf.ByteString
        getRemoteNodePubBytes() {
      java.lang.Object ref = remoteNodePub_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        remoteNodePub_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_POINT_FIELD_NUMBER = 2;
    private volatile java.lang.Object channelPoint_;
    /**
     * <code>string channel_point = 2[json_name = "channel_point"];</code>
     */
    public java.lang.String getChannelPoint() {
      java.lang.Object ref = channelPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        channelPoint_ = s;
        return s;
      }
    }
    /**
     * <code>string channel_point = 2[json_name = "channel_point"];</code>
     */
    public com.google.protobuf.ByteString
        getChannelPointBytes() {
      java.lang.Object ref = channelPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAPACITY_FIELD_NUMBER = 3;
    private long capacity_;
    /**
     * <code>int64 capacity = 3[json_name = "capacity"];</code>
     */
    public long getCapacity() {
      return capacity_;
    }

    public static final int LOCAL_BALANCE_FIELD_NUMBER = 4;
    private long localBalance_;
    /**
     * <code>int64 local_balance = 4[json_name = "local_balance"];</code>
     */
    public long getLocalBalance() {
      return localBalance_;
    }

    public static final int REMOTE_BALANCE_FIELD_NUMBER = 5;
    private long remoteBalance_;
    /**
     * <code>int64 remote_balance = 5[json_name = "remote_balance"];</code>
     */
    public long getRemoteBalance() {
      return remoteBalance_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRemoteNodePubBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, remoteNodePub_);
      }
      if (!getChannelPointBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, channelPoint_);
      }
      if (capacity_ != 0L) {
        output.writeInt64(3, capacity_);
      }
      if (localBalance_ != 0L) {
        output.writeInt64(4, localBalance_);
      }
      if (remoteBalance_ != 0L) {
        output.writeInt64(5, remoteBalance_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRemoteNodePubBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, remoteNodePub_);
      }
      if (!getChannelPointBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, channelPoint_);
      }
      if (capacity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, capacity_);
      }
      if (localBalance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, localBalance_);
      }
      if (remoteBalance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, remoteBalance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel)) {
        return super.equals(obj);
      }
      lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel other = (lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel) obj;

      boolean result = true;
      result = result && getRemoteNodePub()
          .equals(other.getRemoteNodePub());
      result = result && getChannelPoint()
          .equals(other.getChannelPoint());
      result = result && (getCapacity()
          == other.getCapacity());
      result = result && (getLocalBalance()
          == other.getLocalBalance());
      result = result && (getRemoteBalance()
          == other.getRemoteBalance());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REMOTE_NODE_PUB_FIELD_NUMBER;
      hash = (53 * hash) + getRemoteNodePub().hashCode();
      hash = (37 * hash) + CHANNEL_POINT_FIELD_NUMBER;
      hash = (53 * hash) + getChannelPoint().hashCode();
      hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCapacity());
      hash = (37 * hash) + LOCAL_BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLocalBalance());
      hash = (37 * hash) + REMOTE_BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRemoteBalance());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.PendingChannelsResponse.PendingChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.PendingChannelsResponse.PendingChannel)
        lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingChannel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder.class);
      }

      // Construct using lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        remoteNodePub_ = "";

        channelPoint_ = "";

        capacity_ = 0L;

        localBalance_ = 0L;

        remoteBalance_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingChannel_descriptor;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getDefaultInstanceForType() {
        return lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance();
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel build() {
        lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel buildPartial() {
        lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel result = new lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel(this);
        result.remoteNodePub_ = remoteNodePub_;
        result.channelPoint_ = channelPoint_;
        result.capacity_ = capacity_;
        result.localBalance_ = localBalance_;
        result.remoteBalance_ = remoteBalance_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel) {
          return mergeFrom((lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel other) {
        if (other == lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance()) return this;
        if (!other.getRemoteNodePub().isEmpty()) {
          remoteNodePub_ = other.remoteNodePub_;
          onChanged();
        }
        if (!other.getChannelPoint().isEmpty()) {
          channelPoint_ = other.channelPoint_;
          onChanged();
        }
        if (other.getCapacity() != 0L) {
          setCapacity(other.getCapacity());
        }
        if (other.getLocalBalance() != 0L) {
          setLocalBalance(other.getLocalBalance());
        }
        if (other.getRemoteBalance() != 0L) {
          setRemoteBalance(other.getRemoteBalance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object remoteNodePub_ = "";
      /**
       * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
       */
      public java.lang.String getRemoteNodePub() {
        java.lang.Object ref = remoteNodePub_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          remoteNodePub_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
       */
      public com.google.protobuf.ByteString
          getRemoteNodePubBytes() {
        java.lang.Object ref = remoteNodePub_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          remoteNodePub_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
       */
      public Builder setRemoteNodePub(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        remoteNodePub_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
       */
      public Builder clearRemoteNodePub() {
        
        remoteNodePub_ = getDefaultInstance().getRemoteNodePub();
        onChanged();
        return this;
      }
      /**
       * <code>string remote_node_pub = 1[json_name = "remote_node_pub"];</code>
       */
      public Builder setRemoteNodePubBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        remoteNodePub_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelPoint_ = "";
      /**
       * <code>string channel_point = 2[json_name = "channel_point"];</code>
       */
      public java.lang.String getChannelPoint() {
        java.lang.Object ref = channelPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          channelPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string channel_point = 2[json_name = "channel_point"];</code>
       */
      public com.google.protobuf.ByteString
          getChannelPointBytes() {
        java.lang.Object ref = channelPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string channel_point = 2[json_name = "channel_point"];</code>
       */
      public Builder setChannelPoint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        channelPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string channel_point = 2[json_name = "channel_point"];</code>
       */
      public Builder clearChannelPoint() {
        
        channelPoint_ = getDefaultInstance().getChannelPoint();
        onChanged();
        return this;
      }
      /**
       * <code>string channel_point = 2[json_name = "channel_point"];</code>
       */
      public Builder setChannelPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        channelPoint_ = value;
        onChanged();
        return this;
      }

      private long capacity_ ;
      /**
       * <code>int64 capacity = 3[json_name = "capacity"];</code>
       */
      public long getCapacity() {
        return capacity_;
      }
      /**
       * <code>int64 capacity = 3[json_name = "capacity"];</code>
       */
      public Builder setCapacity(long value) {
        
        capacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 capacity = 3[json_name = "capacity"];</code>
       */
      public Builder clearCapacity() {
        
        capacity_ = 0L;
        onChanged();
        return this;
      }

      private long localBalance_ ;
      /**
       * <code>int64 local_balance = 4[json_name = "local_balance"];</code>
       */
      public long getLocalBalance() {
        return localBalance_;
      }
      /**
       * <code>int64 local_balance = 4[json_name = "local_balance"];</code>
       */
      public Builder setLocalBalance(long value) {
        
        localBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 local_balance = 4[json_name = "local_balance"];</code>
       */
      public Builder clearLocalBalance() {
        
        localBalance_ = 0L;
        onChanged();
        return this;
      }

      private long remoteBalance_ ;
      /**
       * <code>int64 remote_balance = 5[json_name = "remote_balance"];</code>
       */
      public long getRemoteBalance() {
        return remoteBalance_;
      }
      /**
       * <code>int64 remote_balance = 5[json_name = "remote_balance"];</code>
       */
      public Builder setRemoteBalance(long value) {
        
        remoteBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 remote_balance = 5[json_name = "remote_balance"];</code>
       */
      public Builder clearRemoteBalance() {
        
        remoteBalance_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.PendingChannelsResponse.PendingChannel)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.PendingChannel)
    private static final lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel();
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PendingChannel>
        PARSER = new com.google.protobuf.AbstractParser<PendingChannel>() {
      public PendingChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PendingChannel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PendingChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PendingChannel> getParserForType() {
      return PARSER;
    }

    public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PendingOpenChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.PendingChannelsResponse.PendingOpenChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; The pending channel
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    boolean hasChannel();
    /**
     * <pre>
     *&#47; The pending channel
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel();
    /**
     * <pre>
     *&#47; The pending channel
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder();

    /**
     * <pre>
     *&#47; The height at which this channel will be confirmed
     * </pre>
     *
     * <code>uint32 confirmation_height = 2[json_name = "confirmation_height"];</code>
     */
    int getConfirmationHeight();

    /**
     * <pre>
     **
     *The amount calculated to be paid in fees for the current set of
     *commitment transactions. The fee amount is persisted with the channel
     *in order to allow the fee amount to be removed and recalculated with
     *each channel state update, including updates that happen after a system
     *restart.
     * </pre>
     *
     * <code>int64 commit_fee = 4[json_name = "commit_fee"];</code>
     */
    long getCommitFee();

    /**
     * <pre>
     *&#47; The weight of the commitment transaction
     * </pre>
     *
     * <code>int64 commit_weight = 5[json_name = "commit_weight"];</code>
     */
    long getCommitWeight();

    /**
     * <pre>
     **
     *The required number of satoshis per kilo-weight that the requester will
     *pay at all times, for both the funding transaction and commitment
     *transaction. This value can later be updated once the channel is open.
     * </pre>
     *
     * <code>int64 fee_per_kw = 6[json_name = "fee_per_kw"];</code>
     */
    long getFeePerKw();
  }
  /**
   * Protobuf type {@code lnrpc.PendingChannelsResponse.PendingOpenChannel}
   */
  public  static final class PendingOpenChannel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.PendingChannelsResponse.PendingOpenChannel)
      PendingOpenChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PendingOpenChannel.newBuilder() to construct.
    private PendingOpenChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PendingOpenChannel() {
      confirmationHeight_ = 0;
      commitFee_ = 0L;
      commitWeight_ = 0L;
      feePerKw_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PendingOpenChannel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder subBuilder = null;
              if (channel_ != null) {
                subBuilder = channel_.toBuilder();
              }
              channel_ = input.readMessage(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(channel_);
                channel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              confirmationHeight_ = input.readUInt32();
              break;
            }
            case 32: {

              commitFee_ = input.readInt64();
              break;
            }
            case 40: {

              commitWeight_ = input.readInt64();
              break;
            }
            case 48: {

              feePerKw_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingOpenChannel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingOpenChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder.class);
    }

    public static final int CHANNEL_FIELD_NUMBER = 1;
    private lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel channel_;
    /**
     * <pre>
     *&#47; The pending channel
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    public boolean hasChannel() {
      return channel_ != null;
    }
    /**
     * <pre>
     *&#47; The pending channel
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel() {
      return channel_ == null ? lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
    }
    /**
     * <pre>
     *&#47; The pending channel
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder() {
      return getChannel();
    }

    public static final int CONFIRMATION_HEIGHT_FIELD_NUMBER = 2;
    private int confirmationHeight_;
    /**
     * <pre>
     *&#47; The height at which this channel will be confirmed
     * </pre>
     *
     * <code>uint32 confirmation_height = 2[json_name = "confirmation_height"];</code>
     */
    public int getConfirmationHeight() {
      return confirmationHeight_;
    }

    public static final int COMMIT_FEE_FIELD_NUMBER = 4;
    private long commitFee_;
    /**
     * <pre>
     **
     *The amount calculated to be paid in fees for the current set of
     *commitment transactions. The fee amount is persisted with the channel
     *in order to allow the fee amount to be removed and recalculated with
     *each channel state update, including updates that happen after a system
     *restart.
     * </pre>
     *
     * <code>int64 commit_fee = 4[json_name = "commit_fee"];</code>
     */
    public long getCommitFee() {
      return commitFee_;
    }

    public static final int COMMIT_WEIGHT_FIELD_NUMBER = 5;
    private long commitWeight_;
    /**
     * <pre>
     *&#47; The weight of the commitment transaction
     * </pre>
     *
     * <code>int64 commit_weight = 5[json_name = "commit_weight"];</code>
     */
    public long getCommitWeight() {
      return commitWeight_;
    }

    public static final int FEE_PER_KW_FIELD_NUMBER = 6;
    private long feePerKw_;
    /**
     * <pre>
     **
     *The required number of satoshis per kilo-weight that the requester will
     *pay at all times, for both the funding transaction and commitment
     *transaction. This value can later be updated once the channel is open.
     * </pre>
     *
     * <code>int64 fee_per_kw = 6[json_name = "fee_per_kw"];</code>
     */
    public long getFeePerKw() {
      return feePerKw_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (channel_ != null) {
        output.writeMessage(1, getChannel());
      }
      if (confirmationHeight_ != 0) {
        output.writeUInt32(2, confirmationHeight_);
      }
      if (commitFee_ != 0L) {
        output.writeInt64(4, commitFee_);
      }
      if (commitWeight_ != 0L) {
        output.writeInt64(5, commitWeight_);
      }
      if (feePerKw_ != 0L) {
        output.writeInt64(6, feePerKw_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (channel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannel());
      }
      if (confirmationHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, confirmationHeight_);
      }
      if (commitFee_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, commitFee_);
      }
      if (commitWeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, commitWeight_);
      }
      if (feePerKw_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, feePerKw_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel)) {
        return super.equals(obj);
      }
      lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel other = (lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel) obj;

      boolean result = true;
      result = result && (hasChannel() == other.hasChannel());
      if (hasChannel()) {
        result = result && getChannel()
            .equals(other.getChannel());
      }
      result = result && (getConfirmationHeight()
          == other.getConfirmationHeight());
      result = result && (getCommitFee()
          == other.getCommitFee());
      result = result && (getCommitWeight()
          == other.getCommitWeight());
      result = result && (getFeePerKw()
          == other.getFeePerKw());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannel()) {
        hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
        hash = (53 * hash) + getChannel().hashCode();
      }
      hash = (37 * hash) + CONFIRMATION_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getConfirmationHeight();
      hash = (37 * hash) + COMMIT_FEE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCommitFee());
      hash = (37 * hash) + COMMIT_WEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCommitWeight());
      hash = (37 * hash) + FEE_PER_KW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFeePerKw());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.PendingChannelsResponse.PendingOpenChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.PendingChannelsResponse.PendingOpenChannel)
        lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingOpenChannel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingOpenChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder.class);
      }

      // Construct using lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (channelBuilder_ == null) {
          channel_ = null;
        } else {
          channel_ = null;
          channelBuilder_ = null;
        }
        confirmationHeight_ = 0;

        commitFee_ = 0L;

        commitWeight_ = 0L;

        feePerKw_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_PendingOpenChannel_descriptor;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel getDefaultInstanceForType() {
        return lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.getDefaultInstance();
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel build() {
        lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel buildPartial() {
        lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel result = new lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel(this);
        if (channelBuilder_ == null) {
          result.channel_ = channel_;
        } else {
          result.channel_ = channelBuilder_.build();
        }
        result.confirmationHeight_ = confirmationHeight_;
        result.commitFee_ = commitFee_;
        result.commitWeight_ = commitWeight_;
        result.feePerKw_ = feePerKw_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel) {
          return mergeFrom((lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel other) {
        if (other == lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.getDefaultInstance()) return this;
        if (other.hasChannel()) {
          mergeChannel(other.getChannel());
        }
        if (other.getConfirmationHeight() != 0) {
          setConfirmationHeight(other.getConfirmationHeight());
        }
        if (other.getCommitFee() != 0L) {
          setCommitFee(other.getCommitFee());
        }
        if (other.getCommitWeight() != 0L) {
          setCommitWeight(other.getCommitWeight());
        }
        if (other.getFeePerKw() != 0L) {
          setFeePerKw(other.getFeePerKw());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel channel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder> channelBuilder_;
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public boolean hasChannel() {
        return channelBuilder_ != null || channel_ != null;
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel() {
        if (channelBuilder_ == null) {
          return channel_ == null ? lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
        } else {
          return channelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder setChannel(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel value) {
        if (channelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          channel_ = value;
          onChanged();
        } else {
          channelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder setChannel(
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder builderForValue) {
        if (channelBuilder_ == null) {
          channel_ = builderForValue.build();
          onChanged();
        } else {
          channelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder mergeChannel(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel value) {
        if (channelBuilder_ == null) {
          if (channel_ != null) {
            channel_ =
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.newBuilder(channel_).mergeFrom(value).buildPartial();
          } else {
            channel_ = value;
          }
          onChanged();
        } else {
          channelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder clearChannel() {
        if (channelBuilder_ == null) {
          channel_ = null;
          onChanged();
        } else {
          channel_ = null;
          channelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder getChannelBuilder() {
        
        onChanged();
        return getChannelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder() {
        if (channelBuilder_ != null) {
          return channelBuilder_.getMessageOrBuilder();
        } else {
          return channel_ == null ?
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
        }
      }
      /**
       * <pre>
       *&#47; The pending channel
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder> 
          getChannelFieldBuilder() {
        if (channelBuilder_ == null) {
          channelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder>(
                  getChannel(),
                  getParentForChildren(),
                  isClean());
          channel_ = null;
        }
        return channelBuilder_;
      }

      private int confirmationHeight_ ;
      /**
       * <pre>
       *&#47; The height at which this channel will be confirmed
       * </pre>
       *
       * <code>uint32 confirmation_height = 2[json_name = "confirmation_height"];</code>
       */
      public int getConfirmationHeight() {
        return confirmationHeight_;
      }
      /**
       * <pre>
       *&#47; The height at which this channel will be confirmed
       * </pre>
       *
       * <code>uint32 confirmation_height = 2[json_name = "confirmation_height"];</code>
       */
      public Builder setConfirmationHeight(int value) {
        
        confirmationHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The height at which this channel will be confirmed
       * </pre>
       *
       * <code>uint32 confirmation_height = 2[json_name = "confirmation_height"];</code>
       */
      public Builder clearConfirmationHeight() {
        
        confirmationHeight_ = 0;
        onChanged();
        return this;
      }

      private long commitFee_ ;
      /**
       * <pre>
       **
       *The amount calculated to be paid in fees for the current set of
       *commitment transactions. The fee amount is persisted with the channel
       *in order to allow the fee amount to be removed and recalculated with
       *each channel state update, including updates that happen after a system
       *restart.
       * </pre>
       *
       * <code>int64 commit_fee = 4[json_name = "commit_fee"];</code>
       */
      public long getCommitFee() {
        return commitFee_;
      }
      /**
       * <pre>
       **
       *The amount calculated to be paid in fees for the current set of
       *commitment transactions. The fee amount is persisted with the channel
       *in order to allow the fee amount to be removed and recalculated with
       *each channel state update, including updates that happen after a system
       *restart.
       * </pre>
       *
       * <code>int64 commit_fee = 4[json_name = "commit_fee"];</code>
       */
      public Builder setCommitFee(long value) {
        
        commitFee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       *The amount calculated to be paid in fees for the current set of
       *commitment transactions. The fee amount is persisted with the channel
       *in order to allow the fee amount to be removed and recalculated with
       *each channel state update, including updates that happen after a system
       *restart.
       * </pre>
       *
       * <code>int64 commit_fee = 4[json_name = "commit_fee"];</code>
       */
      public Builder clearCommitFee() {
        
        commitFee_ = 0L;
        onChanged();
        return this;
      }

      private long commitWeight_ ;
      /**
       * <pre>
       *&#47; The weight of the commitment transaction
       * </pre>
       *
       * <code>int64 commit_weight = 5[json_name = "commit_weight"];</code>
       */
      public long getCommitWeight() {
        return commitWeight_;
      }
      /**
       * <pre>
       *&#47; The weight of the commitment transaction
       * </pre>
       *
       * <code>int64 commit_weight = 5[json_name = "commit_weight"];</code>
       */
      public Builder setCommitWeight(long value) {
        
        commitWeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The weight of the commitment transaction
       * </pre>
       *
       * <code>int64 commit_weight = 5[json_name = "commit_weight"];</code>
       */
      public Builder clearCommitWeight() {
        
        commitWeight_ = 0L;
        onChanged();
        return this;
      }

      private long feePerKw_ ;
      /**
       * <pre>
       **
       *The required number of satoshis per kilo-weight that the requester will
       *pay at all times, for both the funding transaction and commitment
       *transaction. This value can later be updated once the channel is open.
       * </pre>
       *
       * <code>int64 fee_per_kw = 6[json_name = "fee_per_kw"];</code>
       */
      public long getFeePerKw() {
        return feePerKw_;
      }
      /**
       * <pre>
       **
       *The required number of satoshis per kilo-weight that the requester will
       *pay at all times, for both the funding transaction and commitment
       *transaction. This value can later be updated once the channel is open.
       * </pre>
       *
       * <code>int64 fee_per_kw = 6[json_name = "fee_per_kw"];</code>
       */
      public Builder setFeePerKw(long value) {
        
        feePerKw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       *The required number of satoshis per kilo-weight that the requester will
       *pay at all times, for both the funding transaction and commitment
       *transaction. This value can later be updated once the channel is open.
       * </pre>
       *
       * <code>int64 fee_per_kw = 6[json_name = "fee_per_kw"];</code>
       */
      public Builder clearFeePerKw() {
        
        feePerKw_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.PendingChannelsResponse.PendingOpenChannel)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.PendingOpenChannel)
    private static final lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel();
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PendingOpenChannel>
        PARSER = new com.google.protobuf.AbstractParser<PendingOpenChannel>() {
      public PendingOpenChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PendingOpenChannel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PendingOpenChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PendingOpenChannel> getParserForType() {
      return PARSER;
    }

    public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClosedChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.PendingChannelsResponse.ClosedChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; The pending channel to be closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
     */
    boolean hasChannel();
    /**
     * <pre>
     *&#47; The pending channel to be closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
     */
    lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel();
    /**
     * <pre>
     *&#47; The pending channel to be closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
     */
    lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder();

    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    java.lang.String getClosingTxid();
    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    com.google.protobuf.ByteString
        getClosingTxidBytes();
  }
  /**
   * Protobuf type {@code lnrpc.PendingChannelsResponse.ClosedChannel}
   */
  public  static final class ClosedChannel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.PendingChannelsResponse.ClosedChannel)
      ClosedChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClosedChannel.newBuilder() to construct.
    private ClosedChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClosedChannel() {
      closingTxid_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClosedChannel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder subBuilder = null;
              if (channel_ != null) {
                subBuilder = channel_.toBuilder();
              }
              channel_ = input.readMessage(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(channel_);
                channel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              closingTxid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ClosedChannel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ClosedChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder.class);
    }

    public static final int CHANNEL_FIELD_NUMBER = 1;
    private lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel channel_;
    /**
     * <pre>
     *&#47; The pending channel to be closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
     */
    public boolean hasChannel() {
      return channel_ != null;
    }
    /**
     * <pre>
     *&#47; The pending channel to be closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel() {
      return channel_ == null ? lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
    }
    /**
     * <pre>
     *&#47; The pending channel to be closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder() {
      return getChannel();
    }

    public static final int CLOSING_TXID_FIELD_NUMBER = 2;
    private volatile java.lang.Object closingTxid_;
    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    public java.lang.String getClosingTxid() {
      java.lang.Object ref = closingTxid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        closingTxid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    public com.google.protobuf.ByteString
        getClosingTxidBytes() {
      java.lang.Object ref = closingTxid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        closingTxid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (channel_ != null) {
        output.writeMessage(1, getChannel());
      }
      if (!getClosingTxidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, closingTxid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (channel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannel());
      }
      if (!getClosingTxidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, closingTxid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel)) {
        return super.equals(obj);
      }
      lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel other = (lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel) obj;

      boolean result = true;
      result = result && (hasChannel() == other.hasChannel());
      if (hasChannel()) {
        result = result && getChannel()
            .equals(other.getChannel());
      }
      result = result && getClosingTxid()
          .equals(other.getClosingTxid());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannel()) {
        hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
        hash = (53 * hash) + getChannel().hashCode();
      }
      hash = (37 * hash) + CLOSING_TXID_FIELD_NUMBER;
      hash = (53 * hash) + getClosingTxid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.PendingChannelsResponse.ClosedChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.PendingChannelsResponse.ClosedChannel)
        lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ClosedChannel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ClosedChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder.class);
      }

      // Construct using lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (channelBuilder_ == null) {
          channel_ = null;
        } else {
          channel_ = null;
          channelBuilder_ = null;
        }
        closingTxid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ClosedChannel_descriptor;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel getDefaultInstanceForType() {
        return lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.getDefaultInstance();
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel build() {
        lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel buildPartial() {
        lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel result = new lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel(this);
        if (channelBuilder_ == null) {
          result.channel_ = channel_;
        } else {
          result.channel_ = channelBuilder_.build();
        }
        result.closingTxid_ = closingTxid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel) {
          return mergeFrom((lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel other) {
        if (other == lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.getDefaultInstance()) return this;
        if (other.hasChannel()) {
          mergeChannel(other.getChannel());
        }
        if (!other.getClosingTxid().isEmpty()) {
          closingTxid_ = other.closingTxid_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel channel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder> channelBuilder_;
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public boolean hasChannel() {
        return channelBuilder_ != null || channel_ != null;
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel() {
        if (channelBuilder_ == null) {
          return channel_ == null ? lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
        } else {
          return channelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public Builder setChannel(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel value) {
        if (channelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          channel_ = value;
          onChanged();
        } else {
          channelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public Builder setChannel(
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder builderForValue) {
        if (channelBuilder_ == null) {
          channel_ = builderForValue.build();
          onChanged();
        } else {
          channelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public Builder mergeChannel(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel value) {
        if (channelBuilder_ == null) {
          if (channel_ != null) {
            channel_ =
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.newBuilder(channel_).mergeFrom(value).buildPartial();
          } else {
            channel_ = value;
          }
          onChanged();
        } else {
          channelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public Builder clearChannel() {
        if (channelBuilder_ == null) {
          channel_ = null;
          onChanged();
        } else {
          channel_ = null;
          channelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder getChannelBuilder() {
        
        onChanged();
        return getChannelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder() {
        if (channelBuilder_ != null) {
          return channelBuilder_.getMessageOrBuilder();
        } else {
          return channel_ == null ?
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
        }
      }
      /**
       * <pre>
       *&#47; The pending channel to be closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder> 
          getChannelFieldBuilder() {
        if (channelBuilder_ == null) {
          channelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder>(
                  getChannel(),
                  getParentForChildren(),
                  isClean());
          channel_ = null;
        }
        return channelBuilder_;
      }

      private java.lang.Object closingTxid_ = "";
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public java.lang.String getClosingTxid() {
        java.lang.Object ref = closingTxid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          closingTxid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public com.google.protobuf.ByteString
          getClosingTxidBytes() {
        java.lang.Object ref = closingTxid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          closingTxid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public Builder setClosingTxid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        closingTxid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public Builder clearClosingTxid() {
        
        closingTxid_ = getDefaultInstance().getClosingTxid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public Builder setClosingTxidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        closingTxid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.PendingChannelsResponse.ClosedChannel)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.ClosedChannel)
    private static final lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel();
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClosedChannel>
        PARSER = new com.google.protobuf.AbstractParser<ClosedChannel>() {
      public ClosedChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosedChannel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClosedChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClosedChannel> getParserForType() {
      return PARSER;
    }

    public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ForceClosedChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.PendingChannelsResponse.ForceClosedChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; The pending channel to be force closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    boolean hasChannel();
    /**
     * <pre>
     *&#47; The pending channel to be force closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel();
    /**
     * <pre>
     *&#47; The pending channel to be force closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder();

    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    java.lang.String getClosingTxid();
    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    com.google.protobuf.ByteString
        getClosingTxidBytes();

    /**
     * <pre>
     *&#47; The balance in satoshis encumbered in this pending channel
     * </pre>
     *
     * <code>int64 limbo_balance = 3[json_name = "limbo_balance"];</code>
     */
    long getLimboBalance();

    /**
     * <pre>
     *&#47; The height at which funds can be sweeped into the wallet
     * </pre>
     *
     * <code>uint32 maturity_height = 4[json_name = "maturity_height"];</code>
     */
    int getMaturityHeight();

    /**
     * <pre>
     *Remaining # of blocks until the commitment output can be swept.
     *Negative values indicate how many blocks have passed since becoming
     *mature.
     * </pre>
     *
     * <code>int32 blocks_til_maturity = 5[json_name = "blocks_til_maturity"];</code>
     */
    int getBlocksTilMaturity();

    /**
     * <pre>
     *&#47; The total value of funds successfully recovered from this channel
     * </pre>
     *
     * <code>int64 recovered_balance = 6[json_name = "recovered_balance"];</code>
     */
    long getRecoveredBalance();

    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    java.util.List<lightpay.lnd.grpc.PendingHTLC> 
        getPendingHtlcsList();
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    lightpay.lnd.grpc.PendingHTLC getPendingHtlcs(int index);
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    int getPendingHtlcsCount();
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    java.util.List<? extends lightpay.lnd.grpc.PendingHTLCOrBuilder> 
        getPendingHtlcsOrBuilderList();
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    lightpay.lnd.grpc.PendingHTLCOrBuilder getPendingHtlcsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code lnrpc.PendingChannelsResponse.ForceClosedChannel}
   */
  public  static final class ForceClosedChannel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.PendingChannelsResponse.ForceClosedChannel)
      ForceClosedChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ForceClosedChannel.newBuilder() to construct.
    private ForceClosedChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ForceClosedChannel() {
      closingTxid_ = "";
      limboBalance_ = 0L;
      maturityHeight_ = 0;
      blocksTilMaturity_ = 0;
      recoveredBalance_ = 0L;
      pendingHtlcs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ForceClosedChannel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder subBuilder = null;
              if (channel_ != null) {
                subBuilder = channel_.toBuilder();
              }
              channel_ = input.readMessage(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(channel_);
                channel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              closingTxid_ = s;
              break;
            }
            case 24: {

              limboBalance_ = input.readInt64();
              break;
            }
            case 32: {

              maturityHeight_ = input.readUInt32();
              break;
            }
            case 40: {

              blocksTilMaturity_ = input.readInt32();
              break;
            }
            case 48: {

              recoveredBalance_ = input.readInt64();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                pendingHtlcs_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingHTLC>();
                mutable_bitField0_ |= 0x00000040;
              }
              pendingHtlcs_.add(
                  input.readMessage(lightpay.lnd.grpc.PendingHTLC.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          pendingHtlcs_ = java.util.Collections.unmodifiableList(pendingHtlcs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ForceClosedChannel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ForceClosedChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel channel_;
    /**
     * <pre>
     *&#47; The pending channel to be force closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    public boolean hasChannel() {
      return channel_ != null;
    }
    /**
     * <pre>
     *&#47; The pending channel to be force closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel() {
      return channel_ == null ? lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
    }
    /**
     * <pre>
     *&#47; The pending channel to be force closed
     * </pre>
     *
     * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder() {
      return getChannel();
    }

    public static final int CLOSING_TXID_FIELD_NUMBER = 2;
    private volatile java.lang.Object closingTxid_;
    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    public java.lang.String getClosingTxid() {
      java.lang.Object ref = closingTxid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        closingTxid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *&#47; The transaction id of the closing transaction
     * </pre>
     *
     * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
     */
    public com.google.protobuf.ByteString
        getClosingTxidBytes() {
      java.lang.Object ref = closingTxid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        closingTxid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIMBO_BALANCE_FIELD_NUMBER = 3;
    private long limboBalance_;
    /**
     * <pre>
     *&#47; The balance in satoshis encumbered in this pending channel
     * </pre>
     *
     * <code>int64 limbo_balance = 3[json_name = "limbo_balance"];</code>
     */
    public long getLimboBalance() {
      return limboBalance_;
    }

    public static final int MATURITY_HEIGHT_FIELD_NUMBER = 4;
    private int maturityHeight_;
    /**
     * <pre>
     *&#47; The height at which funds can be sweeped into the wallet
     * </pre>
     *
     * <code>uint32 maturity_height = 4[json_name = "maturity_height"];</code>
     */
    public int getMaturityHeight() {
      return maturityHeight_;
    }

    public static final int BLOCKS_TIL_MATURITY_FIELD_NUMBER = 5;
    private int blocksTilMaturity_;
    /**
     * <pre>
     *Remaining # of blocks until the commitment output can be swept.
     *Negative values indicate how many blocks have passed since becoming
     *mature.
     * </pre>
     *
     * <code>int32 blocks_til_maturity = 5[json_name = "blocks_til_maturity"];</code>
     */
    public int getBlocksTilMaturity() {
      return blocksTilMaturity_;
    }

    public static final int RECOVERED_BALANCE_FIELD_NUMBER = 6;
    private long recoveredBalance_;
    /**
     * <pre>
     *&#47; The total value of funds successfully recovered from this channel
     * </pre>
     *
     * <code>int64 recovered_balance = 6[json_name = "recovered_balance"];</code>
     */
    public long getRecoveredBalance() {
      return recoveredBalance_;
    }

    public static final int PENDING_HTLCS_FIELD_NUMBER = 8;
    private java.util.List<lightpay.lnd.grpc.PendingHTLC> pendingHtlcs_;
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.PendingHTLC> getPendingHtlcsList() {
      return pendingHtlcs_;
    }
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.PendingHTLCOrBuilder> 
        getPendingHtlcsOrBuilderList() {
      return pendingHtlcs_;
    }
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    public int getPendingHtlcsCount() {
      return pendingHtlcs_.size();
    }
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    public lightpay.lnd.grpc.PendingHTLC getPendingHtlcs(int index) {
      return pendingHtlcs_.get(index);
    }
    /**
     * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
     */
    public lightpay.lnd.grpc.PendingHTLCOrBuilder getPendingHtlcsOrBuilder(
        int index) {
      return pendingHtlcs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (channel_ != null) {
        output.writeMessage(1, getChannel());
      }
      if (!getClosingTxidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, closingTxid_);
      }
      if (limboBalance_ != 0L) {
        output.writeInt64(3, limboBalance_);
      }
      if (maturityHeight_ != 0) {
        output.writeUInt32(4, maturityHeight_);
      }
      if (blocksTilMaturity_ != 0) {
        output.writeInt32(5, blocksTilMaturity_);
      }
      if (recoveredBalance_ != 0L) {
        output.writeInt64(6, recoveredBalance_);
      }
      for (int i = 0; i < pendingHtlcs_.size(); i++) {
        output.writeMessage(8, pendingHtlcs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (channel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChannel());
      }
      if (!getClosingTxidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, closingTxid_);
      }
      if (limboBalance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, limboBalance_);
      }
      if (maturityHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maturityHeight_);
      }
      if (blocksTilMaturity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, blocksTilMaturity_);
      }
      if (recoveredBalance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, recoveredBalance_);
      }
      for (int i = 0; i < pendingHtlcs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, pendingHtlcs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel)) {
        return super.equals(obj);
      }
      lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel other = (lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel) obj;

      boolean result = true;
      result = result && (hasChannel() == other.hasChannel());
      if (hasChannel()) {
        result = result && getChannel()
            .equals(other.getChannel());
      }
      result = result && getClosingTxid()
          .equals(other.getClosingTxid());
      result = result && (getLimboBalance()
          == other.getLimboBalance());
      result = result && (getMaturityHeight()
          == other.getMaturityHeight());
      result = result && (getBlocksTilMaturity()
          == other.getBlocksTilMaturity());
      result = result && (getRecoveredBalance()
          == other.getRecoveredBalance());
      result = result && getPendingHtlcsList()
          .equals(other.getPendingHtlcsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannel()) {
        hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
        hash = (53 * hash) + getChannel().hashCode();
      }
      hash = (37 * hash) + CLOSING_TXID_FIELD_NUMBER;
      hash = (53 * hash) + getClosingTxid().hashCode();
      hash = (37 * hash) + LIMBO_BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLimboBalance());
      hash = (37 * hash) + MATURITY_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getMaturityHeight();
      hash = (37 * hash) + BLOCKS_TIL_MATURITY_FIELD_NUMBER;
      hash = (53 * hash) + getBlocksTilMaturity();
      hash = (37 * hash) + RECOVERED_BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecoveredBalance());
      if (getPendingHtlcsCount() > 0) {
        hash = (37 * hash) + PENDING_HTLCS_FIELD_NUMBER;
        hash = (53 * hash) + getPendingHtlcsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.PendingChannelsResponse.ForceClosedChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.PendingChannelsResponse.ForceClosedChannel)
        lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ForceClosedChannel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ForceClosedChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.class, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder.class);
      }

      // Construct using lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPendingHtlcsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (channelBuilder_ == null) {
          channel_ = null;
        } else {
          channel_ = null;
          channelBuilder_ = null;
        }
        closingTxid_ = "";

        limboBalance_ = 0L;

        maturityHeight_ = 0;

        blocksTilMaturity_ = 0;

        recoveredBalance_ = 0L;

        if (pendingHtlcsBuilder_ == null) {
          pendingHtlcs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          pendingHtlcsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_ForceClosedChannel_descriptor;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel getDefaultInstanceForType() {
        return lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.getDefaultInstance();
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel build() {
        lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel buildPartial() {
        lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel result = new lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (channelBuilder_ == null) {
          result.channel_ = channel_;
        } else {
          result.channel_ = channelBuilder_.build();
        }
        result.closingTxid_ = closingTxid_;
        result.limboBalance_ = limboBalance_;
        result.maturityHeight_ = maturityHeight_;
        result.blocksTilMaturity_ = blocksTilMaturity_;
        result.recoveredBalance_ = recoveredBalance_;
        if (pendingHtlcsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            pendingHtlcs_ = java.util.Collections.unmodifiableList(pendingHtlcs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.pendingHtlcs_ = pendingHtlcs_;
        } else {
          result.pendingHtlcs_ = pendingHtlcsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel) {
          return mergeFrom((lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel other) {
        if (other == lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.getDefaultInstance()) return this;
        if (other.hasChannel()) {
          mergeChannel(other.getChannel());
        }
        if (!other.getClosingTxid().isEmpty()) {
          closingTxid_ = other.closingTxid_;
          onChanged();
        }
        if (other.getLimboBalance() != 0L) {
          setLimboBalance(other.getLimboBalance());
        }
        if (other.getMaturityHeight() != 0) {
          setMaturityHeight(other.getMaturityHeight());
        }
        if (other.getBlocksTilMaturity() != 0) {
          setBlocksTilMaturity(other.getBlocksTilMaturity());
        }
        if (other.getRecoveredBalance() != 0L) {
          setRecoveredBalance(other.getRecoveredBalance());
        }
        if (pendingHtlcsBuilder_ == null) {
          if (!other.pendingHtlcs_.isEmpty()) {
            if (pendingHtlcs_.isEmpty()) {
              pendingHtlcs_ = other.pendingHtlcs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePendingHtlcsIsMutable();
              pendingHtlcs_.addAll(other.pendingHtlcs_);
            }
            onChanged();
          }
        } else {
          if (!other.pendingHtlcs_.isEmpty()) {
            if (pendingHtlcsBuilder_.isEmpty()) {
              pendingHtlcsBuilder_.dispose();
              pendingHtlcsBuilder_ = null;
              pendingHtlcs_ = other.pendingHtlcs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              pendingHtlcsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPendingHtlcsFieldBuilder() : null;
            } else {
              pendingHtlcsBuilder_.addAllMessages(other.pendingHtlcs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel channel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder> channelBuilder_;
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public boolean hasChannel() {
        return channelBuilder_ != null || channel_ != null;
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel getChannel() {
        if (channelBuilder_ == null) {
          return channel_ == null ? lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
        } else {
          return channelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder setChannel(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel value) {
        if (channelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          channel_ = value;
          onChanged();
        } else {
          channelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder setChannel(
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder builderForValue) {
        if (channelBuilder_ == null) {
          channel_ = builderForValue.build();
          onChanged();
        } else {
          channelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder mergeChannel(lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel value) {
        if (channelBuilder_ == null) {
          if (channel_ != null) {
            channel_ =
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.newBuilder(channel_).mergeFrom(value).buildPartial();
          } else {
            channel_ = value;
          }
          onChanged();
        } else {
          channelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public Builder clearChannel() {
        if (channelBuilder_ == null) {
          channel_ = null;
          onChanged();
        } else {
          channel_ = null;
          channelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder getChannelBuilder() {
        
        onChanged();
        return getChannelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      public lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder getChannelOrBuilder() {
        if (channelBuilder_ != null) {
          return channelBuilder_.getMessageOrBuilder();
        } else {
          return channel_ == null ?
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.getDefaultInstance() : channel_;
        }
      }
      /**
       * <pre>
       *&#47; The pending channel to be force closed
       * </pre>
       *
       * <code>.lnrpc.PendingChannelsResponse.PendingChannel channel = 1[json_name = "channel"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder> 
          getChannelFieldBuilder() {
        if (channelBuilder_ == null) {
          channelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingChannelOrBuilder>(
                  getChannel(),
                  getParentForChildren(),
                  isClean());
          channel_ = null;
        }
        return channelBuilder_;
      }

      private java.lang.Object closingTxid_ = "";
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public java.lang.String getClosingTxid() {
        java.lang.Object ref = closingTxid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          closingTxid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public com.google.protobuf.ByteString
          getClosingTxidBytes() {
        java.lang.Object ref = closingTxid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          closingTxid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public Builder setClosingTxid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        closingTxid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public Builder clearClosingTxid() {
        
        closingTxid_ = getDefaultInstance().getClosingTxid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The transaction id of the closing transaction
       * </pre>
       *
       * <code>string closing_txid = 2[json_name = "closing_txid"];</code>
       */
      public Builder setClosingTxidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        closingTxid_ = value;
        onChanged();
        return this;
      }

      private long limboBalance_ ;
      /**
       * <pre>
       *&#47; The balance in satoshis encumbered in this pending channel
       * </pre>
       *
       * <code>int64 limbo_balance = 3[json_name = "limbo_balance"];</code>
       */
      public long getLimboBalance() {
        return limboBalance_;
      }
      /**
       * <pre>
       *&#47; The balance in satoshis encumbered in this pending channel
       * </pre>
       *
       * <code>int64 limbo_balance = 3[json_name = "limbo_balance"];</code>
       */
      public Builder setLimboBalance(long value) {
        
        limboBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The balance in satoshis encumbered in this pending channel
       * </pre>
       *
       * <code>int64 limbo_balance = 3[json_name = "limbo_balance"];</code>
       */
      public Builder clearLimboBalance() {
        
        limboBalance_ = 0L;
        onChanged();
        return this;
      }

      private int maturityHeight_ ;
      /**
       * <pre>
       *&#47; The height at which funds can be sweeped into the wallet
       * </pre>
       *
       * <code>uint32 maturity_height = 4[json_name = "maturity_height"];</code>
       */
      public int getMaturityHeight() {
        return maturityHeight_;
      }
      /**
       * <pre>
       *&#47; The height at which funds can be sweeped into the wallet
       * </pre>
       *
       * <code>uint32 maturity_height = 4[json_name = "maturity_height"];</code>
       */
      public Builder setMaturityHeight(int value) {
        
        maturityHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The height at which funds can be sweeped into the wallet
       * </pre>
       *
       * <code>uint32 maturity_height = 4[json_name = "maturity_height"];</code>
       */
      public Builder clearMaturityHeight() {
        
        maturityHeight_ = 0;
        onChanged();
        return this;
      }

      private int blocksTilMaturity_ ;
      /**
       * <pre>
       *Remaining # of blocks until the commitment output can be swept.
       *Negative values indicate how many blocks have passed since becoming
       *mature.
       * </pre>
       *
       * <code>int32 blocks_til_maturity = 5[json_name = "blocks_til_maturity"];</code>
       */
      public int getBlocksTilMaturity() {
        return blocksTilMaturity_;
      }
      /**
       * <pre>
       *Remaining # of blocks until the commitment output can be swept.
       *Negative values indicate how many blocks have passed since becoming
       *mature.
       * </pre>
       *
       * <code>int32 blocks_til_maturity = 5[json_name = "blocks_til_maturity"];</code>
       */
      public Builder setBlocksTilMaturity(int value) {
        
        blocksTilMaturity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Remaining # of blocks until the commitment output can be swept.
       *Negative values indicate how many blocks have passed since becoming
       *mature.
       * </pre>
       *
       * <code>int32 blocks_til_maturity = 5[json_name = "blocks_til_maturity"];</code>
       */
      public Builder clearBlocksTilMaturity() {
        
        blocksTilMaturity_ = 0;
        onChanged();
        return this;
      }

      private long recoveredBalance_ ;
      /**
       * <pre>
       *&#47; The total value of funds successfully recovered from this channel
       * </pre>
       *
       * <code>int64 recovered_balance = 6[json_name = "recovered_balance"];</code>
       */
      public long getRecoveredBalance() {
        return recoveredBalance_;
      }
      /**
       * <pre>
       *&#47; The total value of funds successfully recovered from this channel
       * </pre>
       *
       * <code>int64 recovered_balance = 6[json_name = "recovered_balance"];</code>
       */
      public Builder setRecoveredBalance(long value) {
        
        recoveredBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The total value of funds successfully recovered from this channel
       * </pre>
       *
       * <code>int64 recovered_balance = 6[json_name = "recovered_balance"];</code>
       */
      public Builder clearRecoveredBalance() {
        
        recoveredBalance_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<lightpay.lnd.grpc.PendingHTLC> pendingHtlcs_ =
        java.util.Collections.emptyList();
      private void ensurePendingHtlcsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          pendingHtlcs_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingHTLC>(pendingHtlcs_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          lightpay.lnd.grpc.PendingHTLC, lightpay.lnd.grpc.PendingHTLC.Builder, lightpay.lnd.grpc.PendingHTLCOrBuilder> pendingHtlcsBuilder_;

      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public java.util.List<lightpay.lnd.grpc.PendingHTLC> getPendingHtlcsList() {
        if (pendingHtlcsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pendingHtlcs_);
        } else {
          return pendingHtlcsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public int getPendingHtlcsCount() {
        if (pendingHtlcsBuilder_ == null) {
          return pendingHtlcs_.size();
        } else {
          return pendingHtlcsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public lightpay.lnd.grpc.PendingHTLC getPendingHtlcs(int index) {
        if (pendingHtlcsBuilder_ == null) {
          return pendingHtlcs_.get(index);
        } else {
          return pendingHtlcsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder setPendingHtlcs(
          int index, lightpay.lnd.grpc.PendingHTLC value) {
        if (pendingHtlcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePendingHtlcsIsMutable();
          pendingHtlcs_.set(index, value);
          onChanged();
        } else {
          pendingHtlcsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder setPendingHtlcs(
          int index, lightpay.lnd.grpc.PendingHTLC.Builder builderForValue) {
        if (pendingHtlcsBuilder_ == null) {
          ensurePendingHtlcsIsMutable();
          pendingHtlcs_.set(index, builderForValue.build());
          onChanged();
        } else {
          pendingHtlcsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder addPendingHtlcs(lightpay.lnd.grpc.PendingHTLC value) {
        if (pendingHtlcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePendingHtlcsIsMutable();
          pendingHtlcs_.add(value);
          onChanged();
        } else {
          pendingHtlcsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder addPendingHtlcs(
          int index, lightpay.lnd.grpc.PendingHTLC value) {
        if (pendingHtlcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePendingHtlcsIsMutable();
          pendingHtlcs_.add(index, value);
          onChanged();
        } else {
          pendingHtlcsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder addPendingHtlcs(
          lightpay.lnd.grpc.PendingHTLC.Builder builderForValue) {
        if (pendingHtlcsBuilder_ == null) {
          ensurePendingHtlcsIsMutable();
          pendingHtlcs_.add(builderForValue.build());
          onChanged();
        } else {
          pendingHtlcsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder addPendingHtlcs(
          int index, lightpay.lnd.grpc.PendingHTLC.Builder builderForValue) {
        if (pendingHtlcsBuilder_ == null) {
          ensurePendingHtlcsIsMutable();
          pendingHtlcs_.add(index, builderForValue.build());
          onChanged();
        } else {
          pendingHtlcsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder addAllPendingHtlcs(
          java.lang.Iterable<? extends lightpay.lnd.grpc.PendingHTLC> values) {
        if (pendingHtlcsBuilder_ == null) {
          ensurePendingHtlcsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pendingHtlcs_);
          onChanged();
        } else {
          pendingHtlcsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder clearPendingHtlcs() {
        if (pendingHtlcsBuilder_ == null) {
          pendingHtlcs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          pendingHtlcsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public Builder removePendingHtlcs(int index) {
        if (pendingHtlcsBuilder_ == null) {
          ensurePendingHtlcsIsMutable();
          pendingHtlcs_.remove(index);
          onChanged();
        } else {
          pendingHtlcsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public lightpay.lnd.grpc.PendingHTLC.Builder getPendingHtlcsBuilder(
          int index) {
        return getPendingHtlcsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public lightpay.lnd.grpc.PendingHTLCOrBuilder getPendingHtlcsOrBuilder(
          int index) {
        if (pendingHtlcsBuilder_ == null) {
          return pendingHtlcs_.get(index);  } else {
          return pendingHtlcsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public java.util.List<? extends lightpay.lnd.grpc.PendingHTLCOrBuilder> 
           getPendingHtlcsOrBuilderList() {
        if (pendingHtlcsBuilder_ != null) {
          return pendingHtlcsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pendingHtlcs_);
        }
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public lightpay.lnd.grpc.PendingHTLC.Builder addPendingHtlcsBuilder() {
        return getPendingHtlcsFieldBuilder().addBuilder(
            lightpay.lnd.grpc.PendingHTLC.getDefaultInstance());
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public lightpay.lnd.grpc.PendingHTLC.Builder addPendingHtlcsBuilder(
          int index) {
        return getPendingHtlcsFieldBuilder().addBuilder(
            index, lightpay.lnd.grpc.PendingHTLC.getDefaultInstance());
      }
      /**
       * <code>repeated .lnrpc.PendingHTLC pending_htlcs = 8[json_name = "pending_htlcs"];</code>
       */
      public java.util.List<lightpay.lnd.grpc.PendingHTLC.Builder> 
           getPendingHtlcsBuilderList() {
        return getPendingHtlcsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          lightpay.lnd.grpc.PendingHTLC, lightpay.lnd.grpc.PendingHTLC.Builder, lightpay.lnd.grpc.PendingHTLCOrBuilder> 
          getPendingHtlcsFieldBuilder() {
        if (pendingHtlcsBuilder_ == null) {
          pendingHtlcsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              lightpay.lnd.grpc.PendingHTLC, lightpay.lnd.grpc.PendingHTLC.Builder, lightpay.lnd.grpc.PendingHTLCOrBuilder>(
                  pendingHtlcs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          pendingHtlcs_ = null;
        }
        return pendingHtlcsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.PendingChannelsResponse.ForceClosedChannel)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.ForceClosedChannel)
    private static final lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel();
    }

    public static lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ForceClosedChannel>
        PARSER = new com.google.protobuf.AbstractParser<ForceClosedChannel>() {
      public ForceClosedChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ForceClosedChannel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ForceClosedChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ForceClosedChannel> getParserForType() {
      return PARSER;
    }

    public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int TOTAL_LIMBO_BALANCE_FIELD_NUMBER = 1;
  private long totalLimboBalance_;
  /**
   * <pre>
   *&#47; The balance in satoshis encumbered in pending channels
   * </pre>
   *
   * <code>int64 total_limbo_balance = 1[json_name = "total_limbo_balance"];</code>
   */
  public long getTotalLimboBalance() {
    return totalLimboBalance_;
  }

  public static final int PENDING_OPEN_CHANNELS_FIELD_NUMBER = 2;
  private java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel> pendingOpenChannels_;
  /**
   * <pre>
   *&#47; Channels pending opening
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
   */
  public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel> getPendingOpenChannelsList() {
    return pendingOpenChannels_;
  }
  /**
   * <pre>
   *&#47; Channels pending opening
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder> 
      getPendingOpenChannelsOrBuilderList() {
    return pendingOpenChannels_;
  }
  /**
   * <pre>
   *&#47; Channels pending opening
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
   */
  public int getPendingOpenChannelsCount() {
    return pendingOpenChannels_.size();
  }
  /**
   * <pre>
   *&#47; Channels pending opening
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
   */
  public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel getPendingOpenChannels(int index) {
    return pendingOpenChannels_.get(index);
  }
  /**
   * <pre>
   *&#47; Channels pending opening
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
   */
  public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder getPendingOpenChannelsOrBuilder(
      int index) {
    return pendingOpenChannels_.get(index);
  }

  public static final int PENDING_CLOSING_CHANNELS_FIELD_NUMBER = 3;
  private java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel> pendingClosingChannels_;
  /**
   * <pre>
   *&#47; Channels pending closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
   */
  public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel> getPendingClosingChannelsList() {
    return pendingClosingChannels_;
  }
  /**
   * <pre>
   *&#47; Channels pending closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder> 
      getPendingClosingChannelsOrBuilderList() {
    return pendingClosingChannels_;
  }
  /**
   * <pre>
   *&#47; Channels pending closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
   */
  public int getPendingClosingChannelsCount() {
    return pendingClosingChannels_.size();
  }
  /**
   * <pre>
   *&#47; Channels pending closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
   */
  public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel getPendingClosingChannels(int index) {
    return pendingClosingChannels_.get(index);
  }
  /**
   * <pre>
   *&#47; Channels pending closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
   */
  public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder getPendingClosingChannelsOrBuilder(
      int index) {
    return pendingClosingChannels_.get(index);
  }

  public static final int PENDING_FORCE_CLOSING_CHANNELS_FIELD_NUMBER = 4;
  private java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel> pendingForceClosingChannels_;
  /**
   * <pre>
   *&#47; Channels pending force closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
   */
  public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel> getPendingForceClosingChannelsList() {
    return pendingForceClosingChannels_;
  }
  /**
   * <pre>
   *&#47; Channels pending force closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder> 
      getPendingForceClosingChannelsOrBuilderList() {
    return pendingForceClosingChannels_;
  }
  /**
   * <pre>
   *&#47; Channels pending force closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
   */
  public int getPendingForceClosingChannelsCount() {
    return pendingForceClosingChannels_.size();
  }
  /**
   * <pre>
   *&#47; Channels pending force closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
   */
  public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel getPendingForceClosingChannels(int index) {
    return pendingForceClosingChannels_.get(index);
  }
  /**
   * <pre>
   *&#47; Channels pending force closing
   * </pre>
   *
   * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
   */
  public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder getPendingForceClosingChannelsOrBuilder(
      int index) {
    return pendingForceClosingChannels_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (totalLimboBalance_ != 0L) {
      output.writeInt64(1, totalLimboBalance_);
    }
    for (int i = 0; i < pendingOpenChannels_.size(); i++) {
      output.writeMessage(2, pendingOpenChannels_.get(i));
    }
    for (int i = 0; i < pendingClosingChannels_.size(); i++) {
      output.writeMessage(3, pendingClosingChannels_.get(i));
    }
    for (int i = 0; i < pendingForceClosingChannels_.size(); i++) {
      output.writeMessage(4, pendingForceClosingChannels_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (totalLimboBalance_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, totalLimboBalance_);
    }
    for (int i = 0; i < pendingOpenChannels_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, pendingOpenChannels_.get(i));
    }
    for (int i = 0; i < pendingClosingChannels_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, pendingClosingChannels_.get(i));
    }
    for (int i = 0; i < pendingForceClosingChannels_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, pendingForceClosingChannels_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.PendingChannelsResponse)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.PendingChannelsResponse other = (lightpay.lnd.grpc.PendingChannelsResponse) obj;

    boolean result = true;
    result = result && (getTotalLimboBalance()
        == other.getTotalLimboBalance());
    result = result && getPendingOpenChannelsList()
        .equals(other.getPendingOpenChannelsList());
    result = result && getPendingClosingChannelsList()
        .equals(other.getPendingClosingChannelsList());
    result = result && getPendingForceClosingChannelsList()
        .equals(other.getPendingForceClosingChannelsList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOTAL_LIMBO_BALANCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalLimboBalance());
    if (getPendingOpenChannelsCount() > 0) {
      hash = (37 * hash) + PENDING_OPEN_CHANNELS_FIELD_NUMBER;
      hash = (53 * hash) + getPendingOpenChannelsList().hashCode();
    }
    if (getPendingClosingChannelsCount() > 0) {
      hash = (37 * hash) + PENDING_CLOSING_CHANNELS_FIELD_NUMBER;
      hash = (53 * hash) + getPendingClosingChannelsList().hashCode();
    }
    if (getPendingForceClosingChannelsCount() > 0) {
      hash = (37 * hash) + PENDING_FORCE_CLOSING_CHANNELS_FIELD_NUMBER;
      hash = (53 * hash) + getPendingForceClosingChannelsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.PendingChannelsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.PendingChannelsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.PendingChannelsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.PendingChannelsResponse)
      lightpay.lnd.grpc.PendingChannelsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.PendingChannelsResponse.class, lightpay.lnd.grpc.PendingChannelsResponse.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.PendingChannelsResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPendingOpenChannelsFieldBuilder();
        getPendingClosingChannelsFieldBuilder();
        getPendingForceClosingChannelsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      totalLimboBalance_ = 0L;

      if (pendingOpenChannelsBuilder_ == null) {
        pendingOpenChannels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        pendingOpenChannelsBuilder_.clear();
      }
      if (pendingClosingChannelsBuilder_ == null) {
        pendingClosingChannels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        pendingClosingChannelsBuilder_.clear();
      }
      if (pendingForceClosingChannelsBuilder_ == null) {
        pendingForceClosingChannels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        pendingForceClosingChannelsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_PendingChannelsResponse_descriptor;
    }

    public lightpay.lnd.grpc.PendingChannelsResponse getDefaultInstanceForType() {
      return lightpay.lnd.grpc.PendingChannelsResponse.getDefaultInstance();
    }

    public lightpay.lnd.grpc.PendingChannelsResponse build() {
      lightpay.lnd.grpc.PendingChannelsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.PendingChannelsResponse buildPartial() {
      lightpay.lnd.grpc.PendingChannelsResponse result = new lightpay.lnd.grpc.PendingChannelsResponse(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.totalLimboBalance_ = totalLimboBalance_;
      if (pendingOpenChannelsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          pendingOpenChannels_ = java.util.Collections.unmodifiableList(pendingOpenChannels_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.pendingOpenChannels_ = pendingOpenChannels_;
      } else {
        result.pendingOpenChannels_ = pendingOpenChannelsBuilder_.build();
      }
      if (pendingClosingChannelsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          pendingClosingChannels_ = java.util.Collections.unmodifiableList(pendingClosingChannels_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.pendingClosingChannels_ = pendingClosingChannels_;
      } else {
        result.pendingClosingChannels_ = pendingClosingChannelsBuilder_.build();
      }
      if (pendingForceClosingChannelsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          pendingForceClosingChannels_ = java.util.Collections.unmodifiableList(pendingForceClosingChannels_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.pendingForceClosingChannels_ = pendingForceClosingChannels_;
      } else {
        result.pendingForceClosingChannels_ = pendingForceClosingChannelsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.PendingChannelsResponse) {
        return mergeFrom((lightpay.lnd.grpc.PendingChannelsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.PendingChannelsResponse other) {
      if (other == lightpay.lnd.grpc.PendingChannelsResponse.getDefaultInstance()) return this;
      if (other.getTotalLimboBalance() != 0L) {
        setTotalLimboBalance(other.getTotalLimboBalance());
      }
      if (pendingOpenChannelsBuilder_ == null) {
        if (!other.pendingOpenChannels_.isEmpty()) {
          if (pendingOpenChannels_.isEmpty()) {
            pendingOpenChannels_ = other.pendingOpenChannels_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePendingOpenChannelsIsMutable();
            pendingOpenChannels_.addAll(other.pendingOpenChannels_);
          }
          onChanged();
        }
      } else {
        if (!other.pendingOpenChannels_.isEmpty()) {
          if (pendingOpenChannelsBuilder_.isEmpty()) {
            pendingOpenChannelsBuilder_.dispose();
            pendingOpenChannelsBuilder_ = null;
            pendingOpenChannels_ = other.pendingOpenChannels_;
            bitField0_ = (bitField0_ & ~0x00000002);
            pendingOpenChannelsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPendingOpenChannelsFieldBuilder() : null;
          } else {
            pendingOpenChannelsBuilder_.addAllMessages(other.pendingOpenChannels_);
          }
        }
      }
      if (pendingClosingChannelsBuilder_ == null) {
        if (!other.pendingClosingChannels_.isEmpty()) {
          if (pendingClosingChannels_.isEmpty()) {
            pendingClosingChannels_ = other.pendingClosingChannels_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePendingClosingChannelsIsMutable();
            pendingClosingChannels_.addAll(other.pendingClosingChannels_);
          }
          onChanged();
        }
      } else {
        if (!other.pendingClosingChannels_.isEmpty()) {
          if (pendingClosingChannelsBuilder_.isEmpty()) {
            pendingClosingChannelsBuilder_.dispose();
            pendingClosingChannelsBuilder_ = null;
            pendingClosingChannels_ = other.pendingClosingChannels_;
            bitField0_ = (bitField0_ & ~0x00000004);
            pendingClosingChannelsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPendingClosingChannelsFieldBuilder() : null;
          } else {
            pendingClosingChannelsBuilder_.addAllMessages(other.pendingClosingChannels_);
          }
        }
      }
      if (pendingForceClosingChannelsBuilder_ == null) {
        if (!other.pendingForceClosingChannels_.isEmpty()) {
          if (pendingForceClosingChannels_.isEmpty()) {
            pendingForceClosingChannels_ = other.pendingForceClosingChannels_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePendingForceClosingChannelsIsMutable();
            pendingForceClosingChannels_.addAll(other.pendingForceClosingChannels_);
          }
          onChanged();
        }
      } else {
        if (!other.pendingForceClosingChannels_.isEmpty()) {
          if (pendingForceClosingChannelsBuilder_.isEmpty()) {
            pendingForceClosingChannelsBuilder_.dispose();
            pendingForceClosingChannelsBuilder_ = null;
            pendingForceClosingChannels_ = other.pendingForceClosingChannels_;
            bitField0_ = (bitField0_ & ~0x00000008);
            pendingForceClosingChannelsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPendingForceClosingChannelsFieldBuilder() : null;
          } else {
            pendingForceClosingChannelsBuilder_.addAllMessages(other.pendingForceClosingChannels_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.PendingChannelsResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.PendingChannelsResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long totalLimboBalance_ ;
    /**
     * <pre>
     *&#47; The balance in satoshis encumbered in pending channels
     * </pre>
     *
     * <code>int64 total_limbo_balance = 1[json_name = "total_limbo_balance"];</code>
     */
    public long getTotalLimboBalance() {
      return totalLimboBalance_;
    }
    /**
     * <pre>
     *&#47; The balance in satoshis encumbered in pending channels
     * </pre>
     *
     * <code>int64 total_limbo_balance = 1[json_name = "total_limbo_balance"];</code>
     */
    public Builder setTotalLimboBalance(long value) {
      
      totalLimboBalance_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The balance in satoshis encumbered in pending channels
     * </pre>
     *
     * <code>int64 total_limbo_balance = 1[json_name = "total_limbo_balance"];</code>
     */
    public Builder clearTotalLimboBalance() {
      
      totalLimboBalance_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel> pendingOpenChannels_ =
      java.util.Collections.emptyList();
    private void ensurePendingOpenChannelsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        pendingOpenChannels_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel>(pendingOpenChannels_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder> pendingOpenChannelsBuilder_;

    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel> getPendingOpenChannelsList() {
      if (pendingOpenChannelsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(pendingOpenChannels_);
      } else {
        return pendingOpenChannelsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public int getPendingOpenChannelsCount() {
      if (pendingOpenChannelsBuilder_ == null) {
        return pendingOpenChannels_.size();
      } else {
        return pendingOpenChannelsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel getPendingOpenChannels(int index) {
      if (pendingOpenChannelsBuilder_ == null) {
        return pendingOpenChannels_.get(index);
      } else {
        return pendingOpenChannelsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder setPendingOpenChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel value) {
      if (pendingOpenChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingOpenChannelsIsMutable();
        pendingOpenChannels_.set(index, value);
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder setPendingOpenChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder builderForValue) {
      if (pendingOpenChannelsBuilder_ == null) {
        ensurePendingOpenChannelsIsMutable();
        pendingOpenChannels_.set(index, builderForValue.build());
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder addPendingOpenChannels(lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel value) {
      if (pendingOpenChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingOpenChannelsIsMutable();
        pendingOpenChannels_.add(value);
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder addPendingOpenChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel value) {
      if (pendingOpenChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingOpenChannelsIsMutable();
        pendingOpenChannels_.add(index, value);
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder addPendingOpenChannels(
        lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder builderForValue) {
      if (pendingOpenChannelsBuilder_ == null) {
        ensurePendingOpenChannelsIsMutable();
        pendingOpenChannels_.add(builderForValue.build());
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder addPendingOpenChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder builderForValue) {
      if (pendingOpenChannelsBuilder_ == null) {
        ensurePendingOpenChannelsIsMutable();
        pendingOpenChannels_.add(index, builderForValue.build());
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder addAllPendingOpenChannels(
        java.lang.Iterable<? extends lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel> values) {
      if (pendingOpenChannelsBuilder_ == null) {
        ensurePendingOpenChannelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pendingOpenChannels_);
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder clearPendingOpenChannels() {
      if (pendingOpenChannelsBuilder_ == null) {
        pendingOpenChannels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public Builder removePendingOpenChannels(int index) {
      if (pendingOpenChannelsBuilder_ == null) {
        ensurePendingOpenChannelsIsMutable();
        pendingOpenChannels_.remove(index);
        onChanged();
      } else {
        pendingOpenChannelsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder getPendingOpenChannelsBuilder(
        int index) {
      return getPendingOpenChannelsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder getPendingOpenChannelsOrBuilder(
        int index) {
      if (pendingOpenChannelsBuilder_ == null) {
        return pendingOpenChannels_.get(index);  } else {
        return pendingOpenChannelsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder> 
         getPendingOpenChannelsOrBuilderList() {
      if (pendingOpenChannelsBuilder_ != null) {
        return pendingOpenChannelsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(pendingOpenChannels_);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder addPendingOpenChannelsBuilder() {
      return getPendingOpenChannelsFieldBuilder().addBuilder(
          lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder addPendingOpenChannelsBuilder(
        int index) {
      return getPendingOpenChannelsFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; Channels pending opening
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder> 
         getPendingOpenChannelsBuilderList() {
      return getPendingOpenChannelsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder> 
        getPendingOpenChannelsFieldBuilder() {
      if (pendingOpenChannelsBuilder_ == null) {
        pendingOpenChannelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.PendingOpenChannelOrBuilder>(
                pendingOpenChannels_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        pendingOpenChannels_ = null;
      }
      return pendingOpenChannelsBuilder_;
    }

    private java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel> pendingClosingChannels_ =
      java.util.Collections.emptyList();
    private void ensurePendingClosingChannelsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        pendingClosingChannels_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel>(pendingClosingChannels_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder> pendingClosingChannelsBuilder_;

    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel> getPendingClosingChannelsList() {
      if (pendingClosingChannelsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(pendingClosingChannels_);
      } else {
        return pendingClosingChannelsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public int getPendingClosingChannelsCount() {
      if (pendingClosingChannelsBuilder_ == null) {
        return pendingClosingChannels_.size();
      } else {
        return pendingClosingChannelsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel getPendingClosingChannels(int index) {
      if (pendingClosingChannelsBuilder_ == null) {
        return pendingClosingChannels_.get(index);
      } else {
        return pendingClosingChannelsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder setPendingClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel value) {
      if (pendingClosingChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingClosingChannelsIsMutable();
        pendingClosingChannels_.set(index, value);
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder setPendingClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder builderForValue) {
      if (pendingClosingChannelsBuilder_ == null) {
        ensurePendingClosingChannelsIsMutable();
        pendingClosingChannels_.set(index, builderForValue.build());
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder addPendingClosingChannels(lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel value) {
      if (pendingClosingChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingClosingChannelsIsMutable();
        pendingClosingChannels_.add(value);
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder addPendingClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel value) {
      if (pendingClosingChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingClosingChannelsIsMutable();
        pendingClosingChannels_.add(index, value);
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder addPendingClosingChannels(
        lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder builderForValue) {
      if (pendingClosingChannelsBuilder_ == null) {
        ensurePendingClosingChannelsIsMutable();
        pendingClosingChannels_.add(builderForValue.build());
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder addPendingClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder builderForValue) {
      if (pendingClosingChannelsBuilder_ == null) {
        ensurePendingClosingChannelsIsMutable();
        pendingClosingChannels_.add(index, builderForValue.build());
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder addAllPendingClosingChannels(
        java.lang.Iterable<? extends lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel> values) {
      if (pendingClosingChannelsBuilder_ == null) {
        ensurePendingClosingChannelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pendingClosingChannels_);
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder clearPendingClosingChannels() {
      if (pendingClosingChannelsBuilder_ == null) {
        pendingClosingChannels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public Builder removePendingClosingChannels(int index) {
      if (pendingClosingChannelsBuilder_ == null) {
        ensurePendingClosingChannelsIsMutable();
        pendingClosingChannels_.remove(index);
        onChanged();
      } else {
        pendingClosingChannelsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder getPendingClosingChannelsBuilder(
        int index) {
      return getPendingClosingChannelsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder getPendingClosingChannelsOrBuilder(
        int index) {
      if (pendingClosingChannelsBuilder_ == null) {
        return pendingClosingChannels_.get(index);  } else {
        return pendingClosingChannelsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder> 
         getPendingClosingChannelsOrBuilderList() {
      if (pendingClosingChannelsBuilder_ != null) {
        return pendingClosingChannelsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(pendingClosingChannels_);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder addPendingClosingChannelsBuilder() {
      return getPendingClosingChannelsFieldBuilder().addBuilder(
          lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder addPendingClosingChannelsBuilder(
        int index) {
      return getPendingClosingChannelsFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; Channels pending closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder> 
         getPendingClosingChannelsBuilderList() {
      return getPendingClosingChannelsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder> 
        getPendingClosingChannelsFieldBuilder() {
      if (pendingClosingChannelsBuilder_ == null) {
        pendingClosingChannelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.ClosedChannelOrBuilder>(
                pendingClosingChannels_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        pendingClosingChannels_ = null;
      }
      return pendingClosingChannelsBuilder_;
    }

    private java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel> pendingForceClosingChannels_ =
      java.util.Collections.emptyList();
    private void ensurePendingForceClosingChannelsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        pendingForceClosingChannels_ = new java.util.ArrayList<lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel>(pendingForceClosingChannels_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder> pendingForceClosingChannelsBuilder_;

    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel> getPendingForceClosingChannelsList() {
      if (pendingForceClosingChannelsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(pendingForceClosingChannels_);
      } else {
        return pendingForceClosingChannelsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public int getPendingForceClosingChannelsCount() {
      if (pendingForceClosingChannelsBuilder_ == null) {
        return pendingForceClosingChannels_.size();
      } else {
        return pendingForceClosingChannelsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel getPendingForceClosingChannels(int index) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        return pendingForceClosingChannels_.get(index);
      } else {
        return pendingForceClosingChannelsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder setPendingForceClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel value) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingForceClosingChannelsIsMutable();
        pendingForceClosingChannels_.set(index, value);
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder setPendingForceClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder builderForValue) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        ensurePendingForceClosingChannelsIsMutable();
        pendingForceClosingChannels_.set(index, builderForValue.build());
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder addPendingForceClosingChannels(lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel value) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingForceClosingChannelsIsMutable();
        pendingForceClosingChannels_.add(value);
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder addPendingForceClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel value) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingForceClosingChannelsIsMutable();
        pendingForceClosingChannels_.add(index, value);
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder addPendingForceClosingChannels(
        lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder builderForValue) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        ensurePendingForceClosingChannelsIsMutable();
        pendingForceClosingChannels_.add(builderForValue.build());
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder addPendingForceClosingChannels(
        int index, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder builderForValue) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        ensurePendingForceClosingChannelsIsMutable();
        pendingForceClosingChannels_.add(index, builderForValue.build());
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder addAllPendingForceClosingChannels(
        java.lang.Iterable<? extends lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel> values) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        ensurePendingForceClosingChannelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pendingForceClosingChannels_);
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder clearPendingForceClosingChannels() {
      if (pendingForceClosingChannelsBuilder_ == null) {
        pendingForceClosingChannels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public Builder removePendingForceClosingChannels(int index) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        ensurePendingForceClosingChannelsIsMutable();
        pendingForceClosingChannels_.remove(index);
        onChanged();
      } else {
        pendingForceClosingChannelsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder getPendingForceClosingChannelsBuilder(
        int index) {
      return getPendingForceClosingChannelsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder getPendingForceClosingChannelsOrBuilder(
        int index) {
      if (pendingForceClosingChannelsBuilder_ == null) {
        return pendingForceClosingChannels_.get(index);  } else {
        return pendingForceClosingChannelsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder> 
         getPendingForceClosingChannelsOrBuilderList() {
      if (pendingForceClosingChannelsBuilder_ != null) {
        return pendingForceClosingChannelsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(pendingForceClosingChannels_);
      }
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder addPendingForceClosingChannelsBuilder() {
      return getPendingForceClosingChannelsFieldBuilder().addBuilder(
          lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder addPendingForceClosingChannelsBuilder(
        int index) {
      return getPendingForceClosingChannelsFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; Channels pending force closing
     * </pre>
     *
     * <code>repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder> 
         getPendingForceClosingChannelsBuilderList() {
      return getPendingForceClosingChannelsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder> 
        getPendingForceClosingChannelsFieldBuilder() {
      if (pendingForceClosingChannelsBuilder_ == null) {
        pendingForceClosingChannelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannel.Builder, lightpay.lnd.grpc.PendingChannelsResponse.ForceClosedChannelOrBuilder>(
                pendingForceClosingChannels_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        pendingForceClosingChannels_ = null;
      }
      return pendingForceClosingChannelsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.PendingChannelsResponse)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse)
  private static final lightpay.lnd.grpc.PendingChannelsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.PendingChannelsResponse();
  }

  public static lightpay.lnd.grpc.PendingChannelsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PendingChannelsResponse>
      PARSER = new com.google.protobuf.AbstractParser<PendingChannelsResponse>() {
    public PendingChannelsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PendingChannelsResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PendingChannelsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PendingChannelsResponse> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.PendingChannelsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

