// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * <pre>
 **
 *A path through the channel graph which runs over one or more channels in
 *succession. This struct carries all the information required to craft the
 *Sphinx onion packet, and send the payment along the first hop in the path. A
 *route is only selected as valid if all the channels have sufficient capacity to
 *carry the initial payment amount after fees are accounted for.
 * </pre>
 *
 * Protobuf type {@code lnrpc.Route}
 */
public  final class Route extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.Route)
    RouteOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Route.newBuilder() to construct.
  private Route(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Route() {
    totalTimeLock_ = 0;
    totalFees_ = 0L;
    totalAmt_ = 0L;
    hops_ = java.util.Collections.emptyList();
    totalFeesMsat_ = 0L;
    totalAmtMsat_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Route(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            totalTimeLock_ = input.readUInt32();
            break;
          }
          case 16: {

            totalFees_ = input.readInt64();
            break;
          }
          case 24: {

            totalAmt_ = input.readInt64();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              hops_ = new java.util.ArrayList<lightpay.lnd.grpc.Hop>();
              mutable_bitField0_ |= 0x00000008;
            }
            hops_.add(
                input.readMessage(lightpay.lnd.grpc.Hop.parser(), extensionRegistry));
            break;
          }
          case 40: {

            totalFeesMsat_ = input.readInt64();
            break;
          }
          case 48: {

            totalAmtMsat_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        hops_ = java.util.Collections.unmodifiableList(hops_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Route_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Route_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.Route.class, lightpay.lnd.grpc.Route.Builder.class);
  }

  private int bitField0_;
  public static final int TOTAL_TIME_LOCK_FIELD_NUMBER = 1;
  private int totalTimeLock_;
  /**
   * <pre>
   **
   *The cumulative (final) time lock across the entire route.  This is the CLTV
   *value that should be extended to the first hop in the route. All other hops
   *will decrement the time-lock as advertised, leaving enough time for all
   *hops to wait for or present the payment preimage to complete the payment.
   * </pre>
   *
   * <code>uint32 total_time_lock = 1[json_name = "total_time_lock"];</code>
   */
  public int getTotalTimeLock() {
    return totalTimeLock_;
  }

  public static final int TOTAL_FEES_FIELD_NUMBER = 2;
  private long totalFees_;
  /**
   * <pre>
   **
   *The sum of the fees paid at each hop within the final route.  In the case
   *of a one-hop payment, this value will be zero as we don't need to pay a fee
   *it ourself.
   * </pre>
   *
   * <code>int64 total_fees = 2[json_name = "total_fees", deprecated = true];</code>
   */
  @java.lang.Deprecated public long getTotalFees() {
    return totalFees_;
  }

  public static final int TOTAL_AMT_FIELD_NUMBER = 3;
  private long totalAmt_;
  /**
   * <pre>
   **
   *The total amount of funds required to complete a payment over this route.
   *This value includes the cumulative fees at each hop. As a result, the HTLC
   *extended to the first-hop in the route will need to have at least this many
   *satoshis, otherwise the route will fail at an intermediate node due to an
   *insufficient amount of fees.
   * </pre>
   *
   * <code>int64 total_amt = 3[json_name = "total_amt", deprecated = true];</code>
   */
  @java.lang.Deprecated public long getTotalAmt() {
    return totalAmt_;
  }

  public static final int HOPS_FIELD_NUMBER = 4;
  private java.util.List<lightpay.lnd.grpc.Hop> hops_;
  /**
   * <pre>
   **
   *Contains details concerning the specific forwarding details at each hop.
   * </pre>
   *
   * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
   */
  public java.util.List<lightpay.lnd.grpc.Hop> getHopsList() {
    return hops_;
  }
  /**
   * <pre>
   **
   *Contains details concerning the specific forwarding details at each hop.
   * </pre>
   *
   * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.HopOrBuilder> 
      getHopsOrBuilderList() {
    return hops_;
  }
  /**
   * <pre>
   **
   *Contains details concerning the specific forwarding details at each hop.
   * </pre>
   *
   * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
   */
  public int getHopsCount() {
    return hops_.size();
  }
  /**
   * <pre>
   **
   *Contains details concerning the specific forwarding details at each hop.
   * </pre>
   *
   * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
   */
  public lightpay.lnd.grpc.Hop getHops(int index) {
    return hops_.get(index);
  }
  /**
   * <pre>
   **
   *Contains details concerning the specific forwarding details at each hop.
   * </pre>
   *
   * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
   */
  public lightpay.lnd.grpc.HopOrBuilder getHopsOrBuilder(
      int index) {
    return hops_.get(index);
  }

  public static final int TOTAL_FEES_MSAT_FIELD_NUMBER = 5;
  private long totalFeesMsat_;
  /**
   * <pre>
   **
   *The total fees in millisatoshis.
   * </pre>
   *
   * <code>int64 total_fees_msat = 5[json_name = "total_fees_msat"];</code>
   */
  public long getTotalFeesMsat() {
    return totalFeesMsat_;
  }

  public static final int TOTAL_AMT_MSAT_FIELD_NUMBER = 6;
  private long totalAmtMsat_;
  /**
   * <pre>
   **
   *The total amount in millisatoshis.
   * </pre>
   *
   * <code>int64 total_amt_msat = 6[json_name = "total_amt_msat"];</code>
   */
  public long getTotalAmtMsat() {
    return totalAmtMsat_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (totalTimeLock_ != 0) {
      output.writeUInt32(1, totalTimeLock_);
    }
    if (totalFees_ != 0L) {
      output.writeInt64(2, totalFees_);
    }
    if (totalAmt_ != 0L) {
      output.writeInt64(3, totalAmt_);
    }
    for (int i = 0; i < hops_.size(); i++) {
      output.writeMessage(4, hops_.get(i));
    }
    if (totalFeesMsat_ != 0L) {
      output.writeInt64(5, totalFeesMsat_);
    }
    if (totalAmtMsat_ != 0L) {
      output.writeInt64(6, totalAmtMsat_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (totalTimeLock_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, totalTimeLock_);
    }
    if (totalFees_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, totalFees_);
    }
    if (totalAmt_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, totalAmt_);
    }
    for (int i = 0; i < hops_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, hops_.get(i));
    }
    if (totalFeesMsat_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, totalFeesMsat_);
    }
    if (totalAmtMsat_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, totalAmtMsat_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.Route)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.Route other = (lightpay.lnd.grpc.Route) obj;

    boolean result = true;
    result = result && (getTotalTimeLock()
        == other.getTotalTimeLock());
    result = result && (getTotalFees()
        == other.getTotalFees());
    result = result && (getTotalAmt()
        == other.getTotalAmt());
    result = result && getHopsList()
        .equals(other.getHopsList());
    result = result && (getTotalFeesMsat()
        == other.getTotalFeesMsat());
    result = result && (getTotalAmtMsat()
        == other.getTotalAmtMsat());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOTAL_TIME_LOCK_FIELD_NUMBER;
    hash = (53 * hash) + getTotalTimeLock();
    hash = (37 * hash) + TOTAL_FEES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalFees());
    hash = (37 * hash) + TOTAL_AMT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalAmt());
    if (getHopsCount() > 0) {
      hash = (37 * hash) + HOPS_FIELD_NUMBER;
      hash = (53 * hash) + getHopsList().hashCode();
    }
    hash = (37 * hash) + TOTAL_FEES_MSAT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalFeesMsat());
    hash = (37 * hash) + TOTAL_AMT_MSAT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalAmtMsat());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.Route parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.Route parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Route parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.Route parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Route parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.Route parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Route parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.Route parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Route parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.Route parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.Route parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.Route parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.Route prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   *A path through the channel graph which runs over one or more channels in
   *succession. This struct carries all the information required to craft the
   *Sphinx onion packet, and send the payment along the first hop in the path. A
   *route is only selected as valid if all the channels have sufficient capacity to
   *carry the initial payment amount after fees are accounted for.
   * </pre>
   *
   * Protobuf type {@code lnrpc.Route}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.Route)
      lightpay.lnd.grpc.RouteOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Route_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Route_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.Route.class, lightpay.lnd.grpc.Route.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.Route.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getHopsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      totalTimeLock_ = 0;

      totalFees_ = 0L;

      totalAmt_ = 0L;

      if (hopsBuilder_ == null) {
        hops_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        hopsBuilder_.clear();
      }
      totalFeesMsat_ = 0L;

      totalAmtMsat_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_Route_descriptor;
    }

    public lightpay.lnd.grpc.Route getDefaultInstanceForType() {
      return lightpay.lnd.grpc.Route.getDefaultInstance();
    }

    public lightpay.lnd.grpc.Route build() {
      lightpay.lnd.grpc.Route result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.Route buildPartial() {
      lightpay.lnd.grpc.Route result = new lightpay.lnd.grpc.Route(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.totalTimeLock_ = totalTimeLock_;
      result.totalFees_ = totalFees_;
      result.totalAmt_ = totalAmt_;
      if (hopsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          hops_ = java.util.Collections.unmodifiableList(hops_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.hops_ = hops_;
      } else {
        result.hops_ = hopsBuilder_.build();
      }
      result.totalFeesMsat_ = totalFeesMsat_;
      result.totalAmtMsat_ = totalAmtMsat_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.Route) {
        return mergeFrom((lightpay.lnd.grpc.Route)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.Route other) {
      if (other == lightpay.lnd.grpc.Route.getDefaultInstance()) return this;
      if (other.getTotalTimeLock() != 0) {
        setTotalTimeLock(other.getTotalTimeLock());
      }
      if (other.getTotalFees() != 0L) {
        setTotalFees(other.getTotalFees());
      }
      if (other.getTotalAmt() != 0L) {
        setTotalAmt(other.getTotalAmt());
      }
      if (hopsBuilder_ == null) {
        if (!other.hops_.isEmpty()) {
          if (hops_.isEmpty()) {
            hops_ = other.hops_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHopsIsMutable();
            hops_.addAll(other.hops_);
          }
          onChanged();
        }
      } else {
        if (!other.hops_.isEmpty()) {
          if (hopsBuilder_.isEmpty()) {
            hopsBuilder_.dispose();
            hopsBuilder_ = null;
            hops_ = other.hops_;
            bitField0_ = (bitField0_ & ~0x00000008);
            hopsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHopsFieldBuilder() : null;
          } else {
            hopsBuilder_.addAllMessages(other.hops_);
          }
        }
      }
      if (other.getTotalFeesMsat() != 0L) {
        setTotalFeesMsat(other.getTotalFeesMsat());
      }
      if (other.getTotalAmtMsat() != 0L) {
        setTotalAmtMsat(other.getTotalAmtMsat());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.Route parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.Route) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int totalTimeLock_ ;
    /**
     * <pre>
     **
     *The cumulative (final) time lock across the entire route.  This is the CLTV
     *value that should be extended to the first hop in the route. All other hops
     *will decrement the time-lock as advertised, leaving enough time for all
     *hops to wait for or present the payment preimage to complete the payment.
     * </pre>
     *
     * <code>uint32 total_time_lock = 1[json_name = "total_time_lock"];</code>
     */
    public int getTotalTimeLock() {
      return totalTimeLock_;
    }
    /**
     * <pre>
     **
     *The cumulative (final) time lock across the entire route.  This is the CLTV
     *value that should be extended to the first hop in the route. All other hops
     *will decrement the time-lock as advertised, leaving enough time for all
     *hops to wait for or present the payment preimage to complete the payment.
     * </pre>
     *
     * <code>uint32 total_time_lock = 1[json_name = "total_time_lock"];</code>
     */
    public Builder setTotalTimeLock(int value) {
      
      totalTimeLock_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The cumulative (final) time lock across the entire route.  This is the CLTV
     *value that should be extended to the first hop in the route. All other hops
     *will decrement the time-lock as advertised, leaving enough time for all
     *hops to wait for or present the payment preimage to complete the payment.
     * </pre>
     *
     * <code>uint32 total_time_lock = 1[json_name = "total_time_lock"];</code>
     */
    public Builder clearTotalTimeLock() {
      
      totalTimeLock_ = 0;
      onChanged();
      return this;
    }

    private long totalFees_ ;
    /**
     * <pre>
     **
     *The sum of the fees paid at each hop within the final route.  In the case
     *of a one-hop payment, this value will be zero as we don't need to pay a fee
     *it ourself.
     * </pre>
     *
     * <code>int64 total_fees = 2[json_name = "total_fees", deprecated = true];</code>
     */
    @java.lang.Deprecated public long getTotalFees() {
      return totalFees_;
    }
    /**
     * <pre>
     **
     *The sum of the fees paid at each hop within the final route.  In the case
     *of a one-hop payment, this value will be zero as we don't need to pay a fee
     *it ourself.
     * </pre>
     *
     * <code>int64 total_fees = 2[json_name = "total_fees", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setTotalFees(long value) {
      
      totalFees_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The sum of the fees paid at each hop within the final route.  In the case
     *of a one-hop payment, this value will be zero as we don't need to pay a fee
     *it ourself.
     * </pre>
     *
     * <code>int64 total_fees = 2[json_name = "total_fees", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearTotalFees() {
      
      totalFees_ = 0L;
      onChanged();
      return this;
    }

    private long totalAmt_ ;
    /**
     * <pre>
     **
     *The total amount of funds required to complete a payment over this route.
     *This value includes the cumulative fees at each hop. As a result, the HTLC
     *extended to the first-hop in the route will need to have at least this many
     *satoshis, otherwise the route will fail at an intermediate node due to an
     *insufficient amount of fees.
     * </pre>
     *
     * <code>int64 total_amt = 3[json_name = "total_amt", deprecated = true];</code>
     */
    @java.lang.Deprecated public long getTotalAmt() {
      return totalAmt_;
    }
    /**
     * <pre>
     **
     *The total amount of funds required to complete a payment over this route.
     *This value includes the cumulative fees at each hop. As a result, the HTLC
     *extended to the first-hop in the route will need to have at least this many
     *satoshis, otherwise the route will fail at an intermediate node due to an
     *insufficient amount of fees.
     * </pre>
     *
     * <code>int64 total_amt = 3[json_name = "total_amt", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setTotalAmt(long value) {
      
      totalAmt_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The total amount of funds required to complete a payment over this route.
     *This value includes the cumulative fees at each hop. As a result, the HTLC
     *extended to the first-hop in the route will need to have at least this many
     *satoshis, otherwise the route will fail at an intermediate node due to an
     *insufficient amount of fees.
     * </pre>
     *
     * <code>int64 total_amt = 3[json_name = "total_amt", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearTotalAmt() {
      
      totalAmt_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<lightpay.lnd.grpc.Hop> hops_ =
      java.util.Collections.emptyList();
    private void ensureHopsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        hops_ = new java.util.ArrayList<lightpay.lnd.grpc.Hop>(hops_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.Hop, lightpay.lnd.grpc.Hop.Builder, lightpay.lnd.grpc.HopOrBuilder> hopsBuilder_;

    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.Hop> getHopsList() {
      if (hopsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(hops_);
      } else {
        return hopsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public int getHopsCount() {
      if (hopsBuilder_ == null) {
        return hops_.size();
      } else {
        return hopsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public lightpay.lnd.grpc.Hop getHops(int index) {
      if (hopsBuilder_ == null) {
        return hops_.get(index);
      } else {
        return hopsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder setHops(
        int index, lightpay.lnd.grpc.Hop value) {
      if (hopsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHopsIsMutable();
        hops_.set(index, value);
        onChanged();
      } else {
        hopsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder setHops(
        int index, lightpay.lnd.grpc.Hop.Builder builderForValue) {
      if (hopsBuilder_ == null) {
        ensureHopsIsMutable();
        hops_.set(index, builderForValue.build());
        onChanged();
      } else {
        hopsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder addHops(lightpay.lnd.grpc.Hop value) {
      if (hopsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHopsIsMutable();
        hops_.add(value);
        onChanged();
      } else {
        hopsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder addHops(
        int index, lightpay.lnd.grpc.Hop value) {
      if (hopsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHopsIsMutable();
        hops_.add(index, value);
        onChanged();
      } else {
        hopsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder addHops(
        lightpay.lnd.grpc.Hop.Builder builderForValue) {
      if (hopsBuilder_ == null) {
        ensureHopsIsMutable();
        hops_.add(builderForValue.build());
        onChanged();
      } else {
        hopsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder addHops(
        int index, lightpay.lnd.grpc.Hop.Builder builderForValue) {
      if (hopsBuilder_ == null) {
        ensureHopsIsMutable();
        hops_.add(index, builderForValue.build());
        onChanged();
      } else {
        hopsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder addAllHops(
        java.lang.Iterable<? extends lightpay.lnd.grpc.Hop> values) {
      if (hopsBuilder_ == null) {
        ensureHopsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hops_);
        onChanged();
      } else {
        hopsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder clearHops() {
      if (hopsBuilder_ == null) {
        hops_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        hopsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public Builder removeHops(int index) {
      if (hopsBuilder_ == null) {
        ensureHopsIsMutable();
        hops_.remove(index);
        onChanged();
      } else {
        hopsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public lightpay.lnd.grpc.Hop.Builder getHopsBuilder(
        int index) {
      return getHopsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public lightpay.lnd.grpc.HopOrBuilder getHopsOrBuilder(
        int index) {
      if (hopsBuilder_ == null) {
        return hops_.get(index);  } else {
        return hopsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.HopOrBuilder> 
         getHopsOrBuilderList() {
      if (hopsBuilder_ != null) {
        return hopsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(hops_);
      }
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public lightpay.lnd.grpc.Hop.Builder addHopsBuilder() {
      return getHopsFieldBuilder().addBuilder(
          lightpay.lnd.grpc.Hop.getDefaultInstance());
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public lightpay.lnd.grpc.Hop.Builder addHopsBuilder(
        int index) {
      return getHopsFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.Hop.getDefaultInstance());
    }
    /**
     * <pre>
     **
     *Contains details concerning the specific forwarding details at each hop.
     * </pre>
     *
     * <code>repeated .lnrpc.Hop hops = 4[json_name = "hops"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.Hop.Builder> 
         getHopsBuilderList() {
      return getHopsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.Hop, lightpay.lnd.grpc.Hop.Builder, lightpay.lnd.grpc.HopOrBuilder> 
        getHopsFieldBuilder() {
      if (hopsBuilder_ == null) {
        hopsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.Hop, lightpay.lnd.grpc.Hop.Builder, lightpay.lnd.grpc.HopOrBuilder>(
                hops_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        hops_ = null;
      }
      return hopsBuilder_;
    }

    private long totalFeesMsat_ ;
    /**
     * <pre>
     **
     *The total fees in millisatoshis.
     * </pre>
     *
     * <code>int64 total_fees_msat = 5[json_name = "total_fees_msat"];</code>
     */
    public long getTotalFeesMsat() {
      return totalFeesMsat_;
    }
    /**
     * <pre>
     **
     *The total fees in millisatoshis.
     * </pre>
     *
     * <code>int64 total_fees_msat = 5[json_name = "total_fees_msat"];</code>
     */
    public Builder setTotalFeesMsat(long value) {
      
      totalFeesMsat_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The total fees in millisatoshis.
     * </pre>
     *
     * <code>int64 total_fees_msat = 5[json_name = "total_fees_msat"];</code>
     */
    public Builder clearTotalFeesMsat() {
      
      totalFeesMsat_ = 0L;
      onChanged();
      return this;
    }

    private long totalAmtMsat_ ;
    /**
     * <pre>
     **
     *The total amount in millisatoshis.
     * </pre>
     *
     * <code>int64 total_amt_msat = 6[json_name = "total_amt_msat"];</code>
     */
    public long getTotalAmtMsat() {
      return totalAmtMsat_;
    }
    /**
     * <pre>
     **
     *The total amount in millisatoshis.
     * </pre>
     *
     * <code>int64 total_amt_msat = 6[json_name = "total_amt_msat"];</code>
     */
    public Builder setTotalAmtMsat(long value) {
      
      totalAmtMsat_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *The total amount in millisatoshis.
     * </pre>
     *
     * <code>int64 total_amt_msat = 6[json_name = "total_amt_msat"];</code>
     */
    public Builder clearTotalAmtMsat() {
      
      totalAmtMsat_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.Route)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.Route)
  private static final lightpay.lnd.grpc.Route DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.Route();
  }

  public static lightpay.lnd.grpc.Route getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Route>
      PARSER = new com.google.protobuf.AbstractParser<Route>() {
    public Route parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Route(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Route> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Route> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.Route getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

