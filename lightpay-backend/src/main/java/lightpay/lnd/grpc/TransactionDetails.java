// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package lightpay.lnd.grpc;

/**
 * Protobuf type {@code lnrpc.TransactionDetails}
 */
public  final class TransactionDetails extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lnrpc.TransactionDetails)
    TransactionDetailsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TransactionDetails.newBuilder() to construct.
  private TransactionDetails(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TransactionDetails() {
    transactions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TransactionDetails(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              transactions_ = new java.util.ArrayList<lightpay.lnd.grpc.Transaction>();
              mutable_bitField0_ |= 0x00000001;
            }
            transactions_.add(
                input.readMessage(lightpay.lnd.grpc.Transaction.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        transactions_ = java.util.Collections.unmodifiableList(transactions_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_TransactionDetails_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_TransactionDetails_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lightpay.lnd.grpc.TransactionDetails.class, lightpay.lnd.grpc.TransactionDetails.Builder.class);
  }

  public static final int TRANSACTIONS_FIELD_NUMBER = 1;
  private java.util.List<lightpay.lnd.grpc.Transaction> transactions_;
  /**
   * <pre>
   *&#47; The list of transactions relevant to the wallet.
   * </pre>
   *
   * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
   */
  public java.util.List<lightpay.lnd.grpc.Transaction> getTransactionsList() {
    return transactions_;
  }
  /**
   * <pre>
   *&#47; The list of transactions relevant to the wallet.
   * </pre>
   *
   * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
   */
  public java.util.List<? extends lightpay.lnd.grpc.TransactionOrBuilder> 
      getTransactionsOrBuilderList() {
    return transactions_;
  }
  /**
   * <pre>
   *&#47; The list of transactions relevant to the wallet.
   * </pre>
   *
   * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
   */
  public int getTransactionsCount() {
    return transactions_.size();
  }
  /**
   * <pre>
   *&#47; The list of transactions relevant to the wallet.
   * </pre>
   *
   * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
   */
  public lightpay.lnd.grpc.Transaction getTransactions(int index) {
    return transactions_.get(index);
  }
  /**
   * <pre>
   *&#47; The list of transactions relevant to the wallet.
   * </pre>
   *
   * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
   */
  public lightpay.lnd.grpc.TransactionOrBuilder getTransactionsOrBuilder(
      int index) {
    return transactions_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < transactions_.size(); i++) {
      output.writeMessage(1, transactions_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < transactions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, transactions_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lightpay.lnd.grpc.TransactionDetails)) {
      return super.equals(obj);
    }
    lightpay.lnd.grpc.TransactionDetails other = (lightpay.lnd.grpc.TransactionDetails) obj;

    boolean result = true;
    result = result && getTransactionsList()
        .equals(other.getTransactionsList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTransactionsCount() > 0) {
      hash = (37 * hash) + TRANSACTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getTransactionsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lightpay.lnd.grpc.TransactionDetails parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lightpay.lnd.grpc.TransactionDetails prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code lnrpc.TransactionDetails}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lnrpc.TransactionDetails)
      lightpay.lnd.grpc.TransactionDetailsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_TransactionDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_TransactionDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lightpay.lnd.grpc.TransactionDetails.class, lightpay.lnd.grpc.TransactionDetails.Builder.class);
    }

    // Construct using lightpay.lnd.grpc.TransactionDetails.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTransactionsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (transactionsBuilder_ == null) {
        transactions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        transactionsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lightpay.lnd.grpc.Rpc.internal_static_lnrpc_TransactionDetails_descriptor;
    }

    public lightpay.lnd.grpc.TransactionDetails getDefaultInstanceForType() {
      return lightpay.lnd.grpc.TransactionDetails.getDefaultInstance();
    }

    public lightpay.lnd.grpc.TransactionDetails build() {
      lightpay.lnd.grpc.TransactionDetails result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lightpay.lnd.grpc.TransactionDetails buildPartial() {
      lightpay.lnd.grpc.TransactionDetails result = new lightpay.lnd.grpc.TransactionDetails(this);
      int from_bitField0_ = bitField0_;
      if (transactionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          transactions_ = java.util.Collections.unmodifiableList(transactions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.transactions_ = transactions_;
      } else {
        result.transactions_ = transactionsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lightpay.lnd.grpc.TransactionDetails) {
        return mergeFrom((lightpay.lnd.grpc.TransactionDetails)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lightpay.lnd.grpc.TransactionDetails other) {
      if (other == lightpay.lnd.grpc.TransactionDetails.getDefaultInstance()) return this;
      if (transactionsBuilder_ == null) {
        if (!other.transactions_.isEmpty()) {
          if (transactions_.isEmpty()) {
            transactions_ = other.transactions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTransactionsIsMutable();
            transactions_.addAll(other.transactions_);
          }
          onChanged();
        }
      } else {
        if (!other.transactions_.isEmpty()) {
          if (transactionsBuilder_.isEmpty()) {
            transactionsBuilder_.dispose();
            transactionsBuilder_ = null;
            transactions_ = other.transactions_;
            bitField0_ = (bitField0_ & ~0x00000001);
            transactionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTransactionsFieldBuilder() : null;
          } else {
            transactionsBuilder_.addAllMessages(other.transactions_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lightpay.lnd.grpc.TransactionDetails parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lightpay.lnd.grpc.TransactionDetails) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<lightpay.lnd.grpc.Transaction> transactions_ =
      java.util.Collections.emptyList();
    private void ensureTransactionsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        transactions_ = new java.util.ArrayList<lightpay.lnd.grpc.Transaction>(transactions_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.Transaction, lightpay.lnd.grpc.Transaction.Builder, lightpay.lnd.grpc.TransactionOrBuilder> transactionsBuilder_;

    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.Transaction> getTransactionsList() {
      if (transactionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(transactions_);
      } else {
        return transactionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public int getTransactionsCount() {
      if (transactionsBuilder_ == null) {
        return transactions_.size();
      } else {
        return transactionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public lightpay.lnd.grpc.Transaction getTransactions(int index) {
      if (transactionsBuilder_ == null) {
        return transactions_.get(index);
      } else {
        return transactionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder setTransactions(
        int index, lightpay.lnd.grpc.Transaction value) {
      if (transactionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionsIsMutable();
        transactions_.set(index, value);
        onChanged();
      } else {
        transactionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder setTransactions(
        int index, lightpay.lnd.grpc.Transaction.Builder builderForValue) {
      if (transactionsBuilder_ == null) {
        ensureTransactionsIsMutable();
        transactions_.set(index, builderForValue.build());
        onChanged();
      } else {
        transactionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder addTransactions(lightpay.lnd.grpc.Transaction value) {
      if (transactionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionsIsMutable();
        transactions_.add(value);
        onChanged();
      } else {
        transactionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder addTransactions(
        int index, lightpay.lnd.grpc.Transaction value) {
      if (transactionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionsIsMutable();
        transactions_.add(index, value);
        onChanged();
      } else {
        transactionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder addTransactions(
        lightpay.lnd.grpc.Transaction.Builder builderForValue) {
      if (transactionsBuilder_ == null) {
        ensureTransactionsIsMutable();
        transactions_.add(builderForValue.build());
        onChanged();
      } else {
        transactionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder addTransactions(
        int index, lightpay.lnd.grpc.Transaction.Builder builderForValue) {
      if (transactionsBuilder_ == null) {
        ensureTransactionsIsMutable();
        transactions_.add(index, builderForValue.build());
        onChanged();
      } else {
        transactionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder addAllTransactions(
        java.lang.Iterable<? extends lightpay.lnd.grpc.Transaction> values) {
      if (transactionsBuilder_ == null) {
        ensureTransactionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transactions_);
        onChanged();
      } else {
        transactionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder clearTransactions() {
      if (transactionsBuilder_ == null) {
        transactions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        transactionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public Builder removeTransactions(int index) {
      if (transactionsBuilder_ == null) {
        ensureTransactionsIsMutable();
        transactions_.remove(index);
        onChanged();
      } else {
        transactionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public lightpay.lnd.grpc.Transaction.Builder getTransactionsBuilder(
        int index) {
      return getTransactionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public lightpay.lnd.grpc.TransactionOrBuilder getTransactionsOrBuilder(
        int index) {
      if (transactionsBuilder_ == null) {
        return transactions_.get(index);  } else {
        return transactionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public java.util.List<? extends lightpay.lnd.grpc.TransactionOrBuilder> 
         getTransactionsOrBuilderList() {
      if (transactionsBuilder_ != null) {
        return transactionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(transactions_);
      }
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public lightpay.lnd.grpc.Transaction.Builder addTransactionsBuilder() {
      return getTransactionsFieldBuilder().addBuilder(
          lightpay.lnd.grpc.Transaction.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public lightpay.lnd.grpc.Transaction.Builder addTransactionsBuilder(
        int index) {
      return getTransactionsFieldBuilder().addBuilder(
          index, lightpay.lnd.grpc.Transaction.getDefaultInstance());
    }
    /**
     * <pre>
     *&#47; The list of transactions relevant to the wallet.
     * </pre>
     *
     * <code>repeated .lnrpc.Transaction transactions = 1[json_name = "transactions"];</code>
     */
    public java.util.List<lightpay.lnd.grpc.Transaction.Builder> 
         getTransactionsBuilderList() {
      return getTransactionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lightpay.lnd.grpc.Transaction, lightpay.lnd.grpc.Transaction.Builder, lightpay.lnd.grpc.TransactionOrBuilder> 
        getTransactionsFieldBuilder() {
      if (transactionsBuilder_ == null) {
        transactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lightpay.lnd.grpc.Transaction, lightpay.lnd.grpc.Transaction.Builder, lightpay.lnd.grpc.TransactionOrBuilder>(
                transactions_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        transactions_ = null;
      }
      return transactionsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lnrpc.TransactionDetails)
  }

  // @@protoc_insertion_point(class_scope:lnrpc.TransactionDetails)
  private static final lightpay.lnd.grpc.TransactionDetails DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lightpay.lnd.grpc.TransactionDetails();
  }

  public static lightpay.lnd.grpc.TransactionDetails getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TransactionDetails>
      PARSER = new com.google.protobuf.AbstractParser<TransactionDetails>() {
    public TransactionDetails parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TransactionDetails(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TransactionDetails> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TransactionDetails> getParserForType() {
    return PARSER;
  }

  public lightpay.lnd.grpc.TransactionDetails getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

